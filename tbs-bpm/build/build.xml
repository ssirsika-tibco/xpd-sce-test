<?xml version="1.0" encoding="UTF-8"?>
<project name="project" default="default">
    <description>
        Builds all features.
    </description>
    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="lib/ant-contrib-1.0b3.jar" />
        </classpath>
    </taskdef>

    <target name="init">
        <loadfile property="product.features" srcFile="product-features.txt">
            <filterchain>
                <striplinecomments>
                    <comment value="#" />
                </striplinecomments>
                <suffixlines suffix="," />
                <striplinebreaks />
            </filterchain>
        </loadfile>
		<loadfile property="bx.product.features" srcFile="bx-product-features.txt">
            <filterchain>
                <striplinecomments>
                    <comment value="#" />
                </striplinecomments>
                <suffixlines suffix="," />
                <striplinebreaks />
            </filterchain>
        </loadfile>
        <loadfile property="test.features" srcFile="test-features.txt">
            <filterchain>
                <striplinecomments>
                    <comment value="#" />
                </striplinecomments>
                <suffixlines suffix="," />
                <striplinebreaks />
            </filterchain>
        </loadfile>
    </target>

    <target name="default" depends="build-product, clean-product" description="Default task: builds and then clean all product features." />

    <target name="build-all" depends="build-product, build-tests" description="Builds all product and test features." />
    <target name="clean-all" depends="clean-product, clean-tests" description="Builds all product features." />

    <target name="build-product" depends="init" description="Builds all product features.">
        <antcall target="-build">
            <param name="features" value="${product.features}" />
            <param name="feature.type" value="product" />
        </antcall> 
    </target>
	<target name="build-bx-product" depends="init" description="Builds all product features.">
        <antcall target="-build">
            <param name="features" value="${bx.product.features}" />
            <param name="feature.type" value="bx-product" />
        </antcall>
    </target>

    <target name="build-tests" depends="init" description="Builds all test features.">
        <antcall target="-build">
            <param name="features" value="${test.features}" />
            <param name="feature.type" value="tests" />
        </antcall>
    </target>

    <target name="clean-product" depends="init" description="Cleans all product features.">
        <antcall target="-clean">
            <param name="features" value="${product.features}" />
            <param name="feature.type" value="product" />
        </antcall>
        <delete>
            <fileset dir="../product">
                <include name="**/@dot.log" />
            </fileset>
        </delete>
    </target>

    <target name="clean-tests" depends="init" description="Cleans all test features.">
        <antcall target="-clean">
            <param name="features" value="${test.features}" />
            <param name="feature.type" value="tests" />
        </antcall>
        <delete>
            <fileset dir="../tests">
                <include name="**/@dot.log" />
            </fileset>
        </delete>
    </target>

    <!--
    Builds features (in order) using a provided list of feature names.
    
    @param features - commma separated list of feature names.
    @param feature.type - type of features ("product" | "tests")
    -->
    <target name="-build">
        <echo>Features to build: ${features}</echo>
        <for list="${features}" param="featureName">
            <sequential>
                <ant dir="../${feature.type}/@{featureName}" useNativeBasedir="true">
                    <target name="clean" />
                    <target name="conf-clean" />
                    <target name="build" />
                    <property name="official-release-build" value="true" />
                    <property name="autobuild.release.substitutions-bypass" value="true" />
                </ant>
            </sequential>
        </for>
    </target>

    <!--
    Cleans features using a provided list of feature names.
    
    @param features - commma separated list of feature names.
    @param feature.type - type of features ("product" | "tests")
    -->
    <target name="-clean">
        <echo>Features to clean: ${features}</echo>
        <for list="${features}" param="featureName">
            <sequential>
                <ant dir="../${feature.type}/@{featureName}" useNativeBasedir="true">
                    <target name="clean" />
                    <target name="conf-clean" />
                </ant>
                <!-- Sometimes tibco build leaves ${buildDirectory} dirs, so remove them as well. -->
                <delete includeemptydirs="true">
                    <!-- $$ is and escape mechanism so if there is a property a="x" then "This is $${a}" 
                        will be expanded to "This is ${a}" and not to "This is x"-->
                    <fileset dir="../${feature.type}/@{featureName}" includes="**/$${buildDirectory}/" defaultexcludes="false"/>
                </delete>
            </sequential>
        </for>
    </target>

</project>