package com.tibco.www.bx._2009.management.process;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

import com.tibco.www.bx._2009.management.processManagerType.CreateProcessInstanceInput;
import com.tibco.www.bx._2009.management.processManagerType.IllegalArgumentFault;
import com.tibco.www.bx._2009.management.processManagerType.ObjectFactory;
import com.tibco.www.bx._2009.management.processManagerType.OperationFailedFault;
import com.tibco.www.bx._2009.management.processManagerType.OperationInfo;
import com.tibco.www.bx._2009.management.processManagerType.QualifiedProcessName;
import com.tibco.www.bx._2009.management.processManagerType.StarterOperation;
import com.tibco.www.bx._2009.management.processManagerType.StarterOperations;

/**
 * Manage process templates and process instances.
 * 
 * 
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.4-b01 Generated
 * source version: 2.2
 * 
 */
@WebService(name = "processManagement", targetNamespace = "http://www.tibco.com/bx/2009/management/process")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({ ObjectFactory.class })
public interface ProcessManagement {

	/**
	 * Create a process instance using a starter operation. (See also:
	 * listStarterOperations and getStarterOperationInfo.)
	 * 
	 * 
	 * @param params
	 * @return returns java.lang.String
	 * @throws OperationFailedFault
	 * @throws IllegalArgumentFault
	 */
	@WebMethod(action = "createProcessInstance")
	@WebResult(name = "processID", targetNamespace = "http://www.tibco.com/bx/2009/management/processManagerType", partName = "params")
	public String createProcessInstance(
			@WebParam(name = "createProcessInstanceInput", targetNamespace = "http://www.tibco.com/bx/2009/management/processManagerType", partName = "params") CreateProcessInstanceInput params)
			throws IllegalArgumentFault, OperationFailedFault;

	/**
	 * List the parameter details for a particular starter operation. (See also:
	 * listStarterOperations and createProcessInstance.)
	 * 
	 * 
	 * @param params
	 * @return returns
	 *         com.tibco.bx._2009.management.processmanagertype.OperationInfo
	 * @throws OperationFailedFault
	 * @throws IllegalArgumentFault
	 */
	@WebMethod(action = "getStarterOperationInfo")
	@WebResult(name = "operationInfo", targetNamespace = "http://www.tibco.com/bx/2009/management/processManagerType", partName = "params")
	public OperationInfo getStarterOperationInfo(
			@WebParam(name = "starterOperation", targetNamespace = "http://www.tibco.com/bx/2009/management/processManagerType", partName = "params") StarterOperation params)
			throws IllegalArgumentFault, OperationFailedFault;

	/**
	 * List available starter operations for one or more process templates. See
	 * also createProcessInstance.
	 * 
	 * 
	 * @param params
	 * @return returns
	 *         com.tibco.bx._2009.management.processmanagertype.StarterOperations
	 * @throws OperationFailedFault
	 * @throws IllegalArgumentFault
	 */
	@WebMethod(action = "listStarterOperations")
	@WebResult(name = "starterOperations", targetNamespace = "http://www.tibco.com/bx/2009/management/processManagerType", partName = "params")
	public StarterOperations listStarterOperations(
			@WebParam(name = "qualifiedProcessName", targetNamespace = "http://www.tibco.com/bx/2009/management/processManagerType", partName = "params") QualifiedProcessName params)
			throws IllegalArgumentFault, OperationFailedFault;

}
