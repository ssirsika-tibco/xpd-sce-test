«EXTENSION com::tibco::bds::designtime::generator::oaw::helper»
«EXTENSION com::tibco::bds::designtime::generator::oaw::vars»
«EXTENSION com::tibco::bds::designtime::generator::oaw::BOMGlobalDataUtils»
«EXTENSION com::tibco::bds::designtime::generator::da::oaw::helper»

«DEFINE Root FOR uml::Model»
  «IF this.isGlobalDataBOM()»
  	«EXPAND PackageArtifacts»
  	«EXPAND PackageArtifacts FOREACH nestedPackage»
  «ENDIF»
«ENDDEFINE»

«DEFINE PackageArtifacts FOR uml::Package»
  «EXPAND ServiceInterface FOREACH ownedElement.typeSelect(uml::Class).select(c | c.isCaseClass())»
  «EXPAND ServiceImpl FOREACH ownedElement.typeSelect(uml::Class).select(c | c.isCaseClass())»
  «EXPAND PackageArtifacts FOREACH nestedPackage»
«ENDDEFINE»

«DEFINE GenericHeader FOR uml::NamedElement»
  //
  // AUTO-GENERATED BY BDS GENERATOR. DO NO EDIT THIS FILE, AS CHANGES WILL BE OVERWRITTEN.
  // Derived from BOM (model name '«getModel().getQualifiedName()»').
  //     

«ENDDEFINE»

«DEFINE ServiceInterface FOR uml::Class»
  «FILE getBaseSrcPath() + "/da/service/" + name + "Service.java"»«EXPAND GenericHeader»
    // This file is a case class service interface
    package «getPackageName()».da.service;

    public interface «name»Service extends «getServiceInterfaceBase()» {
    }
  «ENDFILE»
«ENDDEFINE»

«DEFINE ServiceImplCIDAdd FOR uml::Property»
	// CID «name»
	cidAttributes.add(«getPackageName()».«getEPackageName()».eINSTANCE.get«class.name»_«name.toFirstUpper()»());
«ENDDEFINE»

«DEFINE ServiceImplSearchableAdd FOR uml::Property»
	// Searchable «name»
	searchableAttributes.add(«getPackageName()».«getEPackageName()».eINSTANCE.get«class.name»_«name.toFirstUpper()»());
«ENDDEFINE»

«DEFINE ServiceImplAssociationAdd FOR uml::Property»
	// Association role name '«name»'
	associationReferences.put("«name»", 
		«getPackageName()».«getEPackageName()».eINSTANCE.get«class.name»_«name.toFirstUpper()»());
«ENDDEFINE»

«DEFINE ServiceImpl FOR uml::Class»
  «FILE getBaseSrcPath() + "/da/service/impl/" + name + "ServiceImpl.java"»«EXPAND GenericHeader»
    // This file is a case class service implementation
    package «getPackageName()».da.service.impl;

	import org.eclipse.emf.ecore.EClass;
	import org.eclipse.emf.ecore.EFactory;

    public class «name»ServiceImpl extends «getServiceImplBase()» implements «getPackageName()».da.service.«name»Service {

		public «name»ServiceImpl() {
			«EXPAND ServiceImplCIDAdd FOREACH allFeatures().typeSelect(uml::Property).select(p|p.class == this && p.isCID())»
			«EXPAND ServiceImplSearchableAdd FOREACH allFeatures().typeSelect(uml::Property).select(p|p.class == this && p.isSearchable() && !p.isCID())»
			«EXPAND ServiceImplAssociationAdd FOREACH allFeatures().typeSelect(uml::Property).select(p|p.association != null && !p.isComposite)»
		}

		@Override
		public EClass getObjectClass() {
			return «getPackageName()».«getEPackageName()».eINSTANCE.get«name»();
		}
		
		protected EFactory getFactory() {
			return «getPackageName()».«getEFactoryName()».eINSTANCE;
		}
	}
  «ENDFILE»
«ENDDEFINE»
