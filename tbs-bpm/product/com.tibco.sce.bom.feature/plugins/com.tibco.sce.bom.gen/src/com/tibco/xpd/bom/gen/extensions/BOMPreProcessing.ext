import uml;
extension org::fornax::cartridges::uml2::javabasic::extensions::DataType;
extension org::openarchitectureware::util::stdlib::io;

/*Starting point for the model modification*/
Void modify(uml::Model m) :
	info("--------------------") ->
	info("@@@@@@@@@@@@@@@@@ Starting BOM pre-processing @@@@@@@@@@@@@@@@@@@@@@") ->
	start(m) ->
	info("--------------------") ->
	m;
	
	
/*JavaPrimitiveTypes library is imported to uml::Model
and then all BOM primitve types are converted to Java primitive types*/
Void start(uml::Model m) :
	 m.importTypesLibrary("pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml","JavaPrimitiveTypes") ->
	 m.convertBOMTypes();

/* Imports the library with types.*/	
Void importTypesLibrary(uml::Model m, String libraryURI, String libraryName) :
	JAVA com.tibco.xpd.bos.gen.extensions.BOMExtensionHelper.importTypesLibrary(
		org.eclipse.uml2.uml.Package,
		java.lang.String,
		java.lang.String);
		
Void convertBOMTypes(uml::Model m) :
	m.allOwnedElements().typeSelect(uml::Class).ownedAttribute.select(e | e.type.metaType.isAssignableFrom(uml::PrimitiveType)).convertBOMType(m);	

Void convertBOMType(uml::TypedElement e, uml::Model m) :
	let x = e.type.getStandardTypeName():
		(x != null) ?
		//info(getType(m, x)) : 
		e.setType(let y = getType(m, x): (y == null ? createPrimitiveType(m, e.type): y)):
		null;

create uml::PrimitiveType createPrimitiveType(uml::Model m, uml::Type type) :
	setName(let x = e.type.getStandardTypeName(): (x == null ? t.name : x)) ->
	m.packagedElement.add(this);
	
	


//JAVA com.tibco.xpd.bos.gen.extensions.BOMExtensionHelper.test(org.eclipse.uml2.uml.TypedElement, org.eclipse.uml2.uml.Model);
	//info("E L E M E N T:") -> info(t) ->
		//info(x);

	
String getStandardTypeName(uml::Type t) :
	switch(t.name) {
		case "Boolean": "boolean"
	    case "Text": "String"
	    case "Integer": "int"
	    case "Decimal": "BigDecimal" 
	    case "DateTime": "Date"
	    case "Date": "Date"
	    case "Time": "Date"
	    default: (t.generals.typeSelect(uml::PrimitiveType).isEmpty ? null: t.generals.typeSelect(uml::PrimitiveType).first().getJavaTypeName())
	};