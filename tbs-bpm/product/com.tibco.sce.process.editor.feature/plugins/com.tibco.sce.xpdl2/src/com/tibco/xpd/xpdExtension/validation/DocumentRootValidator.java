/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package com.tibco.xpd.xpdExtension.validation;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.common.util.EMap;

import com.tibco.xpd.xpdExtension.ActivityResourcePatterns;
import com.tibco.xpd.xpdExtension.AssociatedCorrelationFields;
import com.tibco.xpd.xpdExtension.AssociatedParameters;
import com.tibco.xpd.xpdExtension.Audit;
import com.tibco.xpd.xpdExtension.ConstantPeriod;
import com.tibco.xpd.xpdExtension.CorrelationDataMappings;
import com.tibco.xpd.xpdExtension.Discriminator;
import com.tibco.xpd.xpdExtension.DurationCalculation;
import com.tibco.xpd.xpdExtension.ImplementedInterface;
import com.tibco.xpd.xpdExtension.InitialParameterValue;
import com.tibco.xpd.xpdExtension.InitialValues;
import com.tibco.xpd.xpdExtension.MultiInstanceScripts;
import com.tibco.xpd.xpdExtension.PortTypeOperation;
import com.tibco.xpd.xpdExtension.ProcessInterfaces;
import com.tibco.xpd.xpdExtension.ProcessResourcePatterns;
import com.tibco.xpd.xpdExtension.ScriptInformation;
import com.tibco.xpd.xpdExtension.TransformScript;
import com.tibco.xpd.xpdExtension.StandardLoopScript;
import com.tibco.xpd.xpdExtension.UserTaskScripts;
import com.tibco.xpd.xpdExtension.Visibility;
import com.tibco.xpd.xpdExtension.WsdlEventAssociation;
import com.tibco.xpd.xpdExtension.XpdExtAttributes;
import com.tibco.xpd.xpdExtension.XpdExtDataObjectAttributes;
import com.tibco.xpd.xpdl2.CatchThrow;
import com.tibco.xpd.xpdl2.Expression;
import com.tibco.xpd.xpdl2.ExternalReference;

/**
 * A sample validator interface for {@link com.tibco.xpd.xpdExtension.DocumentRoot}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface DocumentRootValidator {
    boolean validate();

    boolean validateXMLNSPrefixMap(EMap value);

    boolean validateXSISchemaLocation(EMap value);

    boolean validateImplementationType(String value);

    boolean validateDataObjectAttributes(EList<XpdExtDataObjectAttributes> value);

    boolean validateExtendedAttributes(EList<XpdExtAttributes> value);

    boolean validateDataObjectAttributes(XpdExtDataObjectAttributes value);

    boolean validateExtendedAttributes(XpdExtAttributes value);

    boolean validateContinueOnTimeout(boolean value);

    boolean validateAlias(String value);

    boolean validateConstantPeriod(EList<ConstantPeriod> value);

    boolean validateUserTaskScripts(EList<UserTaskScripts> value);

    boolean validateAudit(EList<Audit> value);

    boolean validateConstantPeriod(ConstantPeriod value);

    boolean validateUserTaskScripts(UserTaskScripts value);

    boolean validateAudit(Audit value);

    boolean validateScript(EList value);

    boolean validateInitialValues(EList<InitialValues> value);

    boolean validateAssociatedCorrelationFields(
            EList<AssociatedCorrelationFields> value);

    boolean validateAssociatedParameters(EList<AssociatedParameters> value);

    boolean validateImplementedInterface(EList<ImplementedInterface> value);

    boolean validateProcessInterfaces(EList<ProcessInterfaces> value);

    boolean validateInitialValues(InitialValues value);

    boolean validateAssociatedParameters(AssociatedParameters value);

    boolean validateImplementedInterface(ImplementedInterface value);

    boolean validateProcessInterfaces(ProcessInterfaces value);

    boolean validateWsdlEventAssociation(EList value);

    boolean validateInlineSubProcess(boolean value);

    boolean validateDocumentationURL(String value);

    boolean validateImplements(String value);

    boolean validateMultiInstanceScripts(EList<MultiInstanceScripts> value);

    boolean validateMultiInstanceScripts(MultiInstanceScripts value);

    boolean validateStandardLoopScript(StandardLoopScript value);

    boolean validateMandatory(boolean value);

    boolean validateProcessIdentifierField(String value);

    boolean validateExpression(EList<Expression> value);

    boolean validateExpression(Expression value);

    boolean validateVisibility(Visibility value);

    boolean validateSecurityProfile(String value);

    boolean validateLanguage(String value);

    boolean validateInitialParameterValue(EList value);

    boolean validateInitialValueMapping(boolean value);

    boolean validatePortTypeOperation(EList<PortTypeOperation> value);

    boolean validatePortTypeOperation(PortTypeOperation value);

    boolean validateTransport(String value);

    boolean validateIsChained(boolean value);

    boolean validateExternalReference(EList<ExternalReference> value);

    boolean validateProcessResourcePatterns(EList<ProcessResourcePatterns> value);

    boolean validateActivityResourcePatterns(
            EList<ActivityResourcePatterns> value);

    boolean validateExternalReference(ExternalReference value);

    boolean validateProcessResourcePatterns(ProcessResourcePatterns value);

    boolean validateActivityResourcePatterns(ActivityResourcePatterns value);

    boolean validateRequireNewTransaction(boolean value);

    boolean validateDurationCalculation(EList<DurationCalculation> value);

    boolean validateDiscriminator(EList<Discriminator> value);

    boolean validateDisplayName(String value);

    boolean validateCatchThrow(CatchThrow value);

    boolean validateIsRemote(boolean value);

    boolean validateCorrelationDataMappings(EList<CorrelationDataMappings> value);

    boolean validatePageflow(boolean value);

    boolean validateTransformScript(EList<TransformScript> value);

    boolean validatePublishAsBusinessService(boolean value);

    boolean validateBusinessServiceCategory(String value);

    boolean validateDurationCalculation(DurationCalculation value);

    boolean validateDiscriminator(Discriminator value);

    boolean validateRequireNew(boolean value);
}
