<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="com.tibco.xpd.processeditor.xpdl2">
<annotation>
      <appInfo>
         <meta.schema plugin="com.tibco.xpd.processeditor.xpdl2" id="dropObjectContibution" name="Drop Object On Diagram Contribution"/>
      </appInfo>
      <documentation>
         &lt;p&gt;
This extension point allows contribution of actions to perform when a LocalSelectionTransfer type drag-drop operation is dropped onto an object in the process diagram.
&lt;/p&gt;
&lt;p&gt;
Basically, when the user drags objects over a process diagram, the process diagram editor will check whether it can make sense of dropping the given objects onto the diagram object that is beneath the mouse. It will also ask any contributor to this extension point for any further actions that can be performed by dropping the objects onto the diagram object. These are appended to the base process editor actions.
&lt;/p&gt;
&lt;p&gt;
The contributor is first asked if there are any possible actions that can be performed when the mouse is being dragged (via its &lt;code&gt;IDropObjectContribution.getDropTypeInfo()&lt;/code&gt; method). If any contributor indicates that a drop is possible at this point then the user will be allowed to drop the objects onto the diagram object.
&lt;/p&gt;
&lt;p&gt;
When the user drops the objects then the process diagram editor will ask your contribution for actions that can be performed (if the &lt;code&gt;IDropObjectContribution.getDropTypeInfo()&lt;/code&gt; method indicates that a drop is possible). Your contribution can then return a list of &lt;code&gt;DropObjectPopupItem&lt;/code&gt; objects which describe the actions that can be performed. A &lt;code&gt;DropObjectPopupItem&lt;/code&gt; can be an EMF command to run, a list of objects that can be used to create diagram objects (such as XPDL2 Activities and Transitions representing tasks and seuqenceflow), a sub-menu or a completely custom command (with an interface that is executed on user selection.
&lt;/p&gt;
&lt;p&gt;
If more than one drop popup action is contributed then the user is presented with a popup context menu with all the choices. if only one executable action is contributed then it is executed immediately.
&lt;/p&gt;


      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="dropObject"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="dropObject">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="name"/>
         </appInfo>
      </annotation>
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":com.tibco.xpd.processeditor.xpdl2.extensions.IDropObjectContribution"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         3.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         You will need to create a class that implements the interface &lt;code&gt;com.tibco.xpd.processeditor.xpdl2.extensions.IDropObjectContribution&lt;/code&gt;
&lt;p&gt;
Your &lt;code&gt;getDropTypeInfo()&lt;/code&gt; implementation should analyse the list of objects being dropped and check whether it is a valid selection to be dropped on the given diagram target object.
&lt;/p&gt;
&lt;p&gt;
&lt;i&gt;See &lt;code&gt;com.tibco.xpd.processeditor.xpdl2.extensions.IDropObjectContribution.getDropTypeInfo()&lt;/code&gt; for more information.&lt;/i&gt;
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
Your &lt;code&gt;getDropPopupItems()&lt;/code&gt; should create a list of &lt;code&gt;com.tibco.xpd.processwidget.adapters.DropObjectPopupItem&lt;/code&gt; objects that represent the available actions for dropping the given objects onto the given target diagram object.
&lt;/p&gt;
&lt;p&gt;
&lt;i&gt;See &lt;code&gt;com.tibco.xpd.processeditor.xpdl2.extensions.IDropObjectContribution.getDropPopupItems()&lt;/code&gt; for more information.&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;


      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright Tibco Software Inc. (c) 2007, all rights reserved.

      </documentation>
   </annotation>

</schema>
