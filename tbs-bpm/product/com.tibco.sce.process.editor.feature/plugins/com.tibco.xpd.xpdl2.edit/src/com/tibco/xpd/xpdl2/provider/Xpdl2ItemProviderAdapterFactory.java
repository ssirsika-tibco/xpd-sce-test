/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package com.tibco.xpd.xpdl2.provider;

import com.tibco.xpd.xpdl2.util.Xpdl2AdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class Xpdl2ItemProviderAdapterFactory extends Xpdl2AdapterFactory
        implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public static final String copyright =
            "Copyright (c) TIBCO Software Inc 2004, 2009. All rights reserved."; //$NON-NLS-1$

    /**
     * This keeps track of the root adapter factory that delegates to this adapter factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ComposedAdapterFactory parentAdapterFactory;

    /**
     * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected IChangeNotifier changeNotifier = new ChangeNotifier();

    /**
     * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected Collection<Object> supportedTypes = new ArrayList<Object>();

    /**
     * This constructs an instance.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public Xpdl2ItemProviderAdapterFactory() {
        supportedTypes.add(IEditingDomainItemProvider.class);
        supportedTypes.add(IStructuredItemContentProvider.class);
        supportedTypes.add(ITreeItemContentProvider.class);
        supportedTypes.add(IItemLabelProvider.class);
        supportedTypes.add(IItemPropertySource.class);
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.ActivitySet} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ActivitySetItemProvider activitySetItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.ActivitySet}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createActivitySetAdapter() {
        if (activitySetItemProvider == null) {
            activitySetItemProvider = new ActivitySetItemProvider(this);
        }

        return activitySetItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Activity} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ActivityItemProvider activityItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Activity}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createActivityAdapter() {
        if (activityItemProvider == null) {
            activityItemProvider = new ActivityItemProvider(this);
        }

        return activityItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.ApplicationType} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ApplicationTypeItemProvider applicationTypeItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.ApplicationType}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createApplicationTypeAdapter() {
        if (applicationTypeItemProvider == null) {
            applicationTypeItemProvider = new ApplicationTypeItemProvider(this);
        }

        return applicationTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Application} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ApplicationItemProvider applicationItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Application}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createApplicationAdapter() {
        if (applicationItemProvider == null) {
            applicationItemProvider = new ApplicationItemProvider(this);
        }

        return applicationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.ArrayType} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ArrayTypeItemProvider arrayTypeItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.ArrayType}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createArrayTypeAdapter() {
        if (arrayTypeItemProvider == null) {
            arrayTypeItemProvider = new ArrayTypeItemProvider(this);
        }

        return arrayTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Artifact} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ArtifactItemProvider artifactItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Artifact}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createArtifactAdapter() {
        if (artifactItemProvider == null) {
            artifactItemProvider = new ArtifactItemProvider(this);
        }

        return artifactItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.ArtifactInput} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ArtifactInputItemProvider artifactInputItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.ArtifactInput}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createArtifactInputAdapter() {
        if (artifactInputItemProvider == null) {
            artifactInputItemProvider = new ArtifactInputItemProvider(this);
        }

        return artifactInputItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Assignment} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AssignmentItemProvider assignmentItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Assignment}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAssignmentAdapter() {
        if (assignmentItemProvider == null) {
            assignmentItemProvider = new AssignmentItemProvider(this);
        }

        return assignmentItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Association} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected AssociationItemProvider associationItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Association}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createAssociationAdapter() {
        if (associationItemProvider == null) {
            associationItemProvider = new AssociationItemProvider(this);
        }

        return associationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.BasicType} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected BasicTypeItemProvider basicTypeItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.BasicType}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createBasicTypeAdapter() {
        if (basicTypeItemProvider == null) {
            basicTypeItemProvider = new BasicTypeItemProvider(this);
        }

        return basicTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.BlockActivity} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected BlockActivityItemProvider blockActivityItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.BlockActivity}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createBlockActivityAdapter() {
        if (blockActivityItemProvider == null) {
            blockActivityItemProvider = new BlockActivityItemProvider(this);
        }

        return blockActivityItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.BusinessRuleApplication} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected BusinessRuleApplicationItemProvider businessRuleApplicationItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.BusinessRuleApplication}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createBusinessRuleApplicationAdapter() {
        if (businessRuleApplicationItemProvider == null) {
            businessRuleApplicationItemProvider =
                    new BusinessRuleApplicationItemProvider(this);
        }

        return businessRuleApplicationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Category} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CategoryItemProvider categoryItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Category}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCategoryAdapter() {
        if (categoryItemProvider == null) {
            categoryItemProvider = new CategoryItemProvider(this);
        }

        return categoryItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Class} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ClassItemProvider classItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Class}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createClassAdapter() {
        if (classItemProvider == null) {
            classItemProvider = new ClassItemProvider(this);
        }

        return classItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Codepage} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CodepageItemProvider codepageItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Codepage}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCodepageAdapter() {
        if (codepageItemProvider == null) {
            codepageItemProvider = new CodepageItemProvider(this);
        }

        return codepageItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Condition} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ConditionItemProvider conditionItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Condition}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createConditionAdapter() {
        if (conditionItemProvider == null) {
            conditionItemProvider = new ConditionItemProvider(this);
        }

        return conditionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.ConformanceClass} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ConformanceClassItemProvider conformanceClassItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.ConformanceClass}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createConformanceClassAdapter() {
        if (conformanceClassItemProvider == null) {
            conformanceClassItemProvider =
                    new ConformanceClassItemProvider(this);
        }

        return conformanceClassItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.ConnectorGraphicsInfo} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ConnectorGraphicsInfoItemProvider connectorGraphicsInfoItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.ConnectorGraphicsInfo}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createConnectorGraphicsInfoAdapter() {
        if (connectorGraphicsInfoItemProvider == null) {
            connectorGraphicsInfoItemProvider =
                    new ConnectorGraphicsInfoItemProvider(this);
        }

        return connectorGraphicsInfoItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Coordinates} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CoordinatesItemProvider coordinatesItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Coordinates}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCoordinatesAdapter() {
        if (coordinatesItemProvider == null) {
            coordinatesItemProvider = new CoordinatesItemProvider(this);
        }

        return coordinatesItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Cost} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CostItemProvider costItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Cost}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCostAdapter() {
        if (costItemProvider == null) {
            costItemProvider = new CostItemProvider(this);
        }

        return costItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.CostStructure} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CostStructureItemProvider costStructureItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.CostStructure}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCostStructureAdapter() {
        if (costStructureItemProvider == null) {
            costStructureItemProvider = new CostStructureItemProvider(this);
        }

        return costStructureItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.CostUnit} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CostUnitItemProvider costUnitItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.CostUnit}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCostUnitAdapter() {
        if (costUnitItemProvider == null) {
            costUnitItemProvider = new CostUnitItemProvider(this);
        }

        return costUnitItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.CountryKey} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected CountryKeyItemProvider countryKeyItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.CountryKey}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createCountryKeyAdapter() {
        if (countryKeyItemProvider == null) {
            countryKeyItemProvider = new CountryKeyItemProvider(this);
        }

        return countryKeyItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.DataField} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DataFieldItemProvider dataFieldItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.DataField}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDataFieldAdapter() {
        if (dataFieldItemProvider == null) {
            dataFieldItemProvider = new DataFieldItemProvider(this);
        }

        return dataFieldItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.DataMapping} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DataMappingItemProvider dataMappingItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.DataMapping}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDataMappingAdapter() {
        if (dataMappingItemProvider == null) {
            dataMappingItemProvider = new DataMappingItemProvider(this);
        }

        return dataMappingItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.DataObject} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DataObjectItemProvider dataObjectItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.DataObject}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDataObjectAdapter() {
        if (dataObjectItemProvider == null) {
            dataObjectItemProvider = new DataObjectItemProvider(this);
        }

        return dataObjectItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Deadline} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DeadlineItemProvider deadlineItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Deadline}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDeadlineAdapter() {
        if (deadlineItemProvider == null) {
            deadlineItemProvider = new DeadlineItemProvider(this);
        }

        return deadlineItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.DeclaredType} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DeclaredTypeItemProvider declaredTypeItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.DeclaredType}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDeclaredTypeAdapter() {
        if (declaredTypeItemProvider == null) {
            declaredTypeItemProvider = new DeclaredTypeItemProvider(this);
        }

        return declaredTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.DeprecatedResultCompensation} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DeprecatedResultCompensationItemProvider deprecatedResultCompensationItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.DeprecatedResultCompensation}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDeprecatedResultCompensationAdapter() {
        if (deprecatedResultCompensationItemProvider == null) {
            deprecatedResultCompensationItemProvider =
                    new DeprecatedResultCompensationItemProvider(this);
        }

        return deprecatedResultCompensationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.DeprecatedTriggerRule} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DeprecatedTriggerRuleItemProvider deprecatedTriggerRuleItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.DeprecatedTriggerRule}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDeprecatedTriggerRuleAdapter() {
        if (deprecatedTriggerRuleItemProvider == null) {
            deprecatedTriggerRuleItemProvider =
                    new DeprecatedTriggerRuleItemProvider(this);
        }

        return deprecatedTriggerRuleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Description} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DescriptionItemProvider descriptionItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Description}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDescriptionAdapter() {
        if (descriptionItemProvider == null) {
            descriptionItemProvider = new DescriptionItemProvider(this);
        }

        return descriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Documentation} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DocumentationItemProvider documentationItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Documentation}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDocumentationAdapter() {
        if (documentationItemProvider == null) {
            documentationItemProvider = new DocumentationItemProvider(this);
        }

        return documentationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.DocumentRoot} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DocumentRootItemProvider documentRootItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.DocumentRoot}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDocumentRootAdapter() {
        if (documentRootItemProvider == null) {
            documentRootItemProvider = new DocumentRootItemProvider(this);
        }

        return documentRootItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Duration} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DurationItemProvider durationItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Duration}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDurationAdapter() {
        if (durationItemProvider == null) {
            durationItemProvider = new DurationItemProvider(this);
        }

        return durationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.EjbApplication} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected EjbApplicationItemProvider ejbApplicationItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.EjbApplication}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createEjbApplicationAdapter() {
        if (ejbApplicationItemProvider == null) {
            ejbApplicationItemProvider = new EjbApplicationItemProvider(this);
        }

        return ejbApplicationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.EndEvent} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected EndEventItemProvider endEventItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.EndEvent}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createEndEventAdapter() {
        if (endEventItemProvider == null) {
            endEventItemProvider = new EndEventItemProvider(this);
        }

        return endEventItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.EndPoint} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected EndPointItemProvider endPointItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.EndPoint}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createEndPointAdapter() {
        if (endPointItemProvider == null) {
            endPointItemProvider = new EndPointItemProvider(this);
        }

        return endPointItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.EnumerationType} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected EnumerationTypeItemProvider enumerationTypeItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.EnumerationType}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createEnumerationTypeAdapter() {
        if (enumerationTypeItemProvider == null) {
            enumerationTypeItemProvider = new EnumerationTypeItemProvider(this);
        }

        return enumerationTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.EnumerationValue} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected EnumerationValueItemProvider enumerationValueItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.EnumerationValue}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createEnumerationValueAdapter() {
        if (enumerationValueItemProvider == null) {
            enumerationValueItemProvider =
                    new EnumerationValueItemProvider(this);
        }

        return enumerationValueItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.ExceptionName} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ExceptionNameItemProvider exceptionNameItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.ExceptionName}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createExceptionNameAdapter() {
        if (exceptionNameItemProvider == null) {
            exceptionNameItemProvider = new ExceptionNameItemProvider(this);
        }

        return exceptionNameItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Expression} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ExpressionItemProvider expressionItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Expression}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createExpressionAdapter() {
        if (expressionItemProvider == null) {
            expressionItemProvider = new ExpressionItemProvider(this);
        }

        return expressionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.ExtendedAttribute} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ExtendedAttributeItemProvider extendedAttributeItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.ExtendedAttribute}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createExtendedAttributeAdapter() {
        if (extendedAttributeItemProvider == null) {
            extendedAttributeItemProvider =
                    new ExtendedAttributeItemProvider(this);
        }

        return extendedAttributeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.ExternalPackage} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ExternalPackageItemProvider externalPackageItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.ExternalPackage}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createExternalPackageAdapter() {
        if (externalPackageItemProvider == null) {
            externalPackageItemProvider = new ExternalPackageItemProvider(this);
        }

        return externalPackageItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.ExternalReference} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ExternalReferenceItemProvider externalReferenceItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.ExternalReference}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createExternalReferenceAdapter() {
        if (externalReferenceItemProvider == null) {
            externalReferenceItemProvider =
                    new ExternalReferenceItemProvider(this);
        }

        return externalReferenceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.FormalParameter} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected FormalParameterItemProvider formalParameterItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.FormalParameter}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createFormalParameterAdapter() {
        if (formalParameterItemProvider == null) {
            formalParameterItemProvider = new FormalParameterItemProvider(this);
        }

        return formalParameterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.FormLayout} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected FormLayoutItemProvider formLayoutItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.FormLayout}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createFormLayoutAdapter() {
        if (formLayoutItemProvider == null) {
            formLayoutItemProvider = new FormLayoutItemProvider(this);
        }

        return formLayoutItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.FormApplication} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected FormApplicationItemProvider formApplicationItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.FormApplication}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createFormApplicationAdapter() {
        if (formApplicationItemProvider == null) {
            formApplicationItemProvider = new FormApplicationItemProvider(this);
        }

        return formApplicationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.HomeClass} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected HomeClassItemProvider homeClassItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.HomeClass}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createHomeClassAdapter() {
        if (homeClassItemProvider == null) {
            homeClassItemProvider = new HomeClassItemProvider(this);
        }

        return homeClassItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Icon} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected IconItemProvider iconItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Icon}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createIconAdapter() {
        if (iconItemProvider == null) {
            iconItemProvider = new IconItemProvider(this);
        }

        return iconItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.InputSet} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected InputSetItemProvider inputSetItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.InputSet}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createInputSetAdapter() {
        if (inputSetItemProvider == null) {
            inputSetItemProvider = new InputSetItemProvider(this);
        }

        return inputSetItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Input} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected InputItemProvider inputItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Input}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createInputAdapter() {
        if (inputItemProvider == null) {
            inputItemProvider = new InputItemProvider(this);
        }

        return inputItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.IntermediateEvent} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected IntermediateEventItemProvider intermediateEventItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.IntermediateEvent}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createIntermediateEventAdapter() {
        if (intermediateEventItemProvider == null) {
            intermediateEventItemProvider =
                    new IntermediateEventItemProvider(this);
        }

        return intermediateEventItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.IORules} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected IORulesItemProvider ioRulesItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.IORules}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createIORulesAdapter() {
        if (ioRulesItemProvider == null) {
            ioRulesItemProvider = new IORulesItemProvider(this);
        }

        return ioRulesItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.JndiName} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected JndiNameItemProvider jndiNameItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.JndiName}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createJndiNameAdapter() {
        if (jndiNameItemProvider == null) {
            jndiNameItemProvider = new JndiNameItemProvider(this);
        }

        return jndiNameItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Join} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected JoinItemProvider joinItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Join}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createJoinAdapter() {
        if (joinItemProvider == null) {
            joinItemProvider = new JoinItemProvider(this);
        }

        return joinItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.LayoutInfo} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LayoutInfoItemProvider layoutInfoItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.LayoutInfo}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLayoutInfoAdapter() {
        if (layoutInfoItemProvider == null) {
            layoutInfoItemProvider = new LayoutInfoItemProvider(this);
        }

        return layoutInfoItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Lane} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LaneItemProvider laneItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Lane}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLaneAdapter() {
        if (laneItemProvider == null) {
            laneItemProvider = new LaneItemProvider(this);
        }

        return laneItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Length} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LengthItemProvider lengthItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Length}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLengthAdapter() {
        if (lengthItemProvider == null) {
            lengthItemProvider = new LengthItemProvider(this);
        }

        return lengthItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Limit} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LimitItemProvider limitItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Limit}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLimitAdapter() {
        if (limitItemProvider == null) {
            limitItemProvider = new LimitItemProvider(this);
        }

        return limitItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.ListType} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ListTypeItemProvider listTypeItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.ListType}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createListTypeAdapter() {
        if (listTypeItemProvider == null) {
            listTypeItemProvider = new ListTypeItemProvider(this);
        }

        return listTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Location} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LocationItemProvider locationItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Location}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLocationAdapter() {
        if (locationItemProvider == null) {
            locationItemProvider = new LocationItemProvider(this);
        }

        return locationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.LoopMultiInstance} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LoopMultiInstanceItemProvider loopMultiInstanceItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.LoopMultiInstance}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLoopMultiInstanceAdapter() {
        if (loopMultiInstanceItemProvider == null) {
            loopMultiInstanceItemProvider =
                    new LoopMultiInstanceItemProvider(this);
        }

        return loopMultiInstanceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.LoopStandard} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LoopStandardItemProvider loopStandardItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.LoopStandard}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLoopStandardAdapter() {
        if (loopStandardItemProvider == null) {
            loopStandardItemProvider = new LoopStandardItemProvider(this);
        }

        return loopStandardItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Loop} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected LoopItemProvider loopItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Loop}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createLoopAdapter() {
        if (loopItemProvider == null) {
            loopItemProvider = new LoopItemProvider(this);
        }

        return loopItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Member} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected MemberItemProvider memberItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Member}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createMemberAdapter() {
        if (memberItemProvider == null) {
            memberItemProvider = new MemberItemProvider(this);
        }

        return memberItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.MessageFlow} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected MessageFlowItemProvider messageFlowItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.MessageFlow}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createMessageFlowAdapter() {
        if (messageFlowItemProvider == null) {
            messageFlowItemProvider = new MessageFlowItemProvider(this);
        }

        return messageFlowItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Message} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected MessageItemProvider messageItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Message}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createMessageAdapter() {
        if (messageItemProvider == null) {
            messageItemProvider = new MessageItemProvider(this);
        }

        return messageItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Method} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected MethodItemProvider methodItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Method}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createMethodAdapter() {
        if (methodItemProvider == null) {
            methodItemProvider = new MethodItemProvider(this);
        }

        return methodItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.ModificationDate} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ModificationDateItemProvider modificationDateItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.ModificationDate}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createModificationDateAdapter() {
        if (modificationDateItemProvider == null) {
            modificationDateItemProvider =
                    new ModificationDateItemProvider(this);
        }

        return modificationDateItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.MyRole} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected MyRoleItemProvider myRoleItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.MyRole}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createMyRoleAdapter() {
        if (myRoleItemProvider == null) {
            myRoleItemProvider = new MyRoleItemProvider(this);
        }

        return myRoleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.NodeGraphicsInfo} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected NodeGraphicsInfoItemProvider nodeGraphicsInfoItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.NodeGraphicsInfo}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createNodeGraphicsInfoAdapter() {
        if (nodeGraphicsInfoItemProvider == null) {
            nodeGraphicsInfoItemProvider =
                    new NodeGraphicsInfoItemProvider(this);
        }

        return nodeGraphicsInfoItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.No} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected NoItemProvider noItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.No}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createNoAdapter() {
        if (noItemProvider == null) {
            noItemProvider = new NoItemProvider(this);
        }

        return noItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Object} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ObjectItemProvider objectItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Object}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createObjectAdapter() {
        if (objectItemProvider == null) {
            objectItemProvider = new ObjectItemProvider(this);
        }

        return objectItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.OutputSet} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OutputSetItemProvider outputSetItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.OutputSet}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOutputSetAdapter() {
        if (outputSetItemProvider == null) {
            outputSetItemProvider = new OutputSetItemProvider(this);
        }

        return outputSetItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Output} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected OutputItemProvider outputItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Output}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createOutputAdapter() {
        if (outputItemProvider == null) {
            outputItemProvider = new OutputItemProvider(this);
        }

        return outputItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.PackageHeader} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PackageHeaderItemProvider packageHeaderItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.PackageHeader}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPackageHeaderAdapter() {
        if (packageHeaderItemProvider == null) {
            packageHeaderItemProvider = new PackageHeaderItemProvider(this);
        }

        return packageHeaderItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Package} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PackageItemProvider packageItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Package}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPackageAdapter() {
        if (packageItemProvider == null) {
            packageItemProvider = new PackageItemProvider(this);
        }

        return packageItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Page} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PageItemProvider pageItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Page}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPageAdapter() {
        if (pageItemProvider == null) {
            pageItemProvider = new PageItemProvider(this);
        }

        return pageItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Pages} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PagesItemProvider pagesItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Pages}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPagesAdapter() {
        if (pagesItemProvider == null) {
            pagesItemProvider = new PagesItemProvider(this);
        }

        return pagesItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.DataFieldsContainer} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected DataFieldsContainerItemProvider dataFieldsContainerItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.DataFieldsContainer}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createDataFieldsContainerAdapter() {
        if (dataFieldsContainerItemProvider == null) {
            dataFieldsContainerItemProvider =
                    new DataFieldsContainerItemProvider(this);
        }

        return dataFieldsContainerItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Participant} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ParticipantItemProvider participantItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Participant}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createParticipantAdapter() {
        if (participantItemProvider == null) {
            participantItemProvider = new ParticipantItemProvider(this);
        }

        return participantItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.ParticipantTypeElem} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ParticipantTypeElemItemProvider participantTypeElemItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.ParticipantTypeElem}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createParticipantTypeElemAdapter() {
        if (participantTypeElemItemProvider == null) {
            participantTypeElemItemProvider =
                    new ParticipantTypeElemItemProvider(this);
        }

        return participantTypeElemItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.PartnerLink} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PartnerLinkItemProvider partnerLinkItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.PartnerLink}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPartnerLinkAdapter() {
        if (partnerLinkItemProvider == null) {
            partnerLinkItemProvider = new PartnerLinkItemProvider(this);
        }

        return partnerLinkItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.PartnerLinkType} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PartnerLinkTypeItemProvider partnerLinkTypeItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.PartnerLinkType}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPartnerLinkTypeAdapter() {
        if (partnerLinkTypeItemProvider == null) {
            partnerLinkTypeItemProvider = new PartnerLinkTypeItemProvider(this);
        }

        return partnerLinkTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.PartnerRole} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PartnerRoleItemProvider partnerRoleItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.PartnerRole}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPartnerRoleAdapter() {
        if (partnerRoleItemProvider == null) {
            partnerRoleItemProvider = new PartnerRoleItemProvider(this);
        }

        return partnerRoleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Partner} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PartnerItemProvider partnerItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Partner}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPartnerAdapter() {
        if (partnerItemProvider == null) {
            partnerItemProvider = new PartnerItemProvider(this);
        }

        return partnerItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Performer} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PerformerItemProvider performerItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Performer}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPerformerAdapter() {
        if (performerItemProvider == null) {
            performerItemProvider = new PerformerItemProvider(this);
        }

        return performerItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.PojoApplication} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PojoApplicationItemProvider pojoApplicationItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.PojoApplication}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPojoApplicationAdapter() {
        if (pojoApplicationItemProvider == null) {
            pojoApplicationItemProvider = new PojoApplicationItemProvider(this);
        }

        return pojoApplicationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Pool} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PoolItemProvider poolItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Pool}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPoolAdapter() {
        if (poolItemProvider == null) {
            poolItemProvider = new PoolItemProvider(this);
        }

        return poolItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Precision} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PrecisionItemProvider precisionItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Precision}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPrecisionAdapter() {
        if (precisionItemProvider == null) {
            precisionItemProvider = new PrecisionItemProvider(this);
        }

        return precisionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Priority} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PriorityItemProvider priorityItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Priority}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPriorityAdapter() {
        if (priorityItemProvider == null) {
            priorityItemProvider = new PriorityItemProvider(this);
        }

        return priorityItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.PriorityUnit} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PriorityUnitItemProvider priorityUnitItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.PriorityUnit}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPriorityUnitAdapter() {
        if (priorityUnitItemProvider == null) {
            priorityUnitItemProvider = new PriorityUnitItemProvider(this);
        }

        return priorityUnitItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.ProcessHeader} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ProcessHeaderItemProvider processHeaderItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.ProcessHeader}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createProcessHeaderAdapter() {
        if (processHeaderItemProvider == null) {
            processHeaderItemProvider = new ProcessHeaderItemProvider(this);
        }

        return processHeaderItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Process} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ProcessItemProvider processItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Process}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createProcessAdapter() {
        if (processItemProvider == null) {
            processItemProvider = new ProcessItemProvider(this);
        }

        return processItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.PropertyInput} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PropertyInputItemProvider propertyInputItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.PropertyInput}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPropertyInputAdapter() {
        if (propertyInputItemProvider == null) {
            propertyInputItemProvider = new PropertyInputItemProvider(this);
        }

        return propertyInputItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.RecordType} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RecordTypeItemProvider recordTypeItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.RecordType}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRecordTypeAdapter() {
        if (recordTypeItemProvider == null) {
            recordTypeItemProvider = new RecordTypeItemProvider(this);
        }

        return recordTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.RedefinableHeader} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RedefinableHeaderItemProvider redefinableHeaderItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.RedefinableHeader}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRedefinableHeaderAdapter() {
        if (redefinableHeaderItemProvider == null) {
            redefinableHeaderItemProvider =
                    new RedefinableHeaderItemProvider(this);
        }

        return redefinableHeaderItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Reference} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ReferenceItemProvider referenceItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Reference}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createReferenceAdapter() {
        if (referenceItemProvider == null) {
            referenceItemProvider = new ReferenceItemProvider(this);
        }

        return referenceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.ResourceCosts} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ResourceCostsItemProvider resourceCostsItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.ResourceCosts}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createResourceCostsAdapter() {
        if (resourceCostsItemProvider == null) {
            resourceCostsItemProvider = new ResourceCostsItemProvider(this);
        }

        return resourceCostsItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Responsible} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ResponsibleItemProvider responsibleItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Responsible}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createResponsibleAdapter() {
        if (responsibleItemProvider == null) {
            responsibleItemProvider = new ResponsibleItemProvider(this);
        }

        return responsibleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.ResultError} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ResultErrorItemProvider resultErrorItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.ResultError}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createResultErrorAdapter() {
        if (resultErrorItemProvider == null) {
            resultErrorItemProvider = new ResultErrorItemProvider(this);
        }

        return resultErrorItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.ResultMultiple} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ResultMultipleItemProvider resultMultipleItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.ResultMultiple}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createResultMultipleAdapter() {
        if (resultMultipleItemProvider == null) {
            resultMultipleItemProvider = new ResultMultipleItemProvider(this);
        }

        return resultMultipleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Role} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RoleItemProvider roleItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Role}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRoleAdapter() {
        if (roleItemProvider == null) {
            roleItemProvider = new RoleItemProvider(this);
        }

        return roleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Route} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RouteItemProvider routeItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Route}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRouteAdapter() {
        if (routeItemProvider == null) {
            routeItemProvider = new RouteItemProvider(this);
        }

        return routeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.RuleName} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RuleNameItemProvider ruleNameItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.RuleName}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRuleNameAdapter() {
        if (ruleNameItemProvider == null) {
            ruleNameItemProvider = new RuleNameItemProvider(this);
        }

        return ruleNameItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Rule} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected RuleItemProvider ruleItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Rule}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createRuleAdapter() {
        if (ruleItemProvider == null) {
            ruleItemProvider = new RuleItemProvider(this);
        }

        return ruleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Scale} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ScaleItemProvider scaleItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Scale}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createScaleAdapter() {
        if (scaleItemProvider == null) {
            scaleItemProvider = new ScaleItemProvider(this);
        }

        return scaleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Schema} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected SchemaItemProvider schemaItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Schema}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createSchemaAdapter() {
        if (schemaItemProvider == null) {
            schemaItemProvider = new SchemaItemProvider(this);
        }

        return schemaItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Script} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ScriptItemProvider scriptItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Script}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createScriptAdapter() {
        if (scriptItemProvider == null) {
            scriptItemProvider = new ScriptItemProvider(this);
        }

        return scriptItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Service} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ServiceItemProvider serviceItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Service}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createServiceAdapter() {
        if (serviceItemProvider == null) {
            serviceItemProvider = new ServiceItemProvider(this);
        }

        return serviceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.SimulationInformation} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected SimulationInformationItemProvider simulationInformationItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.SimulationInformation}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createSimulationInformationAdapter() {
        if (simulationInformationItemProvider == null) {
            simulationInformationItemProvider =
                    new SimulationInformationItemProvider(this);
        }

        return simulationInformationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Split} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected SplitItemProvider splitItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Split}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createSplitAdapter() {
        if (splitItemProvider == null) {
            splitItemProvider = new SplitItemProvider(this);
        }

        return splitItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.StartEvent} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected StartEventItemProvider startEventItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.StartEvent}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createStartEventAdapter() {
        if (startEventItemProvider == null) {
            startEventItemProvider = new StartEventItemProvider(this);
        }

        return startEventItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.SubFlow} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected SubFlowItemProvider subFlowItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.SubFlow}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createSubFlowAdapter() {
        if (subFlowItemProvider == null) {
            subFlowItemProvider = new SubFlowItemProvider(this);
        }

        return subFlowItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.TaskApplication} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TaskApplicationItemProvider taskApplicationItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.TaskApplication}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTaskApplicationAdapter() {
        if (taskApplicationItemProvider == null) {
            taskApplicationItemProvider = new TaskApplicationItemProvider(this);
        }

        return taskApplicationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.TaskManual} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TaskManualItemProvider taskManualItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.TaskManual}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTaskManualAdapter() {
        if (taskManualItemProvider == null) {
            taskManualItemProvider = new TaskManualItemProvider(this);
        }

        return taskManualItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.TaskReceive} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TaskReceiveItemProvider taskReceiveItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.TaskReceive}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTaskReceiveAdapter() {
        if (taskReceiveItemProvider == null) {
            taskReceiveItemProvider = new TaskReceiveItemProvider(this);
        }

        return taskReceiveItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.TaskReference} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TaskReferenceItemProvider taskReferenceItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.TaskReference}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTaskReferenceAdapter() {
        if (taskReferenceItemProvider == null) {
            taskReferenceItemProvider = new TaskReferenceItemProvider(this);
        }

        return taskReferenceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.TaskScript} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TaskScriptItemProvider taskScriptItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.TaskScript}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTaskScriptAdapter() {
        if (taskScriptItemProvider == null) {
            taskScriptItemProvider = new TaskScriptItemProvider(this);
        }

        return taskScriptItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.TaskSend} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TaskSendItemProvider taskSendItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.TaskSend}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTaskSendAdapter() {
        if (taskSendItemProvider == null) {
            taskSendItemProvider = new TaskSendItemProvider(this);
        }

        return taskSendItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.TaskService} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TaskServiceItemProvider taskServiceItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.TaskService}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTaskServiceAdapter() {
        if (taskServiceItemProvider == null) {
            taskServiceItemProvider = new TaskServiceItemProvider(this);
        }

        return taskServiceItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Task} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TaskItemProvider taskItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Task}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTaskAdapter() {
        if (taskItemProvider == null) {
            taskItemProvider = new TaskItemProvider(this);
        }

        return taskItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.TaskUser} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TaskUserItemProvider taskUserItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.TaskUser}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTaskUserAdapter() {
        if (taskUserItemProvider == null) {
            taskUserItemProvider = new TaskUserItemProvider(this);
        }

        return taskUserItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.TimeEstimation} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TimeEstimationItemProvider timeEstimationItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.TimeEstimation}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTimeEstimationAdapter() {
        if (timeEstimationItemProvider == null) {
            timeEstimationItemProvider = new TimeEstimationItemProvider(this);
        }

        return timeEstimationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Transaction} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TransactionItemProvider transactionItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Transaction}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTransactionAdapter() {
        if (transactionItemProvider == null) {
            transactionItemProvider = new TransactionItemProvider(this);
        }

        return transactionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.TransitionRef} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TransitionRefItemProvider transitionRefItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.TransitionRef}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTransitionRefAdapter() {
        if (transitionRefItemProvider == null) {
            transitionRefItemProvider = new TransitionRefItemProvider(this);
        }

        return transitionRefItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.TransitionRestriction} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TransitionRestrictionItemProvider transitionRestrictionItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.TransitionRestriction}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTransitionRestrictionAdapter() {
        if (transitionRestrictionItemProvider == null) {
            transitionRestrictionItemProvider =
                    new TransitionRestrictionItemProvider(this);
        }

        return transitionRestrictionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Transition} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TransitionItemProvider transitionItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Transition}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTransitionAdapter() {
        if (transitionItemProvider == null) {
            transitionItemProvider = new TransitionItemProvider(this);
        }

        return transitionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.TriggerIntermediateMultiple} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TriggerIntermediateMultipleItemProvider triggerIntermediateMultipleItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.TriggerIntermediateMultiple}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTriggerIntermediateMultipleAdapter() {
        if (triggerIntermediateMultipleItemProvider == null) {
            triggerIntermediateMultipleItemProvider =
                    new TriggerIntermediateMultipleItemProvider(this);
        }

        return triggerIntermediateMultipleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.TriggerMultiple} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TriggerMultipleItemProvider triggerMultipleItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.TriggerMultiple}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTriggerMultipleAdapter() {
        if (triggerMultipleItemProvider == null) {
            triggerMultipleItemProvider = new TriggerMultipleItemProvider(this);
        }

        return triggerMultipleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.TriggerResultCancel} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TriggerResultCancelItemProvider triggerResultCancelItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.TriggerResultCancel}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTriggerResultCancelAdapter() {
        if (triggerResultCancelItemProvider == null) {
            triggerResultCancelItemProvider =
                    new TriggerResultCancelItemProvider(this);
        }

        return triggerResultCancelItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.TriggerResultCompensation} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TriggerResultCompensationItemProvider triggerResultCompensationItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.TriggerResultCompensation}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTriggerResultCompensationAdapter() {
        if (triggerResultCompensationItemProvider == null) {
            triggerResultCompensationItemProvider =
                    new TriggerResultCompensationItemProvider(this);
        }

        return triggerResultCompensationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.TriggerResultSignal} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TriggerResultSignalItemProvider triggerResultSignalItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.TriggerResultSignal}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTriggerResultSignalAdapter() {
        if (triggerResultSignalItemProvider == null) {
            triggerResultSignalItemProvider =
                    new TriggerResultSignalItemProvider(this);
        }

        return triggerResultSignalItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.TriggerResultLink} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TriggerResultLinkItemProvider triggerResultLinkItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.TriggerResultLink}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTriggerResultLinkAdapter() {
        if (triggerResultLinkItemProvider == null) {
            triggerResultLinkItemProvider =
                    new TriggerResultLinkItemProvider(this);
        }

        return triggerResultLinkItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.TriggerResultMessage} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TriggerResultMessageItemProvider triggerResultMessageItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.TriggerResultMessage}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTriggerResultMessageAdapter() {
        if (triggerResultMessageItemProvider == null) {
            triggerResultMessageItemProvider =
                    new TriggerResultMessageItemProvider(this);
        }

        return triggerResultMessageItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.TriggerConditional} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TriggerConditionalItemProvider triggerConditionalItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.TriggerConditional}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTriggerConditionalAdapter() {
        if (triggerConditionalItemProvider == null) {
            triggerConditionalItemProvider =
                    new TriggerConditionalItemProvider(this);
        }

        return triggerConditionalItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.TriggerTimer} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TriggerTimerItemProvider triggerTimerItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.TriggerTimer}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTriggerTimerAdapter() {
        if (triggerTimerItemProvider == null) {
            triggerTimerItemProvider = new TriggerTimerItemProvider(this);
        }

        return triggerTimerItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.TypeDeclaration} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected TypeDeclarationItemProvider typeDeclarationItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.TypeDeclaration}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createTypeDeclarationAdapter() {
        if (typeDeclarationItemProvider == null) {
            typeDeclarationItemProvider = new TypeDeclarationItemProvider(this);
        }

        return typeDeclarationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.UnionType} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected UnionTypeItemProvider unionTypeItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.UnionType}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createUnionTypeAdapter() {
        if (unionTypeItemProvider == null) {
            unionTypeItemProvider = new UnionTypeItemProvider(this);
        }

        return unionTypeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.ValidFrom} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ValidFromItemProvider validFromItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.ValidFrom}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createValidFromAdapter() {
        if (validFromItemProvider == null) {
            validFromItemProvider = new ValidFromItemProvider(this);
        }

        return validFromItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.ValidTo} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected ValidToItemProvider validToItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.ValidTo}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createValidToAdapter() {
        if (validToItemProvider == null) {
            validToItemProvider = new ValidToItemProvider(this);
        }

        return validToItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.VendorExtensions} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected VendorExtensionsItemProvider vendorExtensionsItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.VendorExtensions}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createVendorExtensionsAdapter() {
        if (vendorExtensionsItemProvider == null) {
            vendorExtensionsItemProvider =
                    new VendorExtensionsItemProvider(this);
        }

        return vendorExtensionsItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.VendorExtension} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected VendorExtensionItemProvider vendorExtensionItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.VendorExtension}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createVendorExtensionAdapter() {
        if (vendorExtensionItemProvider == null) {
            vendorExtensionItemProvider = new VendorExtensionItemProvider(this);
        }

        return vendorExtensionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.WaitingTime} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected WaitingTimeItemProvider waitingTimeItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.WaitingTime}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createWaitingTimeAdapter() {
        if (waitingTimeItemProvider == null) {
            waitingTimeItemProvider = new WaitingTimeItemProvider(this);
        }

        return waitingTimeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.WebServiceFaultCatch} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected WebServiceFaultCatchItemProvider webServiceFaultCatchItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.WebServiceFaultCatch}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createWebServiceFaultCatchAdapter() {
        if (webServiceFaultCatchItemProvider == null) {
            webServiceFaultCatchItemProvider =
                    new WebServiceFaultCatchItemProvider(this);
        }

        return webServiceFaultCatchItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.WebServiceOperation} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected WebServiceOperationItemProvider webServiceOperationItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.WebServiceOperation}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createWebServiceOperationAdapter() {
        if (webServiceOperationItemProvider == null) {
            webServiceOperationItemProvider =
                    new WebServiceOperationItemProvider(this);
        }

        return webServiceOperationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.WebServiceApplication} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected WebServiceApplicationItemProvider webServiceApplicationItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.WebServiceApplication}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createWebServiceApplicationAdapter() {
        if (webServiceApplicationItemProvider == null) {
            webServiceApplicationItemProvider =
                    new WebServiceApplicationItemProvider(this);
        }

        return webServiceApplicationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.WorkingTime} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected WorkingTimeItemProvider workingTimeItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.WorkingTime}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createWorkingTimeAdapter() {
        if (workingTimeItemProvider == null) {
            workingTimeItemProvider = new WorkingTimeItemProvider(this);
        }

        return workingTimeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.XsltApplication} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected XsltApplicationItemProvider xsltApplicationItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.XsltApplication}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createXsltApplicationAdapter() {
        if (xsltApplicationItemProvider == null) {
            xsltApplicationItemProvider = new XsltApplicationItemProvider(this);
        }

        return xsltApplicationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all {@link com.tibco.xpd.xpdl2.Performers} instances.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    protected PerformersItemProvider performersItemProvider;

    /**
     * This creates an adapter for a {@link com.tibco.xpd.xpdl2.Performers}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter createPerformersAdapter() {
        if (performersItemProvider == null) {
            performersItemProvider = new PerformersItemProvider(this);
        }

        return performersItemProvider;
    }

    /**
     * This returns the root adapter factory that contains this factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public ComposeableAdapterFactory getRootAdapterFactory() {
        return parentAdapterFactory == null ? this : parentAdapterFactory
                .getRootAdapterFactory();
    }

    /**
     * This sets the composed adapter factory that contains this factory.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void setParentAdapterFactory(
            ComposedAdapterFactory parentAdapterFactory) {
        this.parentAdapterFactory = parentAdapterFactory;
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public boolean isFactoryForType(Object type) {
        return supportedTypes.contains(type) || super.isFactoryForType(type);
    }

    /**
     * This implementation substitutes the factory itself as the key for the adapter.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Adapter adapt(Notifier notifier, Object type) {
        return super.adapt(notifier, this);
    }

    /**
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    @Override
    public Object adapt(Object object, Object type) {
        if (isFactoryForType(type)) {
            Object adapter = super.adapt(object, type);
            if (!(type instanceof Class<?>)
                    || (((Class<?>) type).isInstance(adapter))) {
                return adapter;
            }
        }

        return null;
    }

    /**
     * This adds a listener.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void addListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.addListener(notifyChangedListener);
    }

    /**
     * This removes a listener.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void removeListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.removeListener(notifyChangedListener);
    }

    /**
     * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void fireNotifyChanged(Notification notification) {
        changeNotifier.fireNotifyChanged(notification);

        if (parentAdapterFactory != null) {
            parentAdapterFactory.fireNotifyChanged(notification);
        }
    }

    /**
     * This disposes all of the item providers created by this factory. 
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    public void dispose() {
        if (activitySetItemProvider != null)
            activitySetItemProvider.dispose();
        if (activityItemProvider != null)
            activityItemProvider.dispose();
        if (applicationTypeItemProvider != null)
            applicationTypeItemProvider.dispose();
        if (applicationItemProvider != null)
            applicationItemProvider.dispose();
        if (arrayTypeItemProvider != null)
            arrayTypeItemProvider.dispose();
        if (artifactItemProvider != null)
            artifactItemProvider.dispose();
        if (artifactInputItemProvider != null)
            artifactInputItemProvider.dispose();
        if (assignmentItemProvider != null)
            assignmentItemProvider.dispose();
        if (associationItemProvider != null)
            associationItemProvider.dispose();
        if (basicTypeItemProvider != null)
            basicTypeItemProvider.dispose();
        if (blockActivityItemProvider != null)
            blockActivityItemProvider.dispose();
        if (businessRuleApplicationItemProvider != null)
            businessRuleApplicationItemProvider.dispose();
        if (categoryItemProvider != null)
            categoryItemProvider.dispose();
        if (classItemProvider != null)
            classItemProvider.dispose();
        if (codepageItemProvider != null)
            codepageItemProvider.dispose();
        if (conditionItemProvider != null)
            conditionItemProvider.dispose();
        if (conformanceClassItemProvider != null)
            conformanceClassItemProvider.dispose();
        if (connectorGraphicsInfoItemProvider != null)
            connectorGraphicsInfoItemProvider.dispose();
        if (coordinatesItemProvider != null)
            coordinatesItemProvider.dispose();
        if (costItemProvider != null)
            costItemProvider.dispose();
        if (costStructureItemProvider != null)
            costStructureItemProvider.dispose();
        if (costUnitItemProvider != null)
            costUnitItemProvider.dispose();
        if (countryKeyItemProvider != null)
            countryKeyItemProvider.dispose();
        if (dataFieldItemProvider != null)
            dataFieldItemProvider.dispose();
        if (dataFieldsContainerItemProvider != null)
            dataFieldsContainerItemProvider.dispose();
        if (dataMappingItemProvider != null)
            dataMappingItemProvider.dispose();
        if (dataObjectItemProvider != null)
            dataObjectItemProvider.dispose();
        if (deadlineItemProvider != null)
            deadlineItemProvider.dispose();
        if (declaredTypeItemProvider != null)
            declaredTypeItemProvider.dispose();
        if (deprecatedResultCompensationItemProvider != null)
            deprecatedResultCompensationItemProvider.dispose();
        if (deprecatedTriggerRuleItemProvider != null)
            deprecatedTriggerRuleItemProvider.dispose();
        if (descriptionItemProvider != null)
            descriptionItemProvider.dispose();
        if (documentationItemProvider != null)
            documentationItemProvider.dispose();
        if (documentRootItemProvider != null)
            documentRootItemProvider.dispose();
        if (durationItemProvider != null)
            durationItemProvider.dispose();
        if (ejbApplicationItemProvider != null)
            ejbApplicationItemProvider.dispose();
        if (endEventItemProvider != null)
            endEventItemProvider.dispose();
        if (endPointItemProvider != null)
            endPointItemProvider.dispose();
        if (enumerationTypeItemProvider != null)
            enumerationTypeItemProvider.dispose();
        if (enumerationValueItemProvider != null)
            enumerationValueItemProvider.dispose();
        if (exceptionNameItemProvider != null)
            exceptionNameItemProvider.dispose();
        if (expressionItemProvider != null)
            expressionItemProvider.dispose();
        if (extendedAttributeItemProvider != null)
            extendedAttributeItemProvider.dispose();
        if (externalPackageItemProvider != null)
            externalPackageItemProvider.dispose();
        if (externalReferenceItemProvider != null)
            externalReferenceItemProvider.dispose();
        if (formalParameterItemProvider != null)
            formalParameterItemProvider.dispose();
        if (formLayoutItemProvider != null)
            formLayoutItemProvider.dispose();
        if (formApplicationItemProvider != null)
            formApplicationItemProvider.dispose();
        if (homeClassItemProvider != null)
            homeClassItemProvider.dispose();
        if (iconItemProvider != null)
            iconItemProvider.dispose();
        if (inputSetItemProvider != null)
            inputSetItemProvider.dispose();
        if (inputItemProvider != null)
            inputItemProvider.dispose();
        if (intermediateEventItemProvider != null)
            intermediateEventItemProvider.dispose();
        if (ioRulesItemProvider != null)
            ioRulesItemProvider.dispose();
        if (jndiNameItemProvider != null)
            jndiNameItemProvider.dispose();
        if (joinItemProvider != null)
            joinItemProvider.dispose();
        if (layoutInfoItemProvider != null)
            layoutInfoItemProvider.dispose();
        if (laneItemProvider != null)
            laneItemProvider.dispose();
        if (lengthItemProvider != null)
            lengthItemProvider.dispose();
        if (limitItemProvider != null)
            limitItemProvider.dispose();
        if (listTypeItemProvider != null)
            listTypeItemProvider.dispose();
        if (locationItemProvider != null)
            locationItemProvider.dispose();
        if (loopMultiInstanceItemProvider != null)
            loopMultiInstanceItemProvider.dispose();
        if (loopStandardItemProvider != null)
            loopStandardItemProvider.dispose();
        if (loopItemProvider != null)
            loopItemProvider.dispose();
        if (memberItemProvider != null)
            memberItemProvider.dispose();
        if (messageFlowItemProvider != null)
            messageFlowItemProvider.dispose();
        if (messageItemProvider != null)
            messageItemProvider.dispose();
        if (methodItemProvider != null)
            methodItemProvider.dispose();
        if (modificationDateItemProvider != null)
            modificationDateItemProvider.dispose();
        if (myRoleItemProvider != null)
            myRoleItemProvider.dispose();
        if (nodeGraphicsInfoItemProvider != null)
            nodeGraphicsInfoItemProvider.dispose();
        if (noItemProvider != null)
            noItemProvider.dispose();
        if (objectItemProvider != null)
            objectItemProvider.dispose();
        if (outputSetItemProvider != null)
            outputSetItemProvider.dispose();
        if (outputItemProvider != null)
            outputItemProvider.dispose();
        if (packageHeaderItemProvider != null)
            packageHeaderItemProvider.dispose();
        if (packageItemProvider != null)
            packageItemProvider.dispose();
        if (pageItemProvider != null)
            pageItemProvider.dispose();
        if (pagesItemProvider != null)
            pagesItemProvider.dispose();
        if (participantItemProvider != null)
            participantItemProvider.dispose();
        if (participantTypeElemItemProvider != null)
            participantTypeElemItemProvider.dispose();
        if (partnerLinkItemProvider != null)
            partnerLinkItemProvider.dispose();
        if (partnerLinkTypeItemProvider != null)
            partnerLinkTypeItemProvider.dispose();
        if (partnerRoleItemProvider != null)
            partnerRoleItemProvider.dispose();
        if (partnerItemProvider != null)
            partnerItemProvider.dispose();
        if (performerItemProvider != null)
            performerItemProvider.dispose();
        if (performersItemProvider != null)
            performersItemProvider.dispose();
        if (pojoApplicationItemProvider != null)
            pojoApplicationItemProvider.dispose();
        if (poolItemProvider != null)
            poolItemProvider.dispose();
        if (precisionItemProvider != null)
            precisionItemProvider.dispose();
        if (priorityItemProvider != null)
            priorityItemProvider.dispose();
        if (priorityUnitItemProvider != null)
            priorityUnitItemProvider.dispose();
        if (processHeaderItemProvider != null)
            processHeaderItemProvider.dispose();
        if (processItemProvider != null)
            processItemProvider.dispose();
        if (propertyInputItemProvider != null)
            propertyInputItemProvider.dispose();
        if (recordTypeItemProvider != null)
            recordTypeItemProvider.dispose();
        if (redefinableHeaderItemProvider != null)
            redefinableHeaderItemProvider.dispose();
        if (referenceItemProvider != null)
            referenceItemProvider.dispose();
        if (resourceCostsItemProvider != null)
            resourceCostsItemProvider.dispose();
        if (responsibleItemProvider != null)
            responsibleItemProvider.dispose();
        if (resultErrorItemProvider != null)
            resultErrorItemProvider.dispose();
        if (resultMultipleItemProvider != null)
            resultMultipleItemProvider.dispose();
        if (roleItemProvider != null)
            roleItemProvider.dispose();
        if (routeItemProvider != null)
            routeItemProvider.dispose();
        if (ruleNameItemProvider != null)
            ruleNameItemProvider.dispose();
        if (ruleItemProvider != null)
            ruleItemProvider.dispose();
        if (scaleItemProvider != null)
            scaleItemProvider.dispose();
        if (schemaItemProvider != null)
            schemaItemProvider.dispose();
        if (scriptItemProvider != null)
            scriptItemProvider.dispose();
        if (serviceItemProvider != null)
            serviceItemProvider.dispose();
        if (simulationInformationItemProvider != null)
            simulationInformationItemProvider.dispose();
        if (splitItemProvider != null)
            splitItemProvider.dispose();
        if (startEventItemProvider != null)
            startEventItemProvider.dispose();
        if (subFlowItemProvider != null)
            subFlowItemProvider.dispose();
        if (taskApplicationItemProvider != null)
            taskApplicationItemProvider.dispose();
        if (taskManualItemProvider != null)
            taskManualItemProvider.dispose();
        if (taskReceiveItemProvider != null)
            taskReceiveItemProvider.dispose();
        if (taskReferenceItemProvider != null)
            taskReferenceItemProvider.dispose();
        if (taskScriptItemProvider != null)
            taskScriptItemProvider.dispose();
        if (taskSendItemProvider != null)
            taskSendItemProvider.dispose();
        if (taskServiceItemProvider != null)
            taskServiceItemProvider.dispose();
        if (taskItemProvider != null)
            taskItemProvider.dispose();
        if (taskUserItemProvider != null)
            taskUserItemProvider.dispose();
        if (timeEstimationItemProvider != null)
            timeEstimationItemProvider.dispose();
        if (transactionItemProvider != null)
            transactionItemProvider.dispose();
        if (transitionRefItemProvider != null)
            transitionRefItemProvider.dispose();
        if (transitionRestrictionItemProvider != null)
            transitionRestrictionItemProvider.dispose();
        if (transitionItemProvider != null)
            transitionItemProvider.dispose();
        if (triggerIntermediateMultipleItemProvider != null)
            triggerIntermediateMultipleItemProvider.dispose();
        if (triggerMultipleItemProvider != null)
            triggerMultipleItemProvider.dispose();
        if (triggerResultCancelItemProvider != null)
            triggerResultCancelItemProvider.dispose();
        if (triggerResultCompensationItemProvider != null)
            triggerResultCompensationItemProvider.dispose();
        if (triggerResultSignalItemProvider != null)
            triggerResultSignalItemProvider.dispose();
        if (triggerResultLinkItemProvider != null)
            triggerResultLinkItemProvider.dispose();
        if (triggerResultMessageItemProvider != null)
            triggerResultMessageItemProvider.dispose();
        if (triggerConditionalItemProvider != null)
            triggerConditionalItemProvider.dispose();
        if (triggerTimerItemProvider != null)
            triggerTimerItemProvider.dispose();
        if (typeDeclarationItemProvider != null)
            typeDeclarationItemProvider.dispose();
        if (unionTypeItemProvider != null)
            unionTypeItemProvider.dispose();
        if (validFromItemProvider != null)
            validFromItemProvider.dispose();
        if (validToItemProvider != null)
            validToItemProvider.dispose();
        if (vendorExtensionsItemProvider != null)
            vendorExtensionsItemProvider.dispose();
        if (vendorExtensionItemProvider != null)
            vendorExtensionItemProvider.dispose();
        if (waitingTimeItemProvider != null)
            waitingTimeItemProvider.dispose();
        if (webServiceFaultCatchItemProvider != null)
            webServiceFaultCatchItemProvider.dispose();
        if (webServiceOperationItemProvider != null)
            webServiceOperationItemProvider.dispose();
        if (webServiceApplicationItemProvider != null)
            webServiceApplicationItemProvider.dispose();
        if (workingTimeItemProvider != null)
            workingTimeItemProvider.dispose();
        if (xsltApplicationItemProvider != null)
            xsltApplicationItemProvider.dispose();
    }

}
