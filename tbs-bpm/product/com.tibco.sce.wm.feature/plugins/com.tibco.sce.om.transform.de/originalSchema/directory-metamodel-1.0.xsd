<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns:demeta="http://tibco.com/n2/directory-metamodel/1.0"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            targetNamespace="http://tibco.com/n2/directory-metamodel/1.0"
            elementFormDefault="qualified" attributeFormDefault="unqualified">

  <xsd:complexType name="namedEntity" abstract="true">
    <xsd:annotation>
      <xsd:documentation>
        This is the super-class of all entities (model and meta-model) that carry an ID and
        name. The ID will uniquely identify the entity within all organizational models, and
        can also be used to create references between elements in the XML document.
        The name is purely descriptive.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="id" type="xsd:ID" use="required" />
    <xsd:attribute name="name" type="xsd:string" use="optional" />
    <xsd:attribute name="description" type="xsd:string" use="optional" />
    <xsd:attribute name="label" type="xsd:string" use="optional" />
  </xsd:complexType>

  <xsd:complexType name="multipleFeature">
    <xsd:annotation>
      <xsd:documentation>
        Features are a means of referencing a meta-model type from within another meta-model
        type. Thus, org unit, position and location types can be defined once and re-used
        by reference within several other types.
        The number of instances of a Feature can also be constrained by upper and lower
        boundaries. An upperBound attribute value of "-1" signifies that nopper constraint
        is placed.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="demeta:namedEntity">
        <xsd:attribute name="type" type="xsd:IDREF" use="required" />
        <xsd:attribute name="lowerBound" type="xsd:int" use="optional" default="0" />
        <xsd:attribute name="upperBound" type="xsd:int" use="optional" default="1" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="enumValue">
    <xsd:attribute name="value" type="xsd:string" use="required" />
  </xsd:complexType>

  <xsd:complexType name="enumSet">
    <xsd:sequence maxOccurs="unbounded">
      <xsd:element name="enumValue" type="demeta:enumValue" />
    </xsd:sequence>
  </xsd:complexType>

  <xsd:element name="enumSet" type="demeta:enumSet" />

  <xsd:simpleType name="parameterType">
    <xsd:restriction base="xsd:NCName">
      <xsd:enumeration value="String" />
      <xsd:enumeration value="Decimal" />
      <xsd:enumeration value="Integer" />
      <xsd:enumeration value="Boolean" />
      <xsd:enumeration value="DateTime" />
      <xsd:enumeration value="Date" />
      <xsd:enumeration value="Time" />
      <xsd:enumeration value="Enum" />
      <xsd:enumeration value="EnumSet" />
      <xsd:enumeration value="Set" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:complexType name="parameterDescriptor">
    <xsd:annotation>
      <xsd:documentation>
        Describes an arbitrary parameter that can be associated with a conceptNoun
        elements (and their sub-classes). The value instances are 
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="demeta:namedEntity">
        <xsd:sequence minOccurs="0">
          <xsd:element ref="demeta:enumSet" />
        </xsd:sequence>
        <xsd:attribute name="type" type="demeta:parameterType" use="required" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="parameterDescriptor" type="demeta:parameterDescriptor" />

  <xsd:complexType name="conceptNoun" abstract="true">
    <xsd:annotation>
      <xsd:documentation>
        conceptNoun is the super-class of all organizational entities. Itself is a
        sub-class of namedEntity; which carries the name and description attributes.
        conceptNoun carries arbitrary parameters.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="demeta:namedEntity">
        <xsd:sequence minOccurs="0" maxOccurs="unbounded">
          <xsd:element ref="demeta:parameterDescriptor" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="locationType">
    <xsd:annotation>
      <xsd:documentation>
        A geographic location to which organizations, org units and org positions can be
        associated. A sub-class of conceptNoun, it carries an identifier and name. It also
        carries locale and timezone identifiers (using the same coding as Java). These
        will provide future support for currency and date conversion.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="demeta:conceptNoun">
        <xsd:attribute name="locale" type="xsd:string" use="optional" />
        <xsd:attribute name="timezone" type="xsd:string" use="optional" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="locationType" type="demeta:locationType" />

  <xsd:complexType name="positionType">
    <xsd:annotation>
      <xsd:documentation>
        Describes an organizational position. organizational positions are composite elements
        of organizational units, but the types can be created as root elements of the meta-model,
        and referenced by any number of orgUnitType elements.

        A position can be filled by any number of human resources, but an ideal number can be
        specified. This ideal number is merely an indication, and a lower or higher number of
        human resource assignments can be made.

        positionType can be used to express lines of responsibility within an organizational unit.
        For example, their may be a positionType of "manager", to which "customer service
        representatives" may report.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="demeta:conceptNoun" />
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="positionType" type="demeta:positionType" />

  <xsd:element name="positionFeature" type="demeta:multipleFeature">
    <xsd:annotation>
      <xsd:documentation>
        Used within orgUnitType to create a reference to a positionType. The reference can also
        specify the multiplicity (how many instances of the type may be held).
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:complexType name="orgRelationshipType">
    <xsd:annotation>
      <xsd:documentation>
        Describes a relationship between two orgUnitTypes; and, thus, the instances of orgUnit.
        The relationship may be of a matrix, network, type, or hierarchical, parent / child, type.
        The hierarchical relationship may, alternatively, be expressed as nested orgUnit elements.

        These relationships may define such things as; a line of reporting within the organization,
        or relationships between project teams.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="demeta:conceptNoun">
        <xsd:attribute name="hierarchical" type="xsd:boolean" use="optional" default="true" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="orgRelationshipType" type="demeta:orgRelationshipType" />

  <xsd:complexType name="orgUnitType">
    <xsd:annotation>
      <xsd:documentation>
        Describes a type of organizational unit within an organization. organizational units may be
        entire departments; such as accounts department or call centre, that are likely to be long-lived.
        Or they may be project teams, that are created only for the duration of a project.

        orgUnitType (and its instance element orgUnit) may contain sub-orgUnit elements, and so be
        structured in a hierarchical fashion.

        orgUnitType also define the types of positions to which human resources can be assigned.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="demeta:conceptNoun">
        <xsd:choice minOccurs="0" maxOccurs="unbounded">
          <xsd:element ref="demeta:positionFeature" />
          <xsd:element ref="demeta:orgUnitFeature" />
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="orgUnitType" type="demeta:orgUnitType" />

  <xsd:complexType name="orgUnitFeature">
    <xsd:annotation>
      <xsd:documentation>
        Used to create a reference to an orgUnitType within an organizationType.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="demeta:multipleFeature">
        <xsd:attribute name="context" type="xsd:IDREF" use="optional">
          <xsd:annotation>
            <xsd:documentation>
              References a orgRelationshipType to describe the relationship between the
              orgUnitType referenced by this feature and the orgUnitType that contains
              this orgUnitFeature.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="orgUnitFeature" type="demeta:orgUnitFeature" />

  <xsd:complexType name="organizationType">
    <xsd:annotation>
      <xsd:documentation>
        Describes an organization as a legal entity in which organizational units reside.
        A meta-model can define several types of organization, and references between
        the organizational units can span organizations.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="demeta:conceptNoun">
        <xsd:choice minOccurs="0" maxOccurs="unbounded">
          <xsd:element ref="demeta:orgUnitFeature" />
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="organizationType" type="demeta:organizationType" />

  <xsd:element name="metaModel">
    <xsd:annotation>
      <xsd:documentation>
        The root node of the meta-model document.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element ref="demeta:locationType" />
        <xsd:element ref="demeta:positionType" />
        <xsd:element ref="demeta:orgRelationshipType" />
        <xsd:element ref="demeta:orgUnitType" />
        <xsd:element ref="demeta:organizationType" />
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>
</xsd:schema>
