<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns:de="http://tibco.com/bpm/directory-model/2.0"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            targetNamespace="http://tibco.com/bpm/directory-model/2.0"
            elementFormDefault="qualified" attributeFormDefault="unqualified" version="2.0"
            xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" 
            ecore:nsPrefix="de" 
            ecore:package="com.tibco.n2.directory.model.de">

  <xsd:simpleType name="VersionNumber">
    <xsd:annotation>
      <xsd:documentation>A version number in the form described by OSGi. That is; major, minor, micro and qualifier values separated by periods.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:token">
      <!--  xsd:pattern value="^\d{1,}(\.\d{1,}(\.\d{1,}(\..*)?)?)?$"/ -->
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="AllocationMethod">
    <xsd:annotation>
      <xsd:documentation>
        Forms part of the SelectionMode attribute group, this enumerated type
        identifies the algorithm used to select a resources associated with a
        particular organizational entity.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="ANY">
        <xsd:annotation>
          <xsd:documentation>Work is allocated on a random basis.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="NEXT">
        <xsd:annotation>
          <xsd:documentation>Work is allocated on a round-robin basis.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="THIS">
        <xsd:annotation>
          <xsd:documentation>Work is allocated to the specifically identified Resource (user).</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="PLUGIN">
        <xsd:annotation>
          <xsd:documentation>Work is allocated according to the algorithm of the named plug-in - not yet supported.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:attributeGroup name="SelectionMode">
    <xsd:annotation>
      <xsd:documentation>
        Selection Mode identifies the method of selecting a single Resource from
        a collection associated with an organizational entity. The alloc-method
        identifies the method of selection, one of which is "PLUGIN". If the method
        is "PLUGIN" then the plugin attribute names the "custom" algorithm to be
        used.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="alloc-method" type="de:AllocationMethod" default="ANY"/>
    <xsd:attribute name="plugin" type="xsd:string" use="optional"/>
  </xsd:attributeGroup>

  <xsd:complexType name="NamedEntity" abstract="true">
    <xsd:annotation>
      <xsd:documentation>
        This is the super-class of all entities (model and meta-model) that carry an ID and
        name. The ID will uniquely identify the entity within all organizational models, and
        can also be used to create references between elements in the XML document.
        The name is purely descriptive.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="id" type="xsd:NCName" use="required" ecore:id="true">
      <xsd:annotation>
        <xsd:documentation>
          The entity's unique identifier.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="name" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>
          The name of the entity.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="label" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          The alternative (display) name of the entity.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="description" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          The entity's description.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>

  <xsd:complexType name="TypedEntity" abstract="true">
    <xsd:annotation>
      <xsd:documentation>
        The sub-class of org-model entities that can be defined by an EntityType within
        the meta-model. These are Location, Position, OrgUnit and Organization.
        If the referenced EntityType carries any AttributeType definitions, the TypedEntity
        can carry values for those attributes.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:NamedEntity">
        <xsd:sequence>
          <xsd:element name="attribute-value" type="de:Attribute" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>
                The value of an AttributeType configured in the referenced EntityType.
                The particular AttributeType is identified by the enclosed "definition"
                reference.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="definition" type="xsd:NCName" use="optional" ecore:resolveProxies="false" ecore:reference="de:EntityType">
          <xsd:annotation>
            <xsd:documentation>
              The identity reference to the EntityType from which this entity is derived,
              if any.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="EntityType" abstract="true">
    <xsd:annotation>
      <xsd:documentation>
        The sub-class of all meta-model entities. These meta-model entities provide
        additional schema information (and attributes) for the TypedEntities that
        reference them.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:NamedEntity">
        <xsd:sequence>
          <xsd:element name="attribute" type="de:AttributeType" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>
                Describes an attribute that TypedEntities that reference this EntityType can hold.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:simpleType name="DataType">
    <xsd:annotation>
      <xsd:documentation>
        Defines the range of permitted attribute data types.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="String"/>
      <xsd:enumeration value="Integer"/>
      <xsd:enumeration value="Decimal"/>
      <xsd:enumeration value="Date"/>
      <xsd:enumeration value="Time"/>
      <xsd:enumeration value="DateTime"/>
      <xsd:enumeration value="Boolean"/>
      <xsd:enumeration value="Enum"/>
      <xsd:enumeration value="EnumSet"/>
      <xsd:enumeration value="Set"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:group name="AttributeValue">
    <xsd:annotation>
      <xsd:documentation>
        Defines the value assigned to an attribute. The value must use the element
        type that matches the data type of the attribute; e.g. an attribute of
        DataType "DateTime" must use the element "date-time".
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="string" type="xsd:string" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="integer" type="xsd:long" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="decimal" type="xsd:decimal" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="date" type="xsd:date" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="time" type="xsd:time" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="date-time" type="xsd:dateTime" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="boolean" type="xsd:boolean" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="enum" type="xsd:string" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="enum-set" type="xsd:string" minOccurs="1" maxOccurs="unbounded"/>
      <xsd:element name="element" type="xsd:string" minOccurs="1" maxOccurs="unbounded"/>
    </xsd:choice>
  </xsd:group>

  <xsd:complexType name="AttributeType">
    <xsd:annotation>
      <xsd:documentation>
        Describes an arbitrary attributes that can be associated with a TypedEntity
        elements (and their sub-classes). For attributes of data-type "EnumSet" and
        "Enum" the sub-elements "enum" list the permitted values.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:NamedEntity">
        <xsd:sequence>
          <xsd:element name="enum" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>
                Used only for attributes of data-type "Enum" and "EnumSet" to list the
                permitted enumeration values.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="data-type" type="de:DataType" use="required">
          <xsd:annotation>
            <xsd:documentation>
              The type of data that the attribute holds.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="Attribute">
    <xsd:annotation>
      <xsd:documentation>
        Describes an instance of AttributeType, listing the values assigned to the
        attribute instance.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:group ref="de:AttributeValue" minOccurs="0" maxOccurs="1"/>
    <xsd:attribute name="definition" type="xsd:NCName" use="required" ecore:resolveProxies="false" ecore:reference="de:AttributeType">
      <xsd:annotation>
        <xsd:documentation>
          Identifies, by its ID, the AttributeType that defines this Attribute.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>

  <xsd:complexType name="Qualifier">
    <xsd:annotation>
      <xsd:documentation>
        Describes an arbitrary qualifier attribute that can be associated with a
        Privilege or Capability. For qualifiers of data-type "EnumSet" and "Enum"
        the sub-elements "enum" list the permitted values.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="enum" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            Used only for qualifiers of data-type "Enum" and "EnumSet" to list the
            permitted enumeration values.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="data-type" type="de:DataType" use="required">
      <xsd:annotation>
        <xsd:documentation>
          The type of data that the qualifier attribute holds.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>

  <xsd:complexType name="QualifiedHolding" abstract="true">
    <xsd:annotation>
      <xsd:documentation>
        This decribes the holding of an entity (assigned to a Group, Position or Org-Unit)
        and any qualifying value that applies to that holding.
        The term "qualifier" simply means that the association may carry a value that
        distinguishes two holdings of the same entity. For example, the Privilege
        to approve purchase orders may be qualified with the max value to which those
        purchase orders are made.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:group ref="de:AttributeValue" minOccurs="0" maxOccurs="1">
      <xsd:annotation>
        <xsd:documentation>
          Gives the value, for this instance, of any qualifier that the referenced Privilege
          might hold.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:group>
  </xsd:complexType>

  <xsd:complexType name="Privilege">
    <xsd:annotation>
      <xsd:documentation>
        A Privilege can be assigned to Groups, Position and Org-Units. A Position also
        inherits the Privileges of the Org-Unit to which it belongs. Groups inherit the
        Privileges held by their parent Group.
        Privileges define the authority of the human resources associated with those
        Privilege holdings. For example, the authority to approve purchase orders over
        a certain amount.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:NamedEntity">
        <xsd:sequence>
          <xsd:element name="qualifier" type="de:Qualifier" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>
                Describes the qualifier attribute that can be used to refine any Privilege
                assignment. The PrivilegeHolding will provide any value(s) for this qualifier.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="PrivilegeHolding">
    <xsd:annotation>
      <xsd:documentation>
        This decribes the holding of a Privilege (assigned to a Group, Position or Org-Unit)
        and any qualifying value that applies to that holding.
        The term "qualifier" simply means that the association may carry a value that
        distinguishes two holdings of the same Privilege. For example, the Privilege
        to approve purchase orders may be qualified with the max value to which those
        purchase orders are made.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:QualifiedHolding">
        <xsd:attribute name="privilege" type="xsd:NCName" use="required" ecore:resolveProxies="false" ecore:reference="de:Privilege">
          <xsd:annotation>
            <xsd:documentation>
          Identifies, by its ID, the Privilege that this holding refers to.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="Capability">
    <xsd:annotation>
      <xsd:documentation>
        Capabilities are a property of groups and define what tasks the resources
        associated with a group is able to perform; although, the interpretation
        of tasks and ability is specific to the client's environment. Capabilities
        may also be assigned directly to a resource.

        Positions and Groups may also have capabilities associated with them to
        restrict the human resources that may be assigned to them; i.e., only those
        human resources holding the required capabilities can hold the position, or
        group.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:NamedEntity">
        <xsd:sequence>
          <xsd:element name="qualifier" type="de:Qualifier" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
              <xsd:documentation>
                Describes the qualifier attribute that can be used to refine any Capability
                assignment. The CapabilityHolding will provide any value(s) for this qualifier.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="CapabilityHolding">
    <xsd:annotation>
      <xsd:documentation>
        This decribes the holding of a Capability (assigned to a Group or Position) and
        any qualifying value that applies to that holding.
        The term "qualified" simply means that the association may carry a value that
        distinguishes two holdings of the same Capability. For example, the Capability
        to speak a language may be qualified with the name of that language.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:QualifiedHolding">
        <xsd:attribute name="capability" type="xsd:NCName" use="required" ecore:resolveProxies="false" ecore:reference="de:Capability">
          <xsd:annotation>
            <xsd:documentation>
          Identifies, by its ID, the Capability that this holding refers to.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <xsd:complexType name="CapabilityCategory">
    <xsd:annotation>
      <xsd:documentation>
      	Allows Categories to be grouped into categories; perhaps by functionality. The categories can also be nested.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:NamedEntity">
	    <xsd:choice minOccurs="0" maxOccurs="unbounded">
		  <xsd:element name="capability-category" type="de:CapabilityCategory" minOccurs="0" maxOccurs="unbounded">
	        <xsd:annotation>
	          <xsd:documentation>
	            Defines sub-categories to this Category; creating a hierarchical structure.
	          </xsd:documentation>
	        </xsd:annotation>
	      </xsd:element>
	      <xsd:element name="capability" type="de:Capability" minOccurs="0" maxOccurs="unbounded">
	        <xsd:annotation>
	          <xsd:documentation>
	            A capability that is contained within this category.
	          </xsd:documentation>
	        </xsd:annotation>
	      </xsd:element>
	    </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="PrivilegeCategory">
    <xsd:annotation>
      <xsd:documentation>
      	Allows Privileges to be grouped into categories; perhaps by functionality. The categories can also be nested.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:NamedEntity">
	    <xsd:choice minOccurs="0" maxOccurs="unbounded">
		  <xsd:element name="privilege-category" type="de:PrivilegeCategory" minOccurs="0" maxOccurs="unbounded">
	        <xsd:annotation>
	          <xsd:documentation>
	            Defines sub-categories to this Category; creating a hierarchical structure.
	          </xsd:documentation>
	        </xsd:annotation>
	      </xsd:element>
	      <xsd:element name="privilege"  type="de:Privilege"  minOccurs="0" maxOccurs="unbounded">
	        <xsd:annotation>
	          <xsd:documentation>
	            A privilege that is contained within this category.
	          </xsd:documentation>
	        </xsd:annotation>
	      </xsd:element>
	    </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="SystemAction">
    <xsd:annotation>
      <xsd:documentation>
        Identifies the Privileges required to perform the named system action.

        System Actions are grouped by the component to which the action is associated.
        For example, the action of re-allocating a work-item would be associated
        with the BRM component. Within the component grouping, each action must have a
        unique name.

        The collection of required Privilege associations define the Privileges
        a user must hold, or their equivalent, in order for the System Action to
        be authorised.

        Elements of this type may be nested within elements of type Group, Organization
        Org-Unit and Position. The nesting element defines the scope to which the
        system action applies. For example; a Position may have a SystemAction named
        "View Work-Item". Someone wanting to view the work-items for that Position
        would have to hold the Required Privilege identified in that SystemAction.

        A "global" set of SystemActions can be configured by placing them directly
        within the root element "model".
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="req-privilege" type="de:PrivilegeHolding" minOccurs="1" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            Identifies the Privilege(s) (and any qualifing value) required to perform
            this System Action.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="component" type="xsd:string" use="optional"/>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="Group">
    <xsd:annotation>
      <xsd:documentation>
        Groups define a job description, which can be further refined by sub-groups. For example,
        the group "developer" may be refined by sub-groups "support" and "product".
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:NamedEntity">
        <xsd:choice minOccurs="0" maxOccurs="unbounded" ecore:featureMap="choiceGroup">
          <xsd:element name="req-capability" type="de:CapabilityHolding" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>
                Identifies a Capability that Resources should hold in order to be a member of this Group.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="privilege-held" type="de:PrivilegeHolding" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>
                Identifies a Privilege that member's of this Group will inherit. Member's will also
                inherit those Privileges assigned to a Group's parent Groups.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="group" type="de:Group" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>
                Defines sub-groups to this Group; creating a hierarchical structure.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="system-action" type="de:SystemAction" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>
                Identifies a System Action that might be performed on this Group, and the
                Privilege (optionally qualified) the caller must hold in order to perform it.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:choice>
        <xsd:attributeGroup ref="de:SelectionMode">
          <xsd:annotation>
            <xsd:documentation>
              Names the method by which work-items are allocated to Resources belonging to this Group.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attributeGroup>
        <xsd:attribute name="undelivered-queue" type="xsd:boolean" default="false">
          <xsd:annotation>
            <xsd:documentation>
              Only to be used by the 'system' org-model (version 0), to identify the Group to which
              'undelivered' work-items should be assigned.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="Location">
    <xsd:annotation>
      <xsd:documentation>
        A geographic location to which organizations, org units and org positions can be
        associated. A sub-class of typedEntity, it can take its type from the meta-model
        element locationType.
        It also carries locale and timezone identifiers (using the same coding as Java).
        These will provide future support for currency and date conversion.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:TypedEntity">
        <xsd:attribute name="locale" type="xsd:string" use="optional"/>
        <xsd:attribute name="timezone" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="Position">
    <xsd:annotation>
      <xsd:documentation>
        Defines an organizational Position. Organizational Positions are composite elements
        of OrgUnits. A sub-class of TypedEntity, it can take its type from the meta-model
        element PositionType.
        A Position can be filled by any number of human resources, but an ideal number can be
        specified. This ideal number is merely an indication, and a lower or higher
        number of human resource assignments can be made.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:TypedEntity">
        <xsd:choice minOccurs="0" maxOccurs="unbounded"  ecore:featureMap="choiceGroup">
          <xsd:element name="req-capability" type="de:CapabilityHolding" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>
                Identifies a Capability that Resources should hold in order to be a member of this Position.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="privilege-held" type="de:PrivilegeHolding" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>
                Identifies a Privilege that member's of this Position will inherit. Member's will also
                inherit those Privileges assigned to the Position's OrgUnit.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="system-action" type="de:SystemAction" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>
                Identifies a System Action that might be performed on this Position, and the
                Privilege (optionally qualified) the caller must hold in order to perform it.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:choice>
        <xsd:attribute name="location" type="xsd:NCName" use="optional" ecore:resolveProxies="false" ecore:reference="de:Location"/>
        <xsd:attribute name="ideal-number" type="xsd:unsignedInt" use="optional"/>
        <xsd:attribute name="feature" type="xsd:NCName" use="optional" ecore:resolveProxies="false" ecore:reference="de:Feature">
          <xsd:annotation>
            <xsd:documentation>
              Identifies the Position Feature reference from which this Position is derived, if any.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attributeGroup ref="de:SelectionMode">
          <xsd:annotation>
            <xsd:documentation>
              Names the method by which work-items are allocated to Resources belonging to this Position.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attributeGroup>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="OrgUnitBase">
    <xsd:annotation>
      <xsd:documentation>
        Defines an organizational unit within an organization. organizational units may be entire
        departments; such as accounts department or call centre, that are likely to be
        long-lived.
        Or they may be project teams, that are created only for the duration of a project.
        orgUnits may contain sub orgUnit elements, and so be structured in a hierarchical fashion.
        orgUnits also define the positions to which human resources can be assigned; and the
        privileges those positions will inherit.
        This type is abstract, and the two concrete types "OrgUnit" and "ModelOrgUnit" extend it
        for different reasons. "OrgUnit" elements are defined within a model; whilst "ModelOrgUnit"
        elements stand apart from the model, acting as templates for dynamically generated model
        instances.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:TypedEntity">
        <xsd:choice minOccurs="0" maxOccurs="unbounded"  ecore:featureMap="choiceGroup">
          <xsd:element name="privilege-held" type="de:PrivilegeHolding" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>
                Identifies a Privilege that member's of this OrgUnit will inherit. Member's will also
                inherit those Privileges assigned to the OrgUnit's Positions.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="system-action" type="de:SystemAction" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>
                Identifies a System Action that might be performed on this OrgUnit, and the
                Privilege (optionally qualified) the caller must hold in order to perform it.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:choice>
        <xsd:attribute name="location" type="xsd:NCName" use="optional" ecore:resolveProxies="false" ecore:reference="de:Location">
          <xsd:annotation>
            <xsd:documentation>
              Identifies the Location from which this OrgUnit will take its locality.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="feature" type="xsd:NCName" use="optional" ecore:resolveProxies="false" ecore:reference="de:Feature">
          <xsd:annotation>
            <xsd:documentation>
              Identifies the OrgUnit Feature reference from which this OrgUnit is derived, if any.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attributeGroup ref="de:SelectionMode">
          <xsd:annotation>
            <xsd:documentation>
              Names the method by which work-items are allocated to Resources belonging to this OrgUnit.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attributeGroup>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="OrgUnit">
    <xsd:annotation>
      <xsd:documentation>
        Defines an organizational unit within an organization. organizational units may be entire
        departments; such as accounts department or call centre, that are likely to be
        long-lived.
        An OrgUnit may, in addition to its normal role, be chosen as an Extension Point.  
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:OrgUnitBase">
        <xsd:sequence>
          <xsd:element name="model-template-ref" type="xsd:NCName" minOccurs="0" maxOccurs="1" ecore:resolveProxies="false" ecore:reference="de:ModelTemplate">
            <xsd:annotation>
              <xsd:documentation>
              Identifies this OrgUnit as a Model Extension Point, and identifies the ModelTemplate
              element that will form the template for the dynamically generated Model Instances.
              When an instance is created this OrgUnit will become its parent within the OrgUnit
              hierarchy.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="position" type="de:Position" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>
                Defines a Position contained within this OrgUnit.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="org-unit" type="de:OrgUnit" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>
                Defines sub-OrgUnits to this OrgUnit; creating a hierarchical structure.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="ModelOrgUnit">
    <xsd:annotation>
      <xsd:documentation>
        An extension of OrgUnitBase that forms a model fragment known as a Model Template.
        Each Model Template consists of a hierarchy of OrgUnits, Positions and Sub-OrgUnits.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:OrgUnitBase">
        <xsd:sequence>
          <xsd:element name="model-position" type="de:Position" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>
                Defines a Position contained within this OrgUnit.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="model-org-unit" type="de:ModelOrgUnit" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>
                Defines sub-OrgUnits to this OrgUnit; creating a hierarchical structure.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="ModelTemplate">
    <xsd:annotation>
      <xsd:documentation>
        An extension of OrgUnitBase that forms a model fragment known as a Model Template.
        Each Model Template consists of a hierarchy of OrgUnits, Positions and Sub-OrgUnits.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:ModelOrgUnit">
        <xsd:sequence>
          <xsd:element name="instance-id-attribute" type="xsd:token" minOccurs="1" maxOccurs="unbounded">
            <xsd:annotation>
               <xsd:documentation>The root entity of a Model Template will carry additional attributes,
               the names of which will listed here (at least one should be assigned).
               Upon instantiation of the Model Template Instance, these named properties will be assigned
               values from associated LDAP Attributes, selected in the Organisation Extension Point
               configuration. These will form the uniquely distinguishing attributes of a Dynamic
               Organisation Participant.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="Organization">
    <xsd:annotation>
      <xsd:documentation>
        Defines an organization as a legal entity in which organizational units reside.
        A meta-model can define several types of organization, and references between
        the organizational units can span organizations.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:TypedEntity">
        <xsd:choice minOccurs="0" maxOccurs="unbounded"  ecore:featureMap="choiceGroup">
          <xsd:element name="org-unit" type="de:OrgUnit" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>
                Defines an OrgUnit contained within this Organization. A heirarchy of
                OrgUnits can be created by nesting org-unit elements.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="system-action" type="de:SystemAction" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>
                Identifies a System Action that might be performed on this Organization,
                and the Privilege (optionally qualified) the caller must hold in order
                to perform it.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:choice>
        <xsd:attribute name="location" type="xsd:NCName" use="optional" ecore:resolveProxies="false" ecore:reference="de:Location">
          <xsd:annotation>
            <xsd:documentation>
              Identifies the Location from which this Organization will take its locality.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attributeGroup ref="de:SelectionMode">
          <xsd:annotation>
            <xsd:documentation>
              Names the method by which work-items are allocated to Resources belonging to this Organization.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attributeGroup>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="Feature">
    <xsd:annotation>
      <xsd:documentation>
        Features are a means of referencing a meta-model type from within another meta-model
        type. Thus, org unit, position and location types can be defined once and re-used
        by reference within several other types.
        The number of instances of a Feature can also be constrained by upper and lower
        boundaries. An upper-bound attribute value of "-1" signifies that no upper constraint
        is placed.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:NamedEntity">
        <xsd:attribute name="definition" type="xsd:NCName" use="required" ecore:resolveProxies="false" ecore:reference="de:EntityType">
          <xsd:annotation>
            <xsd:documentation>
              The identity reference to the EntityType from which this Feature is derived.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="lower-bound" type="xsd:int" default="0">
          <xsd:annotation>
            <xsd:documentation>
              The lower boundary for the number of instances of this Feature.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="upper-bound" type="xsd:int" default="1">
          <xsd:annotation>
            <xsd:documentation>
              The upper boundary for the number of instances of this Feature. A value of -1
              means 'no limit'.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="LocationType">
    <xsd:annotation>
      <xsd:documentation>
        A geographic location to which organizations, org units and org positions can be
        associated. A sub-class of EntityType, it carries an identifier and name. It also
        carries locale and timezone identifiers (using the same coding as Java). These
        will provide future support for currency and date conversion.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:EntityType">
        <xsd:attribute name="locale" type="xsd:string" use="optional"/>
        <xsd:attribute name="timezone" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="PositionType">
    <xsd:annotation>
      <xsd:documentation>
        Describes an organizational position. organizational positions are composite elements
        of organizational units, but the types can be created as root elements of the meta-model,
        and referenced by any number of OrgUnitType elements (as position-feature elements).
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:EntityType"/>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="OrgUnitType">
    <xsd:annotation>
      <xsd:documentation>
        Describes a type of organizational unit within an organization.
        Or they may be project teams, that are created only for the duration of a project.
        OrgUnitType also defines the types of positions that it may contain.
        They may also define the types of sub-org-units that it may contain.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:EntityType">
        <xsd:choice minOccurs="0" maxOccurs="unbounded"  ecore:featureMap="choiceGroup">
          <xsd:element name="position-feature" type="de:Feature" minOccurs="0" maxOccurs="unbounded"/>
          <xsd:element name="org-unit-feature" type="de:Feature" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="OrganizationType">
    <xsd:annotation>
      <xsd:documentation>
        Describes an organization as a legal entity in which organizational units reside.
        A meta-model can define several types of organization, and references between
        the organizational units can span organizations.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:EntityType">
        <xsd:sequence>
          <xsd:element name="org-unit-feature" type="de:Feature" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:simpleType name="ResourceType">
    <xsd:annotation>
      <xsd:documentation>
        Identifies a particular type of Resource.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="durable"/>
      <xsd:enumeration value="consumable"/>
      <xsd:enumeration value="human"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:complexType name="GroupHolding">
    <xsd:annotation>
      <xsd:documentation>
        A sub-element of Resource, this element records the assignment of a resource to a Group.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="group" type="xsd:NCName" use="required" ecore:resolveProxies="false" ecore:reference="de:Group"/>
  </xsd:complexType>

  <xsd:complexType name="PositionHolding">
    <xsd:annotation>
      <xsd:documentation>
        A sub-element of Resource (only for human resources), this element records the assignment
        of a human resource to a Position.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="position" type="xsd:NCName" use="required" ecore:resolveProxies="false" ecore:reference="de:Position"/>
  </xsd:complexType>

  <xsd:complexType name="Resource">
    <xsd:annotation>
      <xsd:documentation>
        Defines a resource (human, durable or consumable) and the associations it may have with
        groups, positions and capabilities.
        This is only used for the 'system' org-model (version 0), to define the tibco-admin user.
        It should not be used for any other purpose.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="0" maxOccurs="unbounded"  ecore:featureMap="choiceGroup">
      <xsd:element name="capability-held" type="de:CapabilityHolding" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="position-held" type="de:PositionHolding" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="group-held" type="de:GroupHolding" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="attribute-value" type="de:Attribute" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:choice>
    <xsd:attribute name="id" type="xsd:ID" use="required"/>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="label" type="xsd:string" use="optional"/>
    <xsd:attribute name="start-date" type="xsd:dateTime" use="optional"/>
    <xsd:attribute name="end-date" type="xsd:dateTime" use="optional"/>
    <xsd:attribute name="location" type="xsd:NCName" use="optional" ecore:resolveProxies="false" ecore:reference="de:Location"/>
    <xsd:attribute name="resource-type" type="de:ResourceType" default="human"/>
    <xsd:attribute name="ldap-alias" type="xsd:string" use="required"/>
    <xsd:attribute name="ldap-dn" type="xsd:string" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="MetaModel">
    <xsd:annotation>
      <xsd:documentation>
        The root node of the meta-model document.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="0" maxOccurs="unbounded"  ecore:featureMap="choiceGroup">
      <xsd:element name="location-type" type="de:LocationType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="position-type" type="de:PositionType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="org-unit-type" type="de:OrgUnitType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="organization-type" type="de:OrganizationType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:choice>
  </xsd:complexType>

  <xsd:element name="model">
    <xsd:annotation>
      <xsd:documentation>
        The root node of the organizational model document. Nested within this is an
        optional meta-model.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="meta-model" type="de:MetaModel" minOccurs="0" maxOccurs="1"/>
        <xsd:choice minOccurs="0" maxOccurs="unbounded"  ecore:featureMap="choiceGroup">
          <xsd:element name="model-template" type="de:ModelTemplate" minOccurs="0" maxOccurs="unbounded"/>
          <xsd:element name="capability" type="de:Capability" minOccurs="0" maxOccurs="unbounded"/>
          <xsd:element name="capability-category" type="de:CapabilityCategory" minOccurs="0" maxOccurs="unbounded"/>
          <xsd:element name="privilege" type="de:Privilege" minOccurs="0" maxOccurs="unbounded"/>
          <xsd:element name="privilege-category" type="de:PrivilegeCategory" minOccurs="0" maxOccurs="unbounded"/>
          <xsd:element name="location" type="de:Location" minOccurs="0" maxOccurs="unbounded"/>
          <xsd:element name="group" type="de:Group" minOccurs="0" maxOccurs="unbounded"/>
          <xsd:element name="organization" type="de:Organization" minOccurs="0" maxOccurs="unbounded"/>
          <xsd:element name="resource-attribute" type="de:AttributeType" minOccurs="0" maxOccurs="unbounded"/>
          <xsd:element name="system-action" type="de:SystemAction" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:choice>
        <xsd:element name="resource" type="de:Resource" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="name" type="xsd:string" use="required"/>
      <xsd:attribute name="version" type="de:VersionNumber" use="required"/>
    </xsd:complexType>

    <xsd:key name="LocationId">
      <xsd:selector xpath="de:location"/>
      <xsd:field xpath="@id"/>
    </xsd:key>
    <xsd:keyref name="PositionLocationRef" refer="de:LocationId">
      <xsd:selector xpath=".//de:position"/>
      <xsd:field xpath="@location"/>
    </xsd:keyref>
    <xsd:keyref name="ModelPositionLocationRef" refer="de:LocationId">
      <xsd:selector xpath=".//de:model-position"/>
      <xsd:field xpath="@location"/>
    </xsd:keyref>
    <xsd:keyref name="OrgUnitLocationRef" refer="de:LocationId">
      <xsd:selector xpath=".//de:org-unit"/>
      <xsd:field xpath="@location"/>
    </xsd:keyref>
    <xsd:keyref name="ModelOrgUnitLocationRef1" refer="de:LocationId">
      <xsd:selector xpath="de:model-template"/>
      <xsd:field xpath="@location"/>
    </xsd:keyref>
    <xsd:keyref name="ModelOrgUnitLocationRef2" refer="de:LocationId">
      <xsd:selector xpath=".//de:model-org-unit"/>
      <xsd:field xpath="@location"/>
    </xsd:keyref>
    <xsd:keyref name="OrgLocationRef" refer="de:LocationId">
      <xsd:selector xpath="de:organization"/>
      <xsd:field xpath="@location"/>
    </xsd:keyref>
    <xsd:keyref name="ResourceLocationRef" refer="de:LocationId">
      <xsd:selector xpath="de:resource"/>
      <xsd:field xpath="@location"/>
    </xsd:keyref>

    <xsd:key name="LocationTypeId">
      <xsd:selector xpath="de:meta-model/de:location-type"/>
      <xsd:field xpath="@id"/>
    </xsd:key>
    <xsd:keyref name="LocationTypeRef" refer="de:LocationTypeId">
      <xsd:selector xpath="de:location"/>
      <xsd:field xpath="@definition"/>
    </xsd:keyref>

    <xsd:key name="GroupId">
      <xsd:selector xpath=".//de:group"/>
      <xsd:field xpath="@id"/>
    </xsd:key>
    <xsd:keyref name="ResourceGroupRef" refer="de:GroupId">
      <xsd:selector xpath="de:resource/de:group-held"/>
      <xsd:field xpath="@group"/>
    </xsd:keyref>

    <xsd:key name="PositionId">
      <xsd:selector xpath=".//de:position"/>
      <xsd:field xpath="@id"/>
    </xsd:key>
    <xsd:keyref name="ResourcePositionRef" refer="de:PositionId">
      <xsd:selector xpath="de:resource/de:position-held"/>
      <xsd:field xpath="@position"/>
    </xsd:keyref>

    <xsd:key name="PositionFeatureId">
      <xsd:selector xpath="de:meta-model/de:org-unit-type/de:position-feature"/>
      <xsd:field xpath="@id"/>
    </xsd:key>
    <xsd:keyref name="PositionFeatureRef" refer="de:PositionFeatureId">
      <xsd:selector xpath=".//de:position"/>
      <xsd:field xpath="@feature"/>
    </xsd:keyref>
    <xsd:keyref name="ModelPositionFeatureRef" refer="de:PositionFeatureId">
      <xsd:selector xpath=".//de:model-position"/>
      <xsd:field xpath="@feature"/>
    </xsd:keyref>

    <xsd:key name="PositionTypeId">
      <xsd:selector xpath="de:meta-model/de:position-type"/>
      <xsd:field xpath="@id"/>
    </xsd:key>
    <xsd:keyref name="PositionTypeRef" refer="de:PositionTypeId">
      <xsd:selector xpath=".//de:position"/>
      <xsd:field xpath="@definition"/>
    </xsd:keyref>
    <xsd:keyref name="ModelPositionTypeRef" refer="de:PositionTypeId">
      <xsd:selector xpath=".//de:model-position"/>
      <xsd:field xpath="@definition"/>
    </xsd:keyref>
    <xsd:keyref name="PositionFeatureTypeRef" refer="de:PositionTypeId">
      <xsd:selector xpath="de:meta-model/de:org-unit-type/de:position-feature"/>
      <xsd:field xpath="@definition"/>
    </xsd:keyref>

    <xsd:key name="ModelTemplateId">
      <xsd:selector xpath="de:model-template"/>
      <xsd:field xpath="@id"/>
    </xsd:key>
    <xsd:keyref name="ModelTemplateRef" refer="de:ModelTemplateId">
      <xsd:selector xpath=".//de:org-unit"/>
      <xsd:field xpath="de:model-template-ref"/>
    </xsd:keyref>

    <xsd:key name="OrgUnitFeatureId">
      <xsd:selector xpath=".//de:org-unit-feature"/>
      <xsd:field xpath="@id"/>
    </xsd:key>
    <xsd:keyref name="OrgUnitFeatureRef" refer="de:OrgUnitFeatureId">
      <xsd:selector xpath=".//de:org-unit"/>
      <xsd:field xpath="@feature"/>
    </xsd:keyref>
    <xsd:keyref name="ModelOrgUnitFeatureRef1" refer="de:OrgUnitFeatureId">
      <xsd:selector xpath="de:model-template"/>
      <xsd:field xpath="@feature"/>
    </xsd:keyref>
    <xsd:keyref name="ModelOrgUnitFeatureRef2" refer="de:OrgUnitFeatureId">
      <xsd:selector xpath=".//de:model-org-unit"/>
      <xsd:field xpath="@feature"/>
    </xsd:keyref>

    <xsd:key name="OrgUnitTypeId">
      <xsd:selector xpath="de:meta-model/de:org-unit-type"/>
      <xsd:field xpath="@id"/>
    </xsd:key>
    <xsd:keyref name="OrgUnitTypeRef" refer="de:OrgUnitTypeId">
      <xsd:selector xpath=".//de:org-unit"/>
      <xsd:field xpath="@definition"/>
    </xsd:keyref>
    <xsd:keyref name="ModelOrgUnitTypeRef1" refer="de:OrgUnitTypeId">
      <xsd:selector xpath="de:model-template"/>
      <xsd:field xpath="@definition"/>
    </xsd:keyref>
    <xsd:keyref name="ModelOrgUnitTypeRef2" refer="de:OrgUnitTypeId">
      <xsd:selector xpath=".//de:model-org-unit"/>
      <xsd:field xpath="@definition"/>
    </xsd:keyref>
    <xsd:keyref name="OrgUnitOrgUnitFeatureTypRef" refer="de:OrgUnitTypeId">
      <xsd:selector xpath=".//de:org-unit-feature"/>
      <xsd:field xpath="@definition"/>
    </xsd:keyref>

    <xsd:key name="OrgTypeId">
      <xsd:selector xpath="de:meta-model/de:organization-type"/>
      <xsd:field xpath="@id"/>
    </xsd:key>
    <xsd:keyref name="OrgTypeRef" refer="de:OrgTypeId">
      <xsd:selector xpath="de:organization"/>
      <xsd:field xpath="@definition"/>
    </xsd:keyref>
    
    <xsd:key name="PrivilegeId">
      <xsd:selector xpath="de:privilege"/>
      <xsd:field xpath="@id"/>
    </xsd:key>
    <xsd:keyref name="RequiredPrivilegeRef" refer="de:PrivilegeId">
      <xsd:selector xpath=".//de:req-privilege"/>
      <xsd:field xpath="@privilege"/>
    </xsd:keyref>
    <xsd:keyref name="PrivilegeHeldRef" refer="de:PrivilegeId">
      <xsd:selector xpath=".//de:privilege-held"/>
      <xsd:field xpath="@privilege"/>
    </xsd:keyref>

    <xsd:key name="CapabilityId">
      <xsd:selector xpath="de:capability"/>
      <xsd:field xpath="@id"/>
    </xsd:key>
    <xsd:keyref name="RequiredCapabilityRef" refer="de:CapabilityId">
      <xsd:selector xpath=".//de:req-capability"/>
      <xsd:field xpath="@capability"/>
    </xsd:keyref>
    <xsd:keyref name="CapabilityHeldRef" refer="de:CapabilityId">
      <xsd:selector xpath="de:resource/de:capability-held"/>
      <xsd:field xpath="@capability"/>
    </xsd:keyref>

    <xsd:key name="ResourceAttributeId">
      <xsd:selector xpath="de:resource-attribute"/>
      <xsd:field xpath="@id"/>
    </xsd:key>
    <xsd:keyref name="ResourceAttributeRef" refer="de:ResourceAttributeId">
      <xsd:selector xpath="de:resource/de:attribute-value"/>
      <xsd:field xpath="@definition"/>
    </xsd:keyref>

    <xsd:key name="LocationAttributeId">
      <xsd:selector xpath="de:meta-model/de:location-type/de:attribute"/>
      <xsd:field xpath="@id"/>
    </xsd:key>
    <xsd:keyref name="LocationAttributeRef" refer="de:LocationAttributeId">
      <xsd:selector xpath="de:location/de:attribute-value"/>
      <xsd:field xpath="@definition"/>
    </xsd:keyref>

    <xsd:key name="PositionAttributeId">
      <xsd:selector xpath="de:meta-model/de:position-type/de:attribute"/>
      <xsd:field xpath="@id"/>
    </xsd:key>
    <xsd:keyref name="PositionAttributeRef" refer="de:PositionAttributeId">
      <xsd:selector xpath=".//de:position/de:attribute-value"/>
      <xsd:field xpath="@definition"/>
    </xsd:keyref>
    <xsd:keyref name="ModelPositionAttributeRef" refer="de:PositionAttributeId">
      <xsd:selector xpath=".//de:model-position/de:attribute-value"/>
      <xsd:field xpath="@definition"/>
    </xsd:keyref>

    <xsd:key name="OrgUnitAttributeId">
      <xsd:selector xpath="de:meta-model/de:org-unit-type/de:attribute"/>
      <xsd:field xpath="@id"/>
    </xsd:key>
    <xsd:keyref name="OrgUnitAttributeRef" refer="de:OrgUnitAttributeId">
      <xsd:selector xpath=".//de:org-unit/de:attribute-value"/>
      <xsd:field xpath="@definition"/>
    </xsd:keyref>
    <xsd:keyref name="ModelOrgUnitAttributeRef" refer="de:OrgUnitAttributeId">
      <xsd:selector xpath=".//de:model-org-unit/de:attribute-value"/>
      <xsd:field xpath="@definition"/>
    </xsd:keyref>

    <xsd:key name="OrgAttributeId">
      <xsd:selector xpath="de:meta-model/de:organization-type/de:attribute"/>
      <xsd:field xpath="@id"/>
    </xsd:key>
    <xsd:keyref name="OrgAttributeRef" refer="de:OrgAttributeId">
      <xsd:selector xpath="de:organization/de:attribute-value"/>
      <xsd:field xpath="@definition"/>
    </xsd:keyref>
  </xsd:element>
</xsd:schema>
