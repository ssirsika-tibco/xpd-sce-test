<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns:de="http://tibco.com/n2/directory-model/1.0"
            xmlns:demeta="http://tibco.com/n2/directory-metamodel/1.0"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            targetNamespace="http://tibco.com/n2/directory-model/1.0"
            elementFormDefault="qualified" attributeFormDefault="unqualified">

  <xsd:import namespace="http://tibco.com/n2/directory-metamodel/1.0" schemaLocation="directory-metamodel-1.0.xsd" />

  <xsd:attributeGroup name="timespan">
    <xsd:annotation>
      <xsd:documentation>
        Defines a duration of time using a start and end date. This will be an attribute of
        Resources, and of their relationship between Groups and Positions.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="startDate" type="xsd:dateTime" use="optional" />
    <xsd:attribute name="endDate" type="xsd:dateTime" use="optional" />
  </xsd:attributeGroup>

  <xsd:complexType name="parameter">
    <xsd:annotation>
      <xsd:documentation>
        Holds the value instance of a parameterDescriptor.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence minOccurs="0">
      <xsd:element ref="demeta:enumSet" />
    </xsd:sequence>
    <xsd:attribute name="descriptor" type="xsd:IDREF" use="required" />
    <xsd:attribute name="value" type="xsd:string" use="optional" />
  </xsd:complexType>

  <xsd:element name="parameter" type="de:parameter" />

  <xsd:simpleType name="allocationMethod">
    <xsd:annotation>
      <xsd:documentation>
        Forms part of the selectionMode attribute group, this enumerated type
        identifies the algorithm used to select a resources associated with a
        particular organisational entity.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="ANY" />
      <xsd:enumeration value="NEXT" />
      <xsd:enumeration value="THIS" />
      <xsd:enumeration value="PLUGIN" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:attributeGroup name="selectionMode">
    <xsd:annotation>
      <xsd:documentation>
        Selection Mode identifies the method of selecting a single Resource from
        a collection associated with an organisational entity. The allocMethod
        identifies the method of selection, one of which is "PLUGIN". If the method
        is "PLUGIN" then the plugin attribute names the "custom" algorithm to be
        used.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="allocMethod" type="de:allocationMethod" use="optional" />
    <xsd:attribute name="plugin" type="xsd:string" use="optional" />
  </xsd:attributeGroup>

  <xsd:complexType name="calendar-ref">
    <xsd:annotation>
      <xsd:documentation>
        Identifies a requirement to assign a Calendar to an Organizational entity
        (Group, Position, Org-Unit and Org).
        Calendar references are fulfilled by the Calendar Component Administrator.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="guid" type="xsd:string" use="required"/>
    <xsd:attribute name="description" type="xsd:string" use="optional"/>
  </xsd:complexType>


  <xsd:complexType name="orgEntity" abstract="true">
    <xsd:annotation>
      <xsd:documentation>
        orgEntity is the super-class of all organizational entities. Itself is a
        sub-class of namedEntity; which carries the name and description attributes.
          </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="demeta:namedEntity"/>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="typedEntity" abstract="true">
    <xsd:annotation>
      <xsd:documentation>
        typedEntity has an optional type attribute that references a meta-model
        conceptNoun sub-class element; from which it takes it type information.
        Meta-model entities (types) can carry arbitrary parameter descriptors,
        the instances of those types can hold values for those parameters.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:orgEntity">
        <xsd:sequence minOccurs="0" maxOccurs="unbounded">
          <xsd:element ref="de:parameter" />
        </xsd:sequence>
        <xsd:attribute name="type" type="xsd:IDREF" use="optional" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="location">
    <xsd:annotation>
      <xsd:documentation>
        A geographic location to which organizations, org units and org positions can be
        associated. A sub-class of typedEntity, it can take its type from the meta-model
        element locationType.
        It also carries locale and timezone identifiers (using the same coding as Java).
        These will provide future support for currency and date conversion.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:typedEntity">
        <xsd:attribute name="locale" type="xsd:string" use="optional" />
        <xsd:attribute name="timezone" type="xsd:string" use="optional" />
        <xsd:attributeGroup ref="de:selectionMode"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="location" type="de:location" />

  <xsd:complexType name="group">
    <xsd:annotation>
      <xsd:documentation>
        Groups define a job description, which can be further refined by sub-groups. For example,
        the group "developer" may be refined by sub-groups "support" and "product".
        Groups carry an, optional, attribute to indicate what work allocation method is to be
        applied to the resources associated with it. Custom allocation methods are supported by
        specifying a method of "PLUGIN" and then identifying the plug-in method as a string; what
        this string means is the responsibility of the BRM.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:typedEntity">
        <xsd:choice minOccurs="0" maxOccurs="unbounded">
          <xsd:element ref="de:groupCapability" minOccurs="0" maxOccurs="unbounded" />
          <xsd:element ref="de:groupPrivilege" minOccurs="0" maxOccurs="unbounded" />
          <xsd:element ref="de:group" minOccurs="0" maxOccurs="unbounded" />
          <xsd:element ref="de:systemAction" minOccurs="0" maxOccurs="unbounded" />
          <xsd:element name="calendar" type="de:calendar-ref" minOccurs="0" maxOccurs="1"/>
        </xsd:choice>
        <xsd:attributeGroup ref="de:selectionMode"/>
        <xsd:attribute name="isUndelivered" type="xsd:boolean" default="false" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="group" type="de:group" />

  <xsd:complexType name="privilege">
    <xsd:annotation>
      <xsd:documentation>
        A privilege can be assigned to org units and / or org positions. A position also
        inherits the privileges of the org unit to which it belongs. Privileges define
        the authority of the human resources associated with those positions. For example,
        the authority to approve purchase orders over a certain amount.

        See also: posPrivilege and orgPrivilege
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:orgEntity">
        <xsd:sequence minOccurs="0">
          <xsd:element ref="demeta:parameterDescriptor" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="privilege" type="de:privilege" />

  <xsd:complexType name="capability">
    <xsd:annotation>
      <xsd:documentation>
        Capabilities are a property of groups and define what tasks the resources
        associated with a group is able to perform; although, the interpretation
        of tasks and ability is specific to the client's environment. Capabilities
        may also be assigned directly to a resource.

        Positions may also have capabilities associated with them to restrict the
        human resources that may be assigned to them; i.e., only those human
        resources holding the required capabilities can hold the position.

        See also: reqCapability, groupCapability and resourceCapability.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:orgEntity">
        <xsd:sequence minOccurs="0">
          <xsd:element ref="demeta:parameterDescriptor" />
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="capability" type="de:capability" />

  <xsd:complexType name="position">
    <xsd:annotation>
      <xsd:documentation>
        Defines an organizational position. organizational positions are composite elements
        of organizational units. A sub-class of typedEntity, it can take its type from the
        meta-model element positionType.

        A position can be filled by any number of human resources, but an ideal number can be
        specified. This ideal number is merely an indication, and a lower or higher
        number of
        human resource assignments can be made.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:typedEntity">
        <xsd:choice minOccurs="0" maxOccurs="unbounded">
          <xsd:element ref="de:reqCapability" minOccurs="0" maxOccurs="unbounded" />
          <xsd:element ref="de:posPrivilege" minOccurs="0" maxOccurs="unbounded" />
          <xsd:element ref="de:systemAction" minOccurs="0" maxOccurs="unbounded" />
          <xsd:element name="calendar" type="de:calendar-ref" minOccurs="0" maxOccurs="1"/>
        </xsd:choice>
        <xsd:attribute name="locationId" type="xsd:IDREF" use="optional" />
        <xsd:attribute name="featureId" type="xsd:IDREF" use="optional" />
        <xsd:attribute name="idealNumber" type="xsd:unsignedInt" use="optional" />
        <xsd:attributeGroup ref="de:selectionMode"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="position" type="de:position" />

  <xsd:complexType name="orgRelationship">
    <xsd:annotation>
      <xsd:documentation>
        Defines an relationship between two orgUnit elements. The relationship may
        be of a matrix, network type, or hierarchical, parent / child type.
        Non-hierarchical relationships may be limited to a specific duration (timespan).
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:typedEntity">
        <xsd:attribute name="from" type="xsd:IDREF" use="required" />
        <xsd:attribute name="to" type="xsd:IDREF" use="required" />
        <xsd:attribute name="hierarchical" type="xsd:boolean" use="optional" default="true" />
        <xsd:attributeGroup ref="de:timespan" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="orgRelationship" type="de:orgRelationship" />

  <xsd:complexType name="orgUnit">
    <xsd:annotation>
      <xsd:documentation>
        Defines an organizational unit within an organization. organizational units may be entire
        departments; such as accounts department or call centre, that are likely to be
        long-lived.
        Or they may be project teams, that are created only for the duration of a project.
        orgUnits may contain sub orgUnit elements, and so be structured in a hierarchical fashion.
        orgUnits also define the positions to which human resources can be assigned; and the
        privileges those positions will inherit.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:typedEntity">
        <xsd:choice minOccurs="0" maxOccurs="unbounded">
          <xsd:element ref="de:position" minOccurs="0" maxOccurs="unbounded" />
          <xsd:element ref="de:orgPrivilege" minOccurs="0" maxOccurs="unbounded" />
          <xsd:element ref="de:systemAction" minOccurs="0" maxOccurs="unbounded" />
          <xsd:element name="calendar" type="de:calendar-ref" minOccurs="0" maxOccurs="1"/>
        </xsd:choice>
        <xsd:attribute name="locationId" type="xsd:IDREF" use="optional" />
        <xsd:attribute name="featureId" type="xsd:IDREF" use="optional" />
        <xsd:attributeGroup ref="de:selectionMode"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="orgUnit" type="de:orgUnit" />

  <xsd:complexType name="organization">
    <xsd:annotation>
      <xsd:documentation>
        Defines an organization as a legal entity in which organizational units reside.
        A meta-model can define several types of organization, and references between
        the organizational units can span organizations.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="de:typedEntity">
        <xsd:sequence>
          <xsd:element ref="de:orgUnit" minOccurs="0" maxOccurs="unbounded" />
          <xsd:element ref="de:orgRelationship" minOccurs="0" maxOccurs="unbounded" />
          <xsd:element ref="de:systemAction" minOccurs="0" maxOccurs="unbounded" />
          <xsd:element name="calendar" type="de:calendar-ref" minOccurs="0" maxOccurs="1"/>
        </xsd:sequence>
        <xsd:attribute name="locationId" type="xsd:IDREF" />
        <xsd:attributeGroup ref="de:selectionMode"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="organization" type="de:organization" />

  <xsd:complexType name="qualifiedCapability">
    <xsd:annotation>
      <xsd:documentation>
        An super-type of groupCapability, reqCapability and resourceCapability. This is
        used to create a qualified, association between groups, positions and resources
        with capabilities.
        The term "qualified" simply means that the association may carry a value that
        distinguishes two associations with the same entities. For example, the capability
        to speak a language may be qualified with the name of that language.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence minOccurs="0" maxOccurs="unbounded" >
      <xsd:element name="qualifier">
        <xsd:annotation>
          <xsd:documentation>
            An optional collection of qualifying values. This overrides any qualifier attribute
            set on the parent element, allowing more than one value to be set. Multiple values
            will only be used for qualifiers of type "enumset".
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:attribute name="value" type="xsd:string" use="required" />
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="capabilityId" type="xsd:IDREF" use="required" />
    <xsd:attribute name="qualifier" type="xsd:string" use="optional" />
  </xsd:complexType>

  <xsd:element name="groupCapability" type="de:qualifiedCapability" />
  <xsd:element name="reqCapability" type="de:qualifiedCapability" />
  <xsd:element name="resourceCapability" type="de:qualifiedCapability" />

  <xsd:complexType name="qualifiedPrivilege">
    <xsd:annotation>
      <xsd:documentation>
        A super-type of posPrivilege, orgPrivilege and groupPrivilege. This is used to
        create a qualified, association between org units, org positions and groups with
        privileges.
        The term "qualified" simply means that the association may carry a value that
        distinguishes two associations with the same entities. For example, the privilege
        to approve purchase orders may be qualified with the max value to which those
        purchase orders are made.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence minOccurs="0" maxOccurs="unbounded" >
      <xsd:element name="qualifier">
        <xsd:annotation>
          <xsd:documentation>
            An optional collection of qualifying values. This overrides any qualifier attribute
            set on the parent element, allowing more than one value to be set. Multiple values
            will only be used for qualifiers of type "enumset".
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:attribute name="value" type="xsd:string" use="required"/>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="privilegeId" type="xsd:IDREF" use="required" />
    <xsd:attribute name="qualifier" type="xsd:string" use="optional" />
  </xsd:complexType>

  <xsd:element name="posPrivilege" type="de:qualifiedPrivilege" />
  <xsd:element name="orgPrivilege" type="de:qualifiedPrivilege" />
  <xsd:element name="groupPrivilege" type="de:qualifiedPrivilege" />

  <xsd:complexType name="systemAction">
    <xsd:annotation>
      <xsd:documentation>
        Identifies the Privileges required to perform the named system action.

        System Actions are grouped by the component to which the action is directed.
        For example, the action of re-allocating a work-item would be directed at
        the BRM component. With the component grouping, each action must have a
        unique name.

        The collection of qualified Privilege associations define the Privileges
        a user must hold, or their equivalent, in order for the System Action to
        be authorised.

        Elements of this type may be nested within elements of type group, organization
        orgUnit and position. The nesting element defines the scope to which the
        system action applies. For example; a position named "Manager" may have a
        system action named "Cancel Work-Item". A person in that position would be
        have that system action available but, they could only perform that action
        if they had the required privileges.

        A "global" set of system actions can be configured by placing them directly
        within the root element "directory".
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="reqPrivilege" type="de:qualifiedPrivilege" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
    <xsd:attribute name="component" type="xsd:string" use="optional" />
    <xsd:attribute name="name" type="xsd:string" use="required" />
  </xsd:complexType>

  <xsd:element name="systemAction" type="de:systemAction" />

  <xsd:complexType name="resourceGroup">
    <xsd:annotation>
      <xsd:documentation>
        A sub-element of resource, this element records the assignment of a resource to a group.
        The assignment may be limited to a specific duration (timespan).
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="groupId" type="xsd:IDREF" use="required" />
    <xsd:attributeGroup ref="de:timespan" />
  </xsd:complexType>

  <xsd:element name="resourceGroup" type="de:resourceGroup" />

  <xsd:complexType name="positionHeld">
    <xsd:annotation>
      <xsd:documentation>
        A sub-element of resource (only for human resources), this element records the assignment
        of a human resource to an organizational position. The assignment may be limited to a
        specific duration (timespan).
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="positionId" type="xsd:IDREF" use="required" />
    <xsd:attributeGroup ref="de:timespan" />
  </xsd:complexType>

  <xsd:element name="positionHeld" type="de:positionHeld" />

  <xsd:simpleType name="resourceType">
    <xsd:annotation>
      <xsd:documentation>
        Identifies a particular type of Resource.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="durable" />
      <xsd:enumeration value="consumable" />
      <xsd:enumeration value="human" />
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:complexType name="resource">
    <xsd:annotation>
      <xsd:documentation>
        Defines a resource (human, durable or consumable) and the associations it may have with
        groups, positions and capabilities.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs="unbounded">
      <xsd:element ref="de:resourceCapability" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="de:positionHeld" minOccurs="0" maxOccurs="unbounded" />
      <xsd:element ref="de:resourceGroup" minOccurs="0" maxOccurs="unbounded" />
    </xsd:choice>
    <xsd:attribute name="id" type="xsd:ID" use="required" />
    <xsd:attribute name="name" type="xsd:string" use="required" />
    <xsd:attribute name="label" type="xsd:string" use="optional" />
    <xsd:attributeGroup ref="de:timespan" />
    <xsd:attribute name="locationId" type="xsd:IDREF" use="optional" />
    <xsd:attribute name="resourceType" type="de:resourceType" use="optional" default="human" />
    <xsd:attribute name="ldapalias" type="xsd:string" use="required"/>
    <xsd:attribute name="ldapdn" type="xsd:string" use="required"/>
  </xsd:complexType>

  <xsd:element name="resource" type="de:resource" />

  <xsd:element name="resourceAttribute" type="demeta:parameterDescriptor">
    <xsd:annotation>
      <xsd:documentation>
        Defines an attribute that can be assigned to resources. These attributes will
        take their values from hard-coded entries held in the Directory Engine, or
        attributes of the LDAP entry to which the resource is linked.
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="directory">
    <xsd:annotation>
      <xsd:documentation>
        The root node of the organizational model document. Nested within this is an
        optional meta-model.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence minOccurs="0">
        <xsd:choice minOccurs="0" maxOccurs="unbounded">
          <xsd:element ref="demeta:metaModel" minOccurs="0" maxOccurs="unbounded" />
          <xsd:element ref="de:capability" minOccurs="0" maxOccurs="unbounded" />
          <xsd:element ref="de:privilege" minOccurs="0" maxOccurs="unbounded" />
          <xsd:element ref="de:location" minOccurs="0" maxOccurs="unbounded" />
          <xsd:element ref="de:group" minOccurs="0" maxOccurs="unbounded" />
          <xsd:element ref="de:organization" minOccurs="0" maxOccurs="unbounded" />
          <xsd:element ref="de:resourceAttribute" minOccurs="0" maxOccurs="unbounded" />
          <xsd:element ref="de:systemAction" minOccurs="0" maxOccurs="unbounded" />
        </xsd:choice>
        <xsd:element ref="de:resource" minOccurs="0" maxOccurs="unbounded" />
      </xsd:sequence>
      <xsd:attribute name="name" type="xsd:string" use="required" />
      <xsd:attribute name="version" type="xsd:string" use="optional" />
    </xsd:complexType>
  </xsd:element>
</xsd:schema>
