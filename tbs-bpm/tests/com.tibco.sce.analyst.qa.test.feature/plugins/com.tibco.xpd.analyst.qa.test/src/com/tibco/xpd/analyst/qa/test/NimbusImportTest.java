/**
 * Copyright (c) TIBCO Software Inc 2004-2009. All rights reserved.
 */
package com.tibco.xpd.analyst.qa.test;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IFolder;
import org.eclipse.core.resources.IProject;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.resources.IResourceVisitor;
import org.eclipse.core.resources.ResourcesPlugin;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.jface.viewers.StructuredSelection;
import org.eclipse.jface.wizard.WizardDialog;
import org.eclipse.ui.IWorkbenchWizard;
import org.eclipse.ui.PlatformUI;
import org.xml.sax.InputSource;

import com.tibco.xpd.analyst.qa.test.nimbus.NimbusImportXpdlDiff;
import com.tibco.xpd.core.test.util.AbstractBaseResourceTest;
import com.tibco.xpd.core.test.util.TestResourceInfo;
import com.tibco.xpd.nimbus.importprocessmap.ImportNimbusProcessMapWizard;
import com.tibco.xpd.ui.importexport.importwizard.pages.FilteredFSElement;

/**
 * NimbusImportTest
 * <p>
 * NimbusImportTest - Base test with Business Studio resources class.
 * </p>
 * <p>
 * Generated by: createBaseTest.javajet
 * </p>
 * 
 * @author
 * @since
 */
public class NimbusImportTest extends AbstractBaseResourceTest {

    /**
     * NimbusImportTest
     * 
     * @throws Exception
     */
    public void testNimbusImportTest() throws Exception {
        // Check all files created correctly.
        checkTestFilesCreated();

        importNimbusDiagrams();

        StringBuffer errorResults = compareGoldAndTest();

        if (errorResults.length() > 0) {
            fail(errorResults.toString());
        }

        return;
    }

    /**
     * Import all the files in the Ni,mbusTestDigrams folder.
     */
    private void importNimbusDiagrams() {
        try {
            IFolder processPackagesFolder = getProcessPackagesFolder();

            /* Create nimbus import Wizard */
            ImportNimbusProcessMapWizard importWizard =
                    new ImportNimbusProcessMapWizard();

            ((IWorkbenchWizard) importWizard).init(PlatformUI.getWorkbench(),
                    new StructuredSelection(processPackagesFolder));

            /* Set target folder. */
            importWizard.setTestDestinationContainer(processPackagesFolder);

            /* Set source files. */
            importWizard.setTestSelectedResources(getNimbusImportResources());

            /* Create the wizard (without showing it and run the performFinish. */
            WizardDialog wizard =
                    new WizardDialog(PlatformUI.getWorkbench()
                            .getActiveWorkbenchWindow().getShell(),
                            importWizard);

            wizard.create();

            /* Perform import. */
            importWizard.performFinish();

        } catch (Exception e) {
            fail(e.getMessage());
        }
        return;
    }

    /**
     * @return empty string buffer on success else it will contain the failure
     *         state of failed comparisons.
     * @throws IOException
     */
    private StringBuffer compareGoldAndTest() throws IOException {

        StringBuffer errorResults = new StringBuffer();

        IFolder processPackagesFolder = getProcessPackagesFolder();
        IFolder goldFilesFolder = getGoldFilesFolder();

        try {
            for (IFile nimbusDiagramFile : getNimbusImportFiles()) {

                /*
                 * For each nimbus import file there should be a gold xpdl file
                 * and an newly imported and transformed xpdl file.
                 */
                String xpdlName =
                        nimbusDiagramFile.getName().substring(0,
                                nimbusDiagramFile.getName().length()
                                        - nimbusDiagramFile.getFileExtension()
                                                .length())
                                + "xpdl"; //$NON-NLS-1$

                IFile goldFile = goldFilesFolder.getFile(xpdlName);
                if (!goldFile.exists()) {
                    errorResults
                            .append(String
                                    .format("Gold file '%s' is missing for Nimbus diagram file '%s'.", //$NON-NLS-1$
                                            goldFile.getFullPath(),
                                            nimbusDiagramFile.getFullPath()));
                    errorResults
                            .append("-------------------------------------------------------------------\n\n"); //$NON-NLS-1$
                    continue;
                }

                IFile testFile = processPackagesFolder.getFile(xpdlName);
                if (!goldFile.exists()) {
                    errorResults
                            .append(String
                                    .format("Test file '%s' is missing for Nimbus diagram file '%s'.", //$NON-NLS-1$
                                            testFile.getFullPath(),
                                            nimbusDiagramFile.getFullPath()));
                    errorResults
                            .append("-------------------------------------------------------------------\n\n"); //$NON-NLS-1$
                    continue;
                }

                InputStream goldStream = null;
                InputStream testStream = null;

                try {

                    goldStream = goldFile.getContents();
                    InputSource goldSource = new InputSource(goldStream);

                    testStream = testFile.getContents();
                    InputSource testSource = new InputSource(testStream);

                    NimbusImportXpdlDiff xpdlDiff =
                            new NimbusImportXpdlDiff(goldSource, testSource);

                    if (!xpdlDiff.similar()) {
                        errorResults
                                .append(String
                                        .format("Gold and Test file '%s' do not match: ", //$NON-NLS-1$
                                                goldFile.getName()));
                        xpdlDiff.appendMessage(errorResults);
                        errorResults
                                .append("-------------------------------------------------------------------\n\n"); //$NON-NLS-1$

                    }

                } catch (Exception e) {
                    fail(e.getMessage());
                } finally {
                    if (goldStream != null) {
                        goldStream.close();
                    }
                    if (testStream != null) {
                        testStream.close();
                    }
                }

            }
        } catch (CoreException e) {
            fail(e.getMessage());
        }

        return errorResults;
    }

    /**
     * @return target process packages folder.
     */
    private IFolder getProcessPackagesFolder() {
        IProject project = getTestResources()[0].getProject();
        IFolder processPackagesFolder = project.getFolder("Process Packages"); //$NON-NLS-1$
        return processPackagesFolder;
    }

    private IFolder getGoldFilesFolder() {
        IProject project = getTestResources()[0].getProject();
        IFolder processPackagesFolder = project.getFolder("Gold"); //$NON-NLS-1$
        return processPackagesFolder;
    }

    /**
     * @param nimbusFolder
     * @return
     * @throws CoreException
     */
    private List<FilteredFSElement> getNimbusImportResources()
            throws CoreException {
        List<FilteredFSElement> importResources =
                new ArrayList<FilteredFSElement>();

        for (IFile nimbusDiagramFile : getNimbusImportFiles()) {
            FilteredFSElement fse =
                    new FilteredFSElement(nimbusDiagramFile.getName(), null,
                            true);
            fse.setFileSystemObject(new File(nimbusDiagramFile.getLocation()
                    .toOSString()));
            importResources.add(fse);
        }
        return importResources;
    }

    /**
     * @param nimbusFolder
     * @return
     * @throws CoreException
     */
    private List<IFile> getNimbusImportFiles() throws CoreException {
        final List<IFile> nimbusDiagramFiles = new ArrayList<IFile>();

        IProject project =
                ResourcesPlugin.getWorkspace().getRoot()
                        .getProject("NimbusImportTest"); //$NON-NLS-1$
        IFolder nimbusFolder = project.getFolder("NimbusTestDiagrams"); //$NON-NLS-1$

        nimbusFolder.accept(new IResourceVisitor() {

            @Override
            public boolean visit(IResource resource) throws CoreException {
                if (resource instanceof IFile
                        && "xml".equals(resource.getFileExtension())) { //$NON-NLS-1$
                    nimbusDiagramFiles.add((IFile) resource);
                }
                return true;
            }
        });
        return nimbusDiagramFiles;
    }

    @Override
    protected String getTestName() {
        return "NimbusImportTest"; //$NON-NLS-1$
    }

    @Override
    protected String getTestPlugInId() {
        return "com.tibco.xpd.analyst.qa.test"; //$NON-NLS-1$
    }

    @Override
    protected TestResourceInfo[] getTestResources() {
        TestResourceInfo[] testResources =
                new TestResourceInfo[] {
                        new TestResourceInfo(
                                "resources/NimbusImportTest", "NimbusImportTest/Process Packages{processes}/Dummy.xpdl"), //$NON-NLS-1$ //$NON-NLS-2$

                        new TestResourceInfo(
                                "resources/NimbusImportTest", "NimbusImportTest/Gold/FirstProc_2012-10-26.xpdl"), //$NON-NLS-1$ //$NON-NLS-2$
                        new TestResourceInfo(
                                "resources/NimbusImportTest", "NimbusImportTest/Gold/HR_2012-11-08.xpdl"), //$NON-NLS-1$ //$NON-NLS-2$
                        new TestResourceInfo(
                                "resources/NimbusImportTest", "NimbusImportTest/Gold/MainProcWithSeparateSubProcs.xpdl"), //$NON-NLS-1$ //$NON-NLS-2$
                        new TestResourceInfo(
                                "resources/NimbusImportTest", "NimbusImportTest/Gold/Model Company_2012-11-09.xpdl"), //$NON-NLS-1$ //$NON-NLS-2$
                        new TestResourceInfo(
                                "resources/NimbusImportTest", "NimbusImportTest/Gold/Parent Process Diagram_2012-11-08.xpdl"), //$NON-NLS-1$ //$NON-NLS-2$
                        new TestResourceInfo(
                                "resources/NimbusImportTest", "NimbusImportTest/Gold/Sub Process Diagram_2012-11-08.xpdl"), //$NON-NLS-1$ //$NON-NLS-2$
                        new TestResourceInfo(
                                "resources/NimbusImportTest", "NimbusImportTest/Gold/SubProc-1-2-1-2-1.xpdl"), //$NON-NLS-1$ //$NON-NLS-2$
                        new TestResourceInfo(
                                "resources/NimbusImportTest", "NimbusImportTest/Gold/SubProc-1-2-1-2-2.xpdl"), //$NON-NLS-1$ //$NON-NLS-2$
                        new TestResourceInfo(
                                "resources/NimbusImportTest", "NimbusImportTest/Gold/SubProc-1-2-1-2-5.xpdl"), //$NON-NLS-1$ //$NON-NLS-2$

                        new TestResourceInfo(
                                "resources/NimbusImportTest", "NimbusImportTest/NimbusTestDiagrams/FirstProc_2012-10-26.xml"), //$NON-NLS-1$ //$NON-NLS-2$
                        new TestResourceInfo(
                                "resources/NimbusImportTest", "NimbusImportTest/NimbusTestDiagrams/HR_2012-11-08.xml"), //$NON-NLS-1$ //$NON-NLS-2$
                        new TestResourceInfo(
                                "resources/NimbusImportTest", "NimbusImportTest/NimbusTestDiagrams/MainProcWithSeparateSubProcs.xml"), //$NON-NLS-1$ //$NON-NLS-2$
                        new TestResourceInfo(
                                "resources/NimbusImportTest", "NimbusImportTest/NimbusTestDiagrams/Model Company_2012-11-09.xml"), //$NON-NLS-1$ //$NON-NLS-2$
                        new TestResourceInfo(
                                "resources/NimbusImportTest", "NimbusImportTest/NimbusTestDiagrams/Parent Process Diagram_2012-11-08.xml"), //$NON-NLS-1$ //$NON-NLS-2$
                        new TestResourceInfo(
                                "resources/NimbusImportTest", "NimbusImportTest/NimbusTestDiagrams/Sub Process Diagram_2012-11-08.xml"), //$NON-NLS-1$ //$NON-NLS-2$
                        new TestResourceInfo(
                                "resources/NimbusImportTest", "NimbusImportTest/NimbusTestDiagrams/SubProc-1-2-1-2-1.xml"), //$NON-NLS-1$ //$NON-NLS-2$
                        new TestResourceInfo(
                                "resources/NimbusImportTest", "NimbusImportTest/NimbusTestDiagrams/SubProc-1-2-1-2-2.xml"), //$NON-NLS-1$ //$NON-NLS-2$
                        new TestResourceInfo(
                                "resources/NimbusImportTest", "NimbusImportTest/NimbusTestDiagrams/SubProc-1-2-1-2-5.xml"), //$NON-NLS-1$ //$NON-NLS-2$

                };

        return testResources;
    }

}
