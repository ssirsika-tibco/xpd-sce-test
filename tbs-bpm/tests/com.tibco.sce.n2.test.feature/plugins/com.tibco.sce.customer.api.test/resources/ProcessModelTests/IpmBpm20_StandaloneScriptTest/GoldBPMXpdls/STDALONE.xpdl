<?xml version="1.0" encoding="UTF-8"?>
<xpdl2:Package xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:database="http://www.tibco.com/XPD/database1.0.0" xmlns:eaijava="http://www.tibco.com/XPD/EAIJava1.0.0" xmlns:email="http://www.tibco.com/XPD/email1.0.0" xmlns:iProcessExt="http://www.tibco.com/XPD/iProcessExt1.0.0" xmlns:orchestrator="http://www.tibco.com/XPD/orchestrator1.0.0" xmlns:order="http://www.tibco.com/XPD/order1.0.0" xmlns:simulation="http://www.tibco.com/xpd/Simulation1.0.1" xmlns:xpdExt="http://www.tibco.com/XPD/xpdExtension1.0.0" xmlns:xpdl2="http://www.wfmc.org/2008/XPDL2.1" xsi:schemaLocation="http://www.wfmc.org/2008/XPDL2.1 http://www.wfmc.org/standards/bpmnxpdl_31.xsd" Id="_6vhKYAvuEeS1yPQQHR22DQ" xpdExt:DisplayName="STDALONE" Name="STDALONE">
  <xpdl2:PackageHeader>
    <xpdl2:XPDLVersion>2.1</xpdl2:XPDLVersion>
    <xpdl2:Vendor>TIBCO</xpdl2:Vendor>
    <xpdl2:Created>2177-10-07</xpdl2:Created>
  </xpdl2:PackageHeader>
  <xpdl2:RedefinableHeader>
    <xpdl2:Author>sajain</xpdl2:Author>
    <xpdl2:Version>1.0.0.qualifier</xpdl2:Version>
  </xpdl2:RedefinableHeader>
  <xpdl2:Participants>
    <xpdl2:Participant Id="N65944" xpdExt:DisplayName="Administrator" Name="Administrator">
      <xpdl2:ParticipantType Type="RESOURCE_SET">
        <xpdExt:ParticipantQuery ScriptGrammar="RQL">resource(name = &quot;Administrator&quot;)</xpdExt:ParticipantQuery>
      </xpdl2:ParticipantType>
    </xpdl2:Participant>
    <xpdl2:Participant Id="N65955" xpdExt:DisplayName="Piére" Name="Piére">
      <xpdl2:ParticipantType Type="RESOURCE_SET">
        <xpdExt:ParticipantQuery ScriptGrammar="RQL">resource(name = &quot;Piére&quot;)</xpdExt:ParticipantQuery>
      </xpdl2:ParticipantType>
    </xpdl2:Participant>
    <xpdl2:Participant Id="N65966" xpdExt:DisplayName="Sid" Name="Sid">
      <xpdl2:ParticipantType Type="RESOURCE_SET">
        <xpdExt:ParticipantQuery ScriptGrammar="RQL">resource(name = &quot;Sid&quot;)</xpdExt:ParticipantQuery>
      </xpdl2:ParticipantType>
    </xpdl2:Participant>
  </xpdl2:Participants>
  <xpdl2:Pools>
    <xpdl2:Pool Id="N66594" xpdExt:DisplayName="Default Pool" Name="DefaultPool" BoundaryVisible="true" Process="_6wXe8wvuEeS1yPQQHR22DQ">
      <xpdl2:Lanes>
        <xpdl2:Lane Id="N66606" xpdExt:DisplayName="Default Lane" Name="DefaultLane">
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo Height="419.0"/>
          </xpdl2:NodeGraphicsInfos>
        </xpdl2:Lane>
      </xpdl2:Lanes>
    </xpdl2:Pool>
  </xpdl2:Pools>
  <xpdl2:Artifacts>
    <xpdl2:Artifact Id="N66612" ArtifactType="Annotation" TextAnnotation="Stand Alone Script Object, called from an EAI Script&#xA;&#xA;Stand Alone Script Object, called from another standalone &#xA;Script, called from an EAI Script. EAIScript->SAScript1-&#xA;>SAScript2.&#xA;">
      <xpdl2:NodeGraphicsInfos>
        <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" LaneId="N66606">
          <xpdl2:Coordinates XCoordinate="1824.0" YCoordinate="311.0"/>
        </xpdl2:NodeGraphicsInfo>
      </xpdl2:NodeGraphicsInfos>
    </xpdl2:Artifact>
  </xpdl2:Artifacts>
  <xpdl2:WorkflowProcesses>
    <xpdl2:WorkflowProcess Id="_6wXe8wvuEeS1yPQQHR22DQ" xpdExt:FlowRoutingStyle="MultiEntryExit" xpdExt:DisplayName="STDALONE" Name="STDALONE" AccessLevel="PUBLIC">
      <xpdl2:ProcessHeader>
        <xpdl2:Created></xpdl2:Created>
        <xpdl2:Description></xpdl2:Description>
      </xpdl2:ProcessHeader>
      <xpdl2:DataFields>
        <xpdl2:DataField Id="N65588" xpdExt:DisplayName="ARR" Name="ARR" IsArray="true">
          <xpdl2:DataType>
            <xpdl2:BasicType Type="FLOAT">
              <xpdl2:Precision>9</xpdl2:Precision>
              <xpdl2:Scale>2</xpdl2:Scale>
            </xpdl2:BasicType>
          </xpdl2:DataType>
        </xpdl2:DataField>
        <xpdl2:DataField Id="N65916" xpdExt:DisplayName="TXT" Name="TXT" IsArray="false">
          <xpdl2:DataType>
            <xpdl2:BasicType Type="STRING">
              <xpdl2:Length>20</xpdl2:Length>
            </xpdl2:BasicType>
          </xpdl2:DataType>
        </xpdl2:DataField>
      </xpdl2:DataFields>
      <xpdl2:Activities>
        <xpdl2:Activity Id="N66018" Name="UT" FinishMode="Manual" StartMode="Manual" xpdExt:DisplayName="UT">
          <xpdl2:Implementation>
            <xpdl2:Task>
              <xpdl2:TaskUser Implementation="Unspecified">
                <xpdl2:Performers>
                  <xpdl2:Performer>-defined-in-Activity-Performer-</xpdl2:Performer>
                </xpdl2:Performers>
                <xpdl2:MessageIn Id="msgIn_N66018"/>
                <xpdl2:MessageOut Id="msgOut_N66018"/>
                <xpdExt:UserTaskScripts>
                  <xpdExt:OpenScript ScriptGrammar="JavaScript">  // CALL(&quot;COMMON&quot;); // 
  // ============ Invoked Script ============
   &quot;This is special characters&quot;; // 
   ScriptUtil.setArrayElement(ARR , 0 , 12); // assingn value at position arr[0]
   ScriptUtil.setArrayElement(ARR , 1 , 12); // assingn value at position arr[1]
   ScriptUtil.setArrayElement(ARR , 2 , 12); // assingn value at position arr[2]
   ScriptUtil.setArrayElement(ARR , 3 , 12); // assingn value at position arr[3]
   Process.auditLog(&quot;AuditId::&quot;+ 256); // simple cust audit
     // CALL(&quot;STAND3&quot;); // calling script named 'STAND3'
     // ============ Invoked Script ============
      ScriptUtil.setArrayElement(ARR , 12 , 12);
     // ========================================
  // ========================================</xpdExt:OpenScript>
                  <xpdExt:SubmitScript ScriptGrammar="JavaScript">  // CALL(&quot;COMMON&quot;); // 
  // ============ Invoked Script ============
   &quot;This is special characters&quot;; // 
   ScriptUtil.setArrayElement(ARR , 0 , 12); // assingn value at position arr[0]
   ScriptUtil.setArrayElement(ARR , 1 , 12); // assingn value at position arr[1]
   ScriptUtil.setArrayElement(ARR , 2 , 12); // assingn value at position arr[2]
   ScriptUtil.setArrayElement(ARR , 3 , 12); // assingn value at position arr[3]
   Process.auditLog(&quot;AuditId::&quot;+ 256); // simple cust audit
     // CALL(&quot;STAND3&quot;); // calling script named 'STAND3'
     // ============ Invoked Script ============
      ScriptUtil.setArrayElement(ARR , 12 , 12);
     // ========================================
  // ========================================</xpdExt:SubmitScript>
                </xpdExt:UserTaskScripts>
              </xpdl2:TaskUser>
            </xpdl2:Task>
          </xpdl2:Implementation>
          <xpdl2:Performers>
            <xpdl2:Performer>N65944</xpdl2:Performer>
          </xpdl2:Performers>
          <xpdl2:ExtendedAttributes>
            <xpdl2:ExtendedAttribute Name="iProcessStepNum" Value="3"/>
          </xpdl2:ExtendedAttributes>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="64.0" LaneId="N66606" Width="96.0">
              <xpdl2:Coordinates XCoordinate="720.0" YCoordinate="160.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
          <xpdExt:ActivityResourcePatterns>
            <xpdExt:AllocationStrategy xpdExt:Offer="AllocateOne" xpdExt:Strategy="SYSTEM_DETERMINED"/>
          </xpdExt:ActivityResourcePatterns>
        </xpdl2:Activity>
        <xpdl2:Activity Id="N66103" Name="UT2" FinishMode="Manual" StartMode="Manual" xpdExt:DisplayName="UT2">
          <xpdl2:Implementation>
            <xpdl2:Task>
              <xpdl2:TaskUser Implementation="Unspecified">
                <xpdl2:Performers>
                  <xpdl2:Performer>-defined-in-Activity-Performer-</xpdl2:Performer>
                </xpdl2:Performers>
                <xpdl2:MessageIn Id="msgIn_N66103"/>
                <xpdl2:MessageOut Id="msgOut_N66103"/>
                <xpdExt:UserTaskScripts>
                  <xpdExt:OpenScript ScriptGrammar="JavaScript">SCRIPT(&quot;COMMON2&quot;, 1, 2, 3); // calling script named 'COMMON2'
  // SCRIPT call with parameters must be converted manually...
  // ============ Invoked Script ============
  // &quot;This is special characters&quot;; // 
  // ScriptUtil.setArrayElement(ARR , 0 , 12); // assingn value at position arr[0]
  // ScriptUtil.setArrayElement(ARR , 1 , 12); // assingn value at position arr[1]
  // ScriptUtil.setArrayElement(ARR , 2 , 12); // assingn value at position arr[2]
  // ScriptUtil.setArrayElement(ARR , 3 , 12); // assingn value at position arr[3]
  // Process.auditLog(&quot;AuditId::&quot;+ 256); // simple cust audit
  // SCRIPT(&quot;STAND3&quot;, 1, 2, 3); // calling script named 'STAND3'
  //   // SCRIPT call with parameters must be converted manually...
  //   // ============ Invoked Script ============
  //   // ScriptUtil.setArrayElement(ARR , 12 , 12);
  //   // ========================================
  // ========================================</xpdExt:OpenScript>
                  <xpdExt:SubmitScript ScriptGrammar="JavaScript">SCRIPT(&quot;COMMON2&quot;, 1, 2, 3); // calling script named 'COMMON2'
  // SCRIPT call with parameters must be converted manually...
  // ============ Invoked Script ============
  // &quot;This is special characters&quot;; // 
  // ScriptUtil.setArrayElement(ARR , 0 , 12); // assingn value at position arr[0]
  // ScriptUtil.setArrayElement(ARR , 1 , 12); // assingn value at position arr[1]
  // ScriptUtil.setArrayElement(ARR , 2 , 12); // assingn value at position arr[2]
  // ScriptUtil.setArrayElement(ARR , 3 , 12); // assingn value at position arr[3]
  // Process.auditLog(&quot;AuditId::&quot;+ 256); // simple cust audit
  // SCRIPT(&quot;STAND3&quot;, 1, 2, 3); // calling script named 'STAND3'
  //   // SCRIPT call with parameters must be converted manually...
  //   // ============ Invoked Script ============
  //   // ScriptUtil.setArrayElement(ARR , 12 , 12);
  //   // ========================================
  // ========================================</xpdExt:SubmitScript>
                </xpdExt:UserTaskScripts>
              </xpdl2:TaskUser>
            </xpdl2:Task>
          </xpdl2:Implementation>
          <xpdl2:Performers>
            <xpdl2:Performer>N65955</xpdl2:Performer>
          </xpdl2:Performers>
          <xpdl2:ExtendedAttributes>
            <xpdl2:ExtendedAttribute Name="iProcessStepNum" Value="10"/>
          </xpdl2:ExtendedAttributes>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="64.0" LaneId="N66606" Width="96.0">
              <xpdl2:Coordinates XCoordinate="635.0" YCoordinate="270.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
          <xpdExt:ActivityResourcePatterns>
            <xpdExt:AllocationStrategy xpdExt:Offer="AllocateOne" xpdExt:Strategy="SYSTEM_DETERMINED"/>
          </xpdExt:ActivityResourcePatterns>
        </xpdl2:Activity>
        <xpdl2:Activity Id="N66188" Name="SCRIPT" xpdExt:DisplayName="SCRIPT">
          <xpdl2:Implementation>
            <xpdl2:Task>
              <xpdl2:TaskScript>
                <xpdl2:Script ScriptGrammar="JavaScript">// Calling Standalone Script 'STAND' using CALL method
  // TXT = call(&quot;STAND&quot;);
  // ============ Invoked Script ============
   ScriptUtil.setArrayElement(ARR , 10 , 20 + 10); // 
     // call(&quot;STAND2&quot;); // 
     // ============ Invoked Script ============
      ScriptUtil.setArrayElement(ARR , 0 , 12); // 
        // CALL(&quot;Stand3&quot;); // 
        // ============ Invoked Script ============
         ScriptUtil.setArrayElement(ARR , 12 , 12);
        // ========================================
     // ========================================
   ScriptUtil.setArrayElement(ARR , 10 , 20 + 10); // 
     // call(&quot;STAND2&quot;); // 
     // ============ Invoked Script ============
      ScriptUtil.setArrayElement(ARR , 0 , 12); // 
        // CALL(&quot;Stand3&quot;); // 
        // ============ Invoked Script ============
         ScriptUtil.setArrayElement(ARR , 12 , 12);
        // ========================================
     // ========================================
  // ========================================
// now calling Standalone Script 'Stand' using SCRIPT method
TXT = SCRIPT(&quot;STAND&quot;, 1, 2, 3); // 
  // SCRIPT call with parameters must be converted manually...
  // ============ Invoked Script ============
  // ScriptUtil.setArrayElement(ARR , 10 , 20 + 10); // 
  //   // call(&quot;STAND2&quot;); // 
  //   // ============ Invoked Script ============
  //    ScriptUtil.setArrayElement(ARR , 0 , 12); // 
  //      // CALL(&quot;Stand3&quot;); // 
  //      // ============ Invoked Script ============
  //       ScriptUtil.setArrayElement(ARR , 12 , 12);
  //      // ========================================
  //   // ========================================
  // ScriptUtil.setArrayElement(ARR , 10 , 20 + 10); // 
  //   // call(&quot;STAND2&quot;); // 
  //   // ============ Invoked Script ============
  //    ScriptUtil.setArrayElement(ARR , 0 , 12); // 
  //      // CALL(&quot;Stand3&quot;); // 
  //      // ============ Invoked Script ============
  //       ScriptUtil.setArrayElement(ARR , 12 , 12);
  //      // ========================================
  //   // ========================================
  // ========================================</xpdl2:Script>
              </xpdl2:TaskScript>
            </xpdl2:Task>
          </xpdl2:Implementation>
          <xpdl2:ExtendedAttributes>
            <xpdl2:ExtendedAttribute Name="iProcessStepNum" Value="5"/>
          </xpdl2:ExtendedAttributes>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="64.0" LaneId="N66606" Width="96.0">
              <xpdl2:Coordinates XCoordinate="854.0" YCoordinate="289.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
          <xpdExt:ActivityResourcePatterns>
            <xpdExt:AllocationStrategy xpdExt:Strategy="SYSTEM_DETERMINED"/>
          </xpdExt:ActivityResourcePatterns>
        </xpdl2:Activity>
        <xpdl2:Activity Id="N66271" Name="UT3" FinishMode="Manual" StartMode="Manual" xpdExt:DisplayName="UT3">
          <xpdl2:Implementation>
            <xpdl2:Task>
              <xpdl2:TaskUser Implementation="Unspecified">
                <xpdl2:Performers>
                  <xpdl2:Performer>-defined-in-Activity-Performer-</xpdl2:Performer>
                </xpdl2:Performers>
                <xpdl2:MessageIn Id="msgIn_N66271"/>
                <xpdl2:MessageOut Id="msgOut_N66271"/>
                <xpdExt:UserTaskScripts>
                  <xpdExt:OpenScript ScriptGrammar="JavaScript">  // CALL(&quot;WHOLE&quot;); // 
  // ============ Invoked Script ============
     // Call(&quot;STAND&quot;); // Calling StandAlone Script 'Stand'
     // ============ Invoked Script ============
      ScriptUtil.setArrayElement(ARR , 10 , 20 + 10); // 
        // call(&quot;STAND2&quot;); // 
        // ============ Invoked Script ============
         ScriptUtil.setArrayElement(ARR , 0 , 12); // 
           // CALL(&quot;Stand3&quot;); // 
           // ============ Invoked Script ============
            ScriptUtil.setArrayElement(ARR , 12 , 12);
           // ========================================
        // ========================================
      ScriptUtil.setArrayElement(ARR , 10 , 20 + 10); // 
        // call(&quot;STAND2&quot;); // 
        // ============ Invoked Script ============
         ScriptUtil.setArrayElement(ARR , 0 , 12); // 
           // CALL(&quot;Stand3&quot;); // 
           // ============ Invoked Script ============
            ScriptUtil.setArrayElement(ARR , 12 , 12);
           // ========================================
        // ========================================
     // ========================================
     // Call(&quot;COMMON&quot;); // Calling StandAlone Script 'COMMON'
     // ============ Invoked Script ============
      &quot;This is special characters&quot;; // 
      ScriptUtil.setArrayElement(ARR , 0 , 12); // assingn value at position arr[0]
      ScriptUtil.setArrayElement(ARR , 1 , 12); // assingn value at position arr[1]
      ScriptUtil.setArrayElement(ARR , 2 , 12); // assingn value at position arr[2]
      ScriptUtil.setArrayElement(ARR , 3 , 12); // assingn value at position arr[3]
      Process.auditLog(&quot;AuditId::&quot;+ 256); // simple cust audit
        // CALL(&quot;STAND3&quot;); // calling script named 'STAND3'
        // ============ Invoked Script ============
         ScriptUtil.setArrayElement(ARR , 12 , 12);
        // ========================================
     // ========================================
     // Call(&quot;COMMON2&quot;); // Calling StandAlone Script 'COMMON2'
     // ============ Invoked Script ============
      &quot;This is special characters&quot;; // 
      ScriptUtil.setArrayElement(ARR , 0 , 12); // assingn value at position arr[0]
      ScriptUtil.setArrayElement(ARR , 1 , 12); // assingn value at position arr[1]
      ScriptUtil.setArrayElement(ARR , 2 , 12); // assingn value at position arr[2]
      ScriptUtil.setArrayElement(ARR , 3 , 12); // assingn value at position arr[3]
      Process.auditLog(&quot;AuditId::&quot;+ 256); // simple cust audit
      SCRIPT(&quot;STAND3&quot;, 1, 2, 3); // calling script named 'STAND3'
        // SCRIPT call with parameters must be converted manually...
        // ============ Invoked Script ============
        // ScriptUtil.setArrayElement(ARR , 12 , 12);
        // ========================================
     // ========================================
  // ========================================</xpdExt:OpenScript>
                  <xpdExt:SubmitScript ScriptGrammar="JavaScript">  // CALL(&quot;WHOLE&quot;); // 
  // ============ Invoked Script ============
     // Call(&quot;STAND&quot;); // Calling StandAlone Script 'Stand'
     // ============ Invoked Script ============
      ScriptUtil.setArrayElement(ARR , 10 , 20 + 10); // 
        // call(&quot;STAND2&quot;); // 
        // ============ Invoked Script ============
         ScriptUtil.setArrayElement(ARR , 0 , 12); // 
           // CALL(&quot;Stand3&quot;); // 
           // ============ Invoked Script ============
            ScriptUtil.setArrayElement(ARR , 12 , 12);
           // ========================================
        // ========================================
      ScriptUtil.setArrayElement(ARR , 10 , 20 + 10); // 
        // call(&quot;STAND2&quot;); // 
        // ============ Invoked Script ============
         ScriptUtil.setArrayElement(ARR , 0 , 12); // 
           // CALL(&quot;Stand3&quot;); // 
           // ============ Invoked Script ============
            ScriptUtil.setArrayElement(ARR , 12 , 12);
           // ========================================
        // ========================================
     // ========================================
     // Call(&quot;COMMON&quot;); // Calling StandAlone Script 'COMMON'
     // ============ Invoked Script ============
      &quot;This is special characters&quot;; // 
      ScriptUtil.setArrayElement(ARR , 0 , 12); // assingn value at position arr[0]
      ScriptUtil.setArrayElement(ARR , 1 , 12); // assingn value at position arr[1]
      ScriptUtil.setArrayElement(ARR , 2 , 12); // assingn value at position arr[2]
      ScriptUtil.setArrayElement(ARR , 3 , 12); // assingn value at position arr[3]
      Process.auditLog(&quot;AuditId::&quot;+ 256); // simple cust audit
        // CALL(&quot;STAND3&quot;); // calling script named 'STAND3'
        // ============ Invoked Script ============
         ScriptUtil.setArrayElement(ARR , 12 , 12);
        // ========================================
     // ========================================
     // Call(&quot;COMMON2&quot;); // Calling StandAlone Script 'COMMON2'
     // ============ Invoked Script ============
      &quot;This is special characters&quot;; // 
      ScriptUtil.setArrayElement(ARR , 0 , 12); // assingn value at position arr[0]
      ScriptUtil.setArrayElement(ARR , 1 , 12); // assingn value at position arr[1]
      ScriptUtil.setArrayElement(ARR , 2 , 12); // assingn value at position arr[2]
      ScriptUtil.setArrayElement(ARR , 3 , 12); // assingn value at position arr[3]
      Process.auditLog(&quot;AuditId::&quot;+ 256); // simple cust audit
      SCRIPT(&quot;STAND3&quot;, 1, 2, 3); // calling script named 'STAND3'
        // SCRIPT call with parameters must be converted manually...
        // ============ Invoked Script ============
        // ScriptUtil.setArrayElement(ARR , 12 , 12);
        // ========================================
     // ========================================
  // ========================================</xpdExt:SubmitScript>
                </xpdExt:UserTaskScripts>
              </xpdl2:TaskUser>
            </xpdl2:Task>
          </xpdl2:Implementation>
          <xpdl2:Performers>
            <xpdl2:Performer>N65955</xpdl2:Performer>
          </xpdl2:Performers>
          <xpdl2:ExtendedAttributes>
            <xpdl2:ExtendedAttribute Name="iProcessStepNum" Value="13"/>
          </xpdl2:ExtendedAttributes>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="64.0" LaneId="N66606" Width="96.0">
              <xpdl2:Coordinates XCoordinate="1062.0" YCoordinate="288.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
          <xpdExt:ActivityResourcePatterns>
            <xpdExt:AllocationStrategy xpdExt:Offer="AllocateOne" xpdExt:Strategy="SYSTEM_DETERMINED"/>
          </xpdExt:ActivityResourcePatterns>
        </xpdl2:Activity>
        <xpdl2:Activity Id="N66356" Name="UT4" FinishMode="Manual" StartMode="Manual" xpdExt:DisplayName="UT4">
          <xpdl2:Implementation>
            <xpdl2:Task>
              <xpdl2:TaskUser Implementation="Unspecified">
                <xpdl2:Performers>
                  <xpdl2:Performer>-defined-in-Activity-Performer-</xpdl2:Performer>
                </xpdl2:Performers>
                <xpdl2:MessageIn Id="msgIn_N66356"/>
                <xpdl2:MessageOut Id="msgOut_N66356"/>
                <xpdExt:UserTaskScripts>
                  <xpdExt:OpenScript ScriptGrammar="JavaScript">SCRIPT(&quot;WHOLE2&quot;, 1, 2, 3); // 
  // SCRIPT call with parameters must be converted manually...
  // ============ Invoked Script ============
  // SCRIPT(&quot;STAND&quot;, 1, 2, 3); // Calling StandAlone Script 'Stand'
  //   // SCRIPT call with parameters must be converted manually...
  //   // ============ Invoked Script ============
  //   // ScriptUtil.setArrayElement(ARR , 10 , 20 + 10); // 
  //   //   // call(&quot;STAND2&quot;); // 
  //   //   // ============ Invoked Script ============
  //   //    ScriptUtil.setArrayElement(ARR , 0 , 12); // 
  //   //      // CALL(&quot;Stand3&quot;); // 
  //   //      // ============ Invoked Script ============
  //   //       ScriptUtil.setArrayElement(ARR , 12 , 12);
  //   //      // ========================================
  //   //   // ========================================
  //   // ScriptUtil.setArrayElement(ARR , 10 , 20 + 10); // 
  //   //   // call(&quot;STAND2&quot;); // 
  //   //   // ============ Invoked Script ============
  //   //    ScriptUtil.setArrayElement(ARR , 0 , 12); // 
  //   //      // CALL(&quot;Stand3&quot;); // 
  //   //      // ============ Invoked Script ============
  //   //       ScriptUtil.setArrayElement(ARR , 12 , 12);
  //   //      // ========================================
  //   //   // ========================================
  //   // ========================================
  // SCRIPT(&quot;COMMON&quot;, 1, 2, 3); // Calling StandAlone Script 'COMMON'
  //   // SCRIPT call with parameters must be converted manually...
  //   // ============ Invoked Script ============
  //   // &quot;This is special characters&quot;; // 
  //   // ScriptUtil.setArrayElement(ARR , 0 , 12); // assingn value at position arr[0]
  //   // ScriptUtil.setArrayElement(ARR , 1 , 12); // assingn value at position arr[1]
  //   // ScriptUtil.setArrayElement(ARR , 2 , 12); // assingn value at position arr[2]
  //   // ScriptUtil.setArrayElement(ARR , 3 , 12); // assingn value at position arr[3]
  //   // Process.auditLog(&quot;AuditId::&quot;+ 256); // simple cust audit
  //   //   // CALL(&quot;STAND3&quot;); // calling script named 'STAND3'
  //   //   // ============ Invoked Script ============
  //   //    ScriptUtil.setArrayElement(ARR , 12 , 12);
  //   //   // ========================================
  //   // ========================================
  // SCRIPT(&quot;COMMON2&quot;, 4, 5, 6); // Calling StandAlone Script 'COMMON2'
  //   // SCRIPT call with parameters must be converted manually...
  //   // ============ Invoked Script ============
  //   // &quot;This is special characters&quot;; // 
  //   // ScriptUtil.setArrayElement(ARR , 0 , 12); // assingn value at position arr[0]
  //   // ScriptUtil.setArrayElement(ARR , 1 , 12); // assingn value at position arr[1]
  //   // ScriptUtil.setArrayElement(ARR , 2 , 12); // assingn value at position arr[2]
  //   // ScriptUtil.setArrayElement(ARR , 3 , 12); // assingn value at position arr[3]
  //   // Process.auditLog(&quot;AuditId::&quot;+ 256); // simple cust audit
  //   // SCRIPT(&quot;STAND3&quot;, 1, 2, 3); // calling script named 'STAND3'
  //   //   // SCRIPT call with parameters must be converted manually...
  //   //   // ============ Invoked Script ============
  //   //   // ScriptUtil.setArrayElement(ARR , 12 , 12);
  //   //   // ========================================
  //   // ========================================
  // ========================================</xpdExt:OpenScript>
                  <xpdExt:CloseScript ScriptGrammar="JavaScript">SCRIPT(&quot;WHOLE2&quot;, 1, 2, 3); // 
  // SCRIPT call with parameters must be converted manually...
  // ============ Invoked Script ============
  // SCRIPT(&quot;STAND&quot;, 1, 2, 3); // Calling StandAlone Script 'Stand'
  //   // SCRIPT call with parameters must be converted manually...
  //   // ============ Invoked Script ============
  //   // ScriptUtil.setArrayElement(ARR , 10 , 20 + 10); // 
  //   //   // call(&quot;STAND2&quot;); // 
  //   //   // ============ Invoked Script ============
  //   //    ScriptUtil.setArrayElement(ARR , 0 , 12); // 
  //   //      // CALL(&quot;Stand3&quot;); // 
  //   //      // ============ Invoked Script ============
  //   //       ScriptUtil.setArrayElement(ARR , 12 , 12);
  //   //      // ========================================
  //   //   // ========================================
  //   // ScriptUtil.setArrayElement(ARR , 10 , 20 + 10); // 
  //   //   // call(&quot;STAND2&quot;); // 
  //   //   // ============ Invoked Script ============
  //   //    ScriptUtil.setArrayElement(ARR , 0 , 12); // 
  //   //      // CALL(&quot;Stand3&quot;); // 
  //   //      // ============ Invoked Script ============
  //   //       ScriptUtil.setArrayElement(ARR , 12 , 12);
  //   //      // ========================================
  //   //   // ========================================
  //   // ========================================
  // SCRIPT(&quot;COMMON&quot;, 1, 2, 3); // Calling StandAlone Script 'COMMON'
  //   // SCRIPT call with parameters must be converted manually...
  //   // ============ Invoked Script ============
  //   // &quot;This is special characters&quot;; // 
  //   // ScriptUtil.setArrayElement(ARR , 0 , 12); // assingn value at position arr[0]
  //   // ScriptUtil.setArrayElement(ARR , 1 , 12); // assingn value at position arr[1]
  //   // ScriptUtil.setArrayElement(ARR , 2 , 12); // assingn value at position arr[2]
  //   // ScriptUtil.setArrayElement(ARR , 3 , 12); // assingn value at position arr[3]
  //   // Process.auditLog(&quot;AuditId::&quot;+ 256); // simple cust audit
  //   //   // CALL(&quot;STAND3&quot;); // calling script named 'STAND3'
  //   //   // ============ Invoked Script ============
  //   //    ScriptUtil.setArrayElement(ARR , 12 , 12);
  //   //   // ========================================
  //   // ========================================
  // SCRIPT(&quot;COMMON2&quot;, 4, 5, 6); // Calling StandAlone Script 'COMMON2'
  //   // SCRIPT call with parameters must be converted manually...
  //   // ============ Invoked Script ============
  //   // &quot;This is special characters&quot;; // 
  //   // ScriptUtil.setArrayElement(ARR , 0 , 12); // assingn value at position arr[0]
  //   // ScriptUtil.setArrayElement(ARR , 1 , 12); // assingn value at position arr[1]
  //   // ScriptUtil.setArrayElement(ARR , 2 , 12); // assingn value at position arr[2]
  //   // ScriptUtil.setArrayElement(ARR , 3 , 12); // assingn value at position arr[3]
  //   // Process.auditLog(&quot;AuditId::&quot;+ 256); // simple cust audit
  //   // SCRIPT(&quot;STAND3&quot;, 1, 2, 3); // calling script named 'STAND3'
  //   //   // SCRIPT call with parameters must be converted manually...
  //   //   // ============ Invoked Script ============
  //   //   // ScriptUtil.setArrayElement(ARR , 12 , 12);
  //   //   // ========================================
  //   // ========================================
  // ========================================</xpdExt:CloseScript>
                  <xpdExt:SubmitScript ScriptGrammar="JavaScript">SCRIPT(&quot;WHOLE2&quot;, 1, 2, 3); // 
  // SCRIPT call with parameters must be converted manually...
  // ============ Invoked Script ============
  // SCRIPT(&quot;STAND&quot;, 1, 2, 3); // Calling StandAlone Script 'Stand'
  //   // SCRIPT call with parameters must be converted manually...
  //   // ============ Invoked Script ============
  //   // ScriptUtil.setArrayElement(ARR , 10 , 20 + 10); // 
  //   //   // call(&quot;STAND2&quot;); // 
  //   //   // ============ Invoked Script ============
  //   //    ScriptUtil.setArrayElement(ARR , 0 , 12); // 
  //   //      // CALL(&quot;Stand3&quot;); // 
  //   //      // ============ Invoked Script ============
  //   //       ScriptUtil.setArrayElement(ARR , 12 , 12);
  //   //      // ========================================
  //   //   // ========================================
  //   // ScriptUtil.setArrayElement(ARR , 10 , 20 + 10); // 
  //   //   // call(&quot;STAND2&quot;); // 
  //   //   // ============ Invoked Script ============
  //   //    ScriptUtil.setArrayElement(ARR , 0 , 12); // 
  //   //      // CALL(&quot;Stand3&quot;); // 
  //   //      // ============ Invoked Script ============
  //   //       ScriptUtil.setArrayElement(ARR , 12 , 12);
  //   //      // ========================================
  //   //   // ========================================
  //   // ========================================
  // SCRIPT(&quot;COMMON&quot;, 1, 2, 3); // Calling StandAlone Script 'COMMON'
  //   // SCRIPT call with parameters must be converted manually...
  //   // ============ Invoked Script ============
  //   // &quot;This is special characters&quot;; // 
  //   // ScriptUtil.setArrayElement(ARR , 0 , 12); // assingn value at position arr[0]
  //   // ScriptUtil.setArrayElement(ARR , 1 , 12); // assingn value at position arr[1]
  //   // ScriptUtil.setArrayElement(ARR , 2 , 12); // assingn value at position arr[2]
  //   // ScriptUtil.setArrayElement(ARR , 3 , 12); // assingn value at position arr[3]
  //   // Process.auditLog(&quot;AuditId::&quot;+ 256); // simple cust audit
  //   //   // CALL(&quot;STAND3&quot;); // calling script named 'STAND3'
  //   //   // ============ Invoked Script ============
  //   //    ScriptUtil.setArrayElement(ARR , 12 , 12);
  //   //   // ========================================
  //   // ========================================
  // SCRIPT(&quot;COMMON2&quot;, 4, 5, 6); // Calling StandAlone Script 'COMMON2'
  //   // SCRIPT call with parameters must be converted manually...
  //   // ============ Invoked Script ============
  //   // &quot;This is special characters&quot;; // 
  //   // ScriptUtil.setArrayElement(ARR , 0 , 12); // assingn value at position arr[0]
  //   // ScriptUtil.setArrayElement(ARR , 1 , 12); // assingn value at position arr[1]
  //   // ScriptUtil.setArrayElement(ARR , 2 , 12); // assingn value at position arr[2]
  //   // ScriptUtil.setArrayElement(ARR , 3 , 12); // assingn value at position arr[3]
  //   // Process.auditLog(&quot;AuditId::&quot;+ 256); // simple cust audit
  //   // SCRIPT(&quot;STAND3&quot;, 1, 2, 3); // calling script named 'STAND3'
  //   //   // SCRIPT call with parameters must be converted manually...
  //   //   // ============ Invoked Script ============
  //   //   // ScriptUtil.setArrayElement(ARR , 12 , 12);
  //   //   // ========================================
  //   // ========================================
  // ========================================</xpdExt:SubmitScript>
                </xpdExt:UserTaskScripts>
              </xpdl2:TaskUser>
            </xpdl2:Task>
          </xpdl2:Implementation>
          <xpdl2:Performers>
            <xpdl2:Performer>N65966</xpdl2:Performer>
          </xpdl2:Performers>
          <xpdl2:ExtendedAttributes>
            <xpdl2:ExtendedAttribute Name="iProcessStepNum" Value="14"/>
          </xpdl2:ExtendedAttributes>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="64.0" LaneId="N66606" Width="96.0">
              <xpdl2:Coordinates XCoordinate="1182.0" YCoordinate="284.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
          <xpdExt:ActivityResourcePatterns>
            <xpdExt:AllocationStrategy xpdExt:Offer="AllocateOne" xpdExt:Strategy="SYSTEM_DETERMINED"/>
          </xpdExt:ActivityResourcePatterns>
        </xpdl2:Activity>
        <xpdl2:Activity Id="N66445" Name="EndEvent" xpdExt:DisplayName="End Event">
          <xpdl2:Event>
            <xpdl2:EndEvent Result="None"/>
          </xpdl2:Event>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="27.0" LaneId="N66606" Width="27.0">
              <xpdl2:Coordinates XCoordinate="1355.0" YCoordinate="209.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
        </xpdl2:Activity>
        <xpdl2:Activity Id="N66491" Name="Start" xpdExt:DisplayName="Start">
          <xpdl2:Event>
            <xpdl2:StartEvent Trigger="None"/>
          </xpdl2:Event>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="27.0" LaneId="N66606" Width="27.0">
              <xpdl2:Coordinates XCoordinate="530.0" YCoordinate="97.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
        </xpdl2:Activity>
      </xpdl2:Activities>
      <xpdl2:Transitions>
        <xpdl2:Transition Id="N66541" xpdExt:DisplayName="" Name="" From="N66018" To="N66103">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo"/>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="N66546" xpdExt:DisplayName="" Name="" From="N66103" To="N66188">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo"/>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="N66551" xpdExt:DisplayName="" Name="" From="N66188" To="N66271">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo"/>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="N66556" xpdExt:DisplayName="" Name="" From="N66271" To="N66356">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo"/>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="N66561" xpdExt:DisplayName="" Name="" From="N66356" To="N66445">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo"/>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="N66566" xpdExt:DisplayName="" Name="" From="N66491" To="N66018">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo"/>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
      </xpdl2:Transitions>
      <xpdl2:ExtendedAttributes>
        <xpdl2:ExtendedAttribute Name="Destination" Value="BPM"/>
      </xpdl2:ExtendedAttributes>
    </xpdl2:WorkflowProcess>
  </xpdl2:WorkflowProcesses>
  <xpdl2:ExtendedAttributes>
    <xpdl2:ExtendedAttribute Name="FormatVersion" Value="16"/>
    <xpdl2:ExtendedAttribute Name="CreatedBy" Value="TIBCO Business Studio"/>
    <xpdl2:ExtendedAttribute Name="OriginalFormatVersion" Value="13"/>
  </xpdl2:ExtendedAttributes>
</xpdl2:Package>