/*
 * Copyright (c) TIBCO Software Inc 2004, 2014. All rights reserved.
 */

package com.tibco.customer.api.test.iprocess.amxbpm.framework.test.validations;

import java.util.List;

import com.tibco.customer.api.test.iprocess.amxbpm.AbstractIProcessConversionValidationTest;
import com.tibco.xpd.core.test.util.TestResourceInfo;
import com.tibco.xpd.iprocess.amxbpm.imports.validations.ImportValidationError;

/**
 * IPS to BPM validator Test that chekcs if expected number of error messages
 * are generated by the validator when 2 IPS processes/interfaces have the same
 * names but different Id's
 * 
 * @author kthombar
 * @since 14-Jul-2014
 */
public class IpsBpm_03_ProcessWithSameNameAndDifferentIdsTest extends
        AbstractIProcessConversionValidationTest {

    /**
     * @see com.tibco.customer.api.test.iprocess.amxbpm.AbstractIProcessConversionValidationTest#doTestImportValidations(java.util.List)
     * 
     * @param errors
     */
    @Override
    protected void doTestImportValidations(List<ImportValidationError> errors) {
        /*
         * We expect 1 error status to be generated
         */
        assertEquals("Unexpected number of errors generated by the validator", //$NON-NLS-1$
                1,
                errors.size());

        assertEquals("Error, did not find the expected validation error message", //$NON-NLS-1$
                errors.get(0).getMessage(),
                "Process/Interface 'testProcess' with same names should have same Id's"); //$NON-NLS-1$

    }

    /**
     * @see com.tibco.customer.api.test.iprocess.amxbpm.AbstractBaseIProcessToBpmTest#getImportResourcesInfo()
     * 
     * @return
     */
    @Override
    public TestResourceInfo[] getImportResourcesInfo() {
        TestResourceInfo[] testResources =
                new TestResourceInfo[] {
                        new TestResourceInfo(
                                "resources/FrameworkValidationTests", "IpsBpm_03_ProcessWithSameNameAndDifferentIdsTest/Process Packages{processes}/test.xpdl"), //$NON-NLS-1$ //$NON-NLS-2$
                        new TestResourceInfo(
                                "resources/FrameworkValidationTests", //$NON-NLS-1$
                                "IpsBpm_03_ProcessWithSameNameAndDifferentIdsTest/Process Packages{processes}/test2.xpdl"), }; //$NON-NLS-1$
        return testResources;
    }

    /**
     * @see com.tibco.customer.api.test.iprocess.amxbpm.AbstractBaseIProcessToBpmTest#getOtherResourcesInfo()
     * 
     * @return
     */
    @Override
    public TestResourceInfo[] getOtherResourcesInfo() {
        return null;
    }

    /**
     * @see com.tibco.customer.api.test.iprocess.amxbpm.AbstractBaseIProcessToBpmTest#getMainImportProjectName()
     * 
     * @return
     */
    @Override
    protected String getMainImportProjectName() {
        return "IpsBpm_03_ProcessWithSameNameAndDifferentIdsTest"; //$NON-NLS-1$
    }

    /**
     * @see com.tibco.customer.api.test.iprocess.amxbpm.AbstractBaseIProcessToBpmTest#getConversionType()
     * 
     * @return
     */
    @Override
    protected CONVERSION_TYPE getConversionType() {

        return CONVERSION_TYPE.IPS_TO_BPM_CONVERT;
    }

}
