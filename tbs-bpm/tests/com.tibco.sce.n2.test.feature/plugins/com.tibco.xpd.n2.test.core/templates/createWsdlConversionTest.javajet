<%@ jet 
     package="com.tibco.xpd.n2.test.core.generators" 
     class="WsdlConversionTestJavaClassGenerator"
     imports="com.tibco.xpd.n2.test.core.wsdlconversion.*" 
%>
/**
 * Copyright (c) TIBCO Software Inc 2004-2009. All rights reserved.
 */
<% N2WsdlConversionTestGeneratorData data = (N2WsdlConversionTestGeneratorData)argument; %>
package <%=data.testPackageId%>;

import <%=data.testSuperClassPackage%>.<%=data.testSuperClassName%>;
import com.tibco.xpd.core.test.util.TestResourceInfo;
import com.tibco.xpd.n2.test.core.wsdlconversion.Xsd4BdsInfo;

/**
 * Test that inclusion of "<%=data.baseWsdlOrXsdPath%>" in a BPM project generates the
 * appropriate BOM files with the correct content (and that they have no problem
 * markers).
 * <p>
 * Then checks that the correct XSDs are derived by the Bom2XsdBuilder (in the
 * .bom2xsd" folder) with the correct content and that they have no problem
 * markers.
 * </p>
 * <p>
 * Then checks that the correct BDS projects are created and contains the
 * correct XSDs derived for them to build the BDS ecore - and that the BDS
 * project has no problem markers.
 * </p>
 * <p>
 * Generated by: createWsdlConversionTest.javajet
 * </p>
 * 
 * @author 
 * @since 
 */
public class <%=data.testClassName%> extends <%=data.testSuperClassName%> {

    /**
     * The set of bom files in Generated Business Objects folder expected to be
     * generated for WSDL (relative to the base BOM folder).
     */
    private String[] bomFolderRelativeBoms = { 
        <% for (String bomFolderRelativeBom : data.bomFolderRelativeBoms) { %>
            "<%=bomFolderRelativeBom%>", //$NON-NLS-1$
        <% } %>
     };

    /**
     * The set of XSD files expected to be derived from the generated boms 
     * (relative to the .bom2Xsd folder)
     */
    private String[] bom2XsdFolderRelativeXsds = { 
        <% for (String bom2XsdFolderRelativeXsd : data.bom2XsdFolderRelativeXsds) { %>
            "<%=bom2XsdFolderRelativeXsd%>", //$NON-NLS-1$
        <% } %>
    };

    /**
     * The bds projects expected to be created for the set of generated boms.
     */
    private Xsd4BdsInfo[] xsd4BdsInfos = new Xsd4BdsInfo[] {
      <% for (Xsd4BdsInfo xsd4BdsInfo : data.xsd4BdsInfos) { %>
      	/* Expected BDS project and XSDs for "<%=xsd4BdsInfo.bomName%>" */
        new Xsd4BdsInfo("<%=xsd4BdsInfo.bomName%>", "<%=xsd4BdsInfo.bdsProjectName%>",
            new String[] { 
              <% for (String modelFolderRelativeXsd : xsd4BdsInfo.modelFolderRelativeXsds) { %>
                "<%=modelFolderRelativeXsd%>", 
              <% } %>
          }),
        /* ------------------- */ 
       <% } %>
    };
    /* =================== */
    
    /**
     * Construct
     */
    public <%=data.testClassName%>() {
        super("<%=data.targetProjectName%>", "<%=data.baseWsdlOrXsdPath%>");
    }
    
    /**
     * Test that the correct BOMs have been created for the WSDL "<%=data.baseWsdlOrXsdPath%>", 
     * and that the correct XSD's have been built from those BOMs
     * 
     * @throws Exception
     */
    public void test<%=data.testMethodName%>() throws Exception {
        // Check all files created correctly.
        checkTestFilesCreated();
       
        /*
         * Check boms have been generated and match the gold files.
         */
        checkGeneratedBoms(bomFolderRelativeBoms);

        /*
         * Check xsd's have been derived and match the gold files.
         */
        checkDerivedBom2Xsds(bom2XsdFolderRelativeXsds);

        /*
         * Check xsd's have been derived for BDS
         */
        checkDerivedXsd4Bds(xsd4BdsInfos);

        /*
         * If we get this far then all's well that ends well!
         */
        return;
    }

    @Override
    protected String getTestName() {
        return "<%=data.testName%>"; //$NON-NLS-1$
    }

    @Override
    protected String getTestPlugInId() {
        return "<%=data.testPluginId%>"; //$NON-NLS-1$
    }

    @Override
    protected TestResourceInfo[] getTestResources() {
        TestResourceInfo[] testResources = new TestResourceInfo[] {
        <% for (String testResourcePath : data.testResourcePaths) { %>
            new TestResourceInfo("<%=data.baseResourcePath%>", "<%=testResourcePath%>"), //$NON-NLS-1$ //$NON-NLS-2$
        <% } %>
        };
    
        return testResources;
    }

   
}
