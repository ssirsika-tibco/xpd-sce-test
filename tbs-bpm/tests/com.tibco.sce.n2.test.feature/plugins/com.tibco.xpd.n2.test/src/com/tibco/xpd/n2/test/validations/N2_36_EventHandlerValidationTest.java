/**
 * Copyright (c) TIBCO Software Inc 2004-2009. All rights reserved.
 */
package com.tibco.xpd.n2.test.validations;

import java.util.Collection;
import java.util.List;

import org.eclipse.core.resources.IFile;

import com.tibco.xpd.core.test.util.TestResourceInfo;
import com.tibco.xpd.core.test.validations.ValidationsTestProblemMarkerInfo;
import com.tibco.xpd.n2.test.core.validation.AbstractN2BaseValidationTest;
import com.tibco.xpd.processeditor.xpdl2.util.EventObjectUtil;
import com.tibco.xpd.processwidget.adapters.EventTriggerType;
import com.tibco.xpd.resources.WorkingCopy;
import com.tibco.xpd.resources.util.WorkingCopyUtil;
import com.tibco.xpd.xpdl2.Activity;
import com.tibco.xpd.xpdl2.Package;
import com.tibco.xpd.xpdl2.Process;
import com.tibco.xpd.xpdl2.util.Xpdl2ModelUtil;

/**
 * N236EventHandlerValidationTest
 * <p>
 * N236EventHandlerValidationTest - Test selected validations are correctly
 * raised.
 * </p>
 * <p>
 * Generated by: createBaseTest.javajet
 * </p>
 * 
 * Check various aspects of event handler / event sub-process (some signal scope
 * / can't invoke each other / can't join main flow)
 * 
 * @author
 * @since
 */
public class N2_36_EventHandlerValidationTest extends
        AbstractN2BaseValidationTest {

    public N2_36_EventHandlerValidationTest() {
        super(true);
    }

    /**
     * N2_36_EventHandlerValidationTest
     * 
     * @throws Exception
     */
    public void testN236EventHandlerValidationTestsTest() throws Exception {
        doTestValidations();
        return;
    }

    /**
     * Additional test that no unexepected problem markers are found on event
     * handlers, event sub-process starts and signal events.
     * 
     * This is done by check that these activities without the word "BAD" at the
     * start should be problem free.
     */
    public void testN236NoUnexpectedSignalProblemsTest() throws Exception {
        IFile testFile =
                getTestFile("TestEventHandlerCannotInvokeEventHandlerRules.xpdl"); //$NON-NLS-1$

        WorkingCopy workingCopy = WorkingCopyUtil.getWorkingCopy(testFile);

        Package pkg = (Package) workingCopy.getRootElement();

        List<ValidationsTestProblemMarkerInfo> problemMarkers =
                getProblemMarkers(testFile);

        StringBuffer testFail = new StringBuffer();

        for (Process process : pkg.getProcesses()) {
            Collection<Activity> activities =
                    Xpdl2ModelUtil.getAllActivitiesInProc(process);

            for (Activity activity : activities) {

                /* Any activity we're not expecting to be "BAD" */
                if (activity.getName() == null
                        || !activity.getName().startsWith("BAD")) { //$NON-NLS-1$

                    /*
                     * That's a signal, an event handler for statt of event
                     * sub-process
                     */
                    EventTriggerType trigType =
                            EventObjectUtil.getEventTriggerType(activity);

                    if (EventTriggerType.EVENT_SIGNAL_CATCH_LITERAL
                            .equals(trigType)
                            || EventTriggerType.EVENT_SIGNAL_THROW_LITERAL
                                    .equals(trigType)
                            || Xpdl2ModelUtil.isEventHandlerActivity(activity)
                            || Xpdl2ModelUtil
                                    .isEventSubProcessStartEvent(activity)) {

                        /*
                         * Must be free of problems.
                         */
                        String activityLocationUri = activity.getId();

                        for (ValidationsTestProblemMarkerInfo markerInfo : problemMarkers) {
                            if (activityLocationUri.equals(markerInfo
                                    .getLocationURI())) {
                                testFail.append(String
                                        .format("Found unexpected problem marker on activity '%s': %s\n", //$NON-NLS-1$
                                                Xpdl2ModelUtil
                                                        .getDisplayNameOrName(activity),
                                                markerInfo.getProblemText()));
                            }

                        }
                    }

                }
            }
        }

        if (testFail.length() > 0) {
            fail(testFail.toString());
        }

    }

    @Override
    protected ValidationsTestProblemMarkerInfo[] getValidationProblemMarkerInfos() {
        ValidationsTestProblemMarkerInfo[] markerInfos =
                new ValidationsTestProblemMarkerInfo[] {

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/MCMEvent01.xpdl", //$NON-NLS-1$ 
                                "bx.eventHandlerFlowMayNotJoinOthers", //$NON-NLS-1$ 
                                "_3Ip0oE0ZEeSrzdOTJ4Es0w", //$NON-NLS-1$ 
                                "Process Manager  : Event handler flows cannot join into other flows. (MCMEvent01Process:CatchSignal1)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/MCMEvent01.xpdl", //$NON-NLS-1$ 
                                "bx.eventHandlerSignalNameMustBeUnique", //$NON-NLS-1$ 
                                "_3Ip0oE0ZEeSrzdOTJ4Es0w", //$NON-NLS-1$ 
                                "Process Manager  : A catch signal event handler must have a unique signal name within whole process scope. (MCMEvent01Process:CatchSignal1)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/MCMEvent01.xpdl", //$NON-NLS-1$ 
                                "bx.throwSignalCannotStartAncestorEventSubProcess", //$NON-NLS-1$ 
                                "_F90SEE0aEeSrzdOTJ4Es0w", //$NON-NLS-1$ 
                                "Process Manager  : A throw signal cannot start an event sub-process it is contained within. (MCMEvent01Process:EventSubProcess2:ThrowthrowSig1)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/MCMEvent01.xpdl", //$NON-NLS-1$ 
                                "bpmn.eventSubProcessMustHaveExactlyOneStartEvent", //$NON-NLS-1$ 
                                "_iTC3sE0ZEeSrzdOTJ4Es0w", //$NON-NLS-1$ 
                                "BPMN  : Event Sub-Process must have exactly one start event activity. (MCMEvent01Process:EventSubProcess2)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/MCMEvent01.xpdl", //$NON-NLS-1$ 
                                "bpmn.eventSubProcessMustHaveExactlyOneStartEvent", //$NON-NLS-1$ 
                                "_Jg5zwE0ZEeSrzdOTJ4Es0w", //$NON-NLS-1$ 
                                "BPMN  : Event Sub-Process must have exactly one start event activity. (MCMEvent01Process:EventSubProcess)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/MCMEvent01.xpdl", //$NON-NLS-1$ 
                                "bx.cantTriggerEventhandlersFromEventHandler", //$NON-NLS-1$ 
                                "_LC7nME0ZEeSrzdOTJ4Es0w", //$NON-NLS-1$ 
                                "Process Manager  : An event handler flow cannot trigger another signal event handler / event sub-process. (MCMEvent01Process:EventSubProcess:CancelRequest2)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/MCMEvent01.xpdl", //$NON-NLS-1$ 
                                "bx.eventHandlerFlowHasArbitraryLengthActs", //$NON-NLS-1$ 
                                "_LC7nMU0ZEeSrzdOTJ4Es0w", //$NON-NLS-1$ 
                                "Process Manager  : Event handler threads with long-running activity ('User Task 3') can prevent process instance migration for long periods. (MCMEvent01Process:EventSubProcess:EventCancelMCMRequest2)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/MCMEvent01.xpdl", //$NON-NLS-1$ 
                                "bx.mustCatchSpecificSignal", //$NON-NLS-1$ 
                                "_LC7nMU0ZEeSrzdOTJ4Es0w", //$NON-NLS-1$ 
                                "Process Manager  : Catch signal Event must reference a specific signal.  (MCMEvent01Process:EventSubProcess:EventCancelMCMRequest2)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/MCMEvent01.xpdl", //$NON-NLS-1$ 
                                "bx.eventHandlerFlowMayNotJoinOthers", //$NON-NLS-1$ 
                                "_LC7nNU0ZEeSrzdOTJ4Es0w", //$NON-NLS-1$ 
                                "Process Manager  : Event handler flows cannot join into other flows. (MCMEvent01Process:EventSubProcess:CatchSignal22)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/MCMEvent01.xpdl", //$NON-NLS-1$ 
                                "bx.throwSignalCannotStartAncestorEventSubProcess", //$NON-NLS-1$ 
                                "_OlOz0U0aEeSrzdOTJ4Es0w", //$NON-NLS-1$ 
                                "Process Manager  : A throw signal cannot start an event sub-process it is contained within. (MCMEvent01Process:EventSubProcess2:Throwmysig1)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/MCMEvent01.xpdl", //$NON-NLS-1$ 
                                "bx.cantTriggerEventhandlersFromEventHandler", //$NON-NLS-1$ 
                                "_qldF0C5KEeKFm-fxAkof8g", //$NON-NLS-1$ 
                                "Process Manager  : An event handler flow cannot trigger another signal event handler / event sub-process. (MCMEvent01Process:EmbeddedSubProcess:ReturnRequestToBackOffice)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/MCMEvent01.xpdl", //$NON-NLS-1$ 
                                "bx.cantTriggerEventhandlersFromEventHandler", //$NON-NLS-1$ 
                                "_qldF1C5KEeKFm-fxAkof8g", //$NON-NLS-1$ 
                                "Process Manager  : An event handler flow cannot trigger another signal event handler / event sub-process. (MCMEvent01Process:CancelRequest)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/MCMEvent01.xpdl", //$NON-NLS-1$ 
                                "bpmn.dev.errorNoThrowSignalForGivenCatchSignal", //$NON-NLS-1$ 
                                "_qldF1i5KEeKFm-fxAkof8g", //$NON-NLS-1$ 
                                "BPMN  : Signal 'Signal2' is not thrown by any event in scope (thrower must be in same process or in parent / child embedded sub-process) (MCMEvent01Process:CancelRequestHandling)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/MCMEvent01.xpdl", //$NON-NLS-1$ 
                                "bx.eventHandlerFlowHasArbitraryLengthActs", //$NON-NLS-1$ 
                                "_qldFzC5KEeKFm-fxAkof8g", //$NON-NLS-1$ 
                                "Process Manager  : Event handler threads with long-running activity ('Display Update Event Data') can prevent process instance migration for long periods. (MCMEvent01Process:EmbeddedSubProcess:EventUpdateMCMRequest)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/MCMEvent01.xpdl", //$NON-NLS-1$ 
                                "bpmn.dev.errorNoThrowSignalForGivenCatchSignal", //$NON-NLS-1$ 
                                "_qlm2yC5KEeKFm-fxAkof8g", //$NON-NLS-1$ 
                                "BPMN  : Signal 'Signal1' is not thrown by any event in scope (thrower must be in same process or in parent / child embedded sub-process) (MCMEvent01Process:RequestHandling:ReturnToBackOffice)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/MCMEvent01.xpdl", //$NON-NLS-1$ 
                                "bx.cantTriggerEventhandlersFromEventHandler", //$NON-NLS-1$ 
                                "_YH88sE0ZEeSrzdOTJ4Es0w", //$NON-NLS-1$ 
                                "Process Manager  : An event handler flow cannot trigger another signal event handler / event sub-process. (MCMEvent01Process:CancelRequest1)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/MCMEvent01.xpdl", //$NON-NLS-1$ 
                                "bx.throwSignalEventCantInvokeSignalsInEmbeddedSubProc", //$NON-NLS-1$ 
                                "_YH88sE0ZEeSrzdOTJ4Es0w", //$NON-NLS-1$ 
                                "Process Manager  : A signal event handler in an embedded sub-process cannot be invoked from outside of the embedded sub-process. (MCMEvent01Process:CancelRequest1)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/TestEventHandlerCannotInvokeEventHandlerRules.xpdl", //$NON-NLS-1$ 
                                "bx.cantTriggerEventHandlersFromEventSubProc", //$NON-NLS-1$ 
                                "_2zPQok8OEeS6jNobkHUGiQ", //$NON-NLS-1$ 
                                "Process Manager  : An event sub-process flow cannot trigger another signal event handler / event sub-process (except event handler in same event sub-process). (TestEventHandlerCannotInvokeEventHandlerRulesxpdl:EventSubProcess:BADSIGE)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/TestEventHandlerCannotInvokeEventHandlerRules.xpdl", //$NON-NLS-1$ 
                                "bx.cantTriggerEventHandlersFromEventSubProc", //$NON-NLS-1$ 
                                "_8_UYYk8OEeS6jNobkHUGiQ", //$NON-NLS-1$ 
                                "Process Manager  : An event sub-process flow cannot trigger another signal event handler / event sub-process (except event handler in same event sub-process). (TestEventHandlerCannotInvokeEventHandlerRulesxpdl:EventSubProcess2:BADSIGB2)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/TestEventHandlerCannotInvokeEventHandlerRules.xpdl", //$NON-NLS-1$ 
                                "bx.cantTriggerEventhandlersFromEventHandler", //$NON-NLS-1$ 
                                "_AOhdIk8AEeSuMNIv6cnhGQ", //$NON-NLS-1$ 
                                "Process Manager  : An event handler flow cannot trigger another signal event handler / event sub-process. (TestEventHandlerCannotInvokeEventHandlerRulesxpdl:EventSubProcess:BADSIGB)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/TestEventHandlerCannotInvokeEventHandlerRules.xpdl", //$NON-NLS-1$ 
                                "bx.cantTriggerEventhandlersFromEventHandler", //$NON-NLS-1$ 
                                "_dabWoE8AEeSuMNIv6cnhGQ", //$NON-NLS-1$ 
                                "Process Manager  : An event handler flow cannot trigger another signal event handler / event sub-process. (TestEventHandlerCannotInvokeEventHandlerRulesxpdl:EventSubProcess:BADSigC)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/TestEventHandlerCannotInvokeEventHandlerRules.xpdl", //$NON-NLS-1$ 
                                "bx.throwSignalEventCantInvokeSignalsInEmbeddedSubProc", //$NON-NLS-1$ 
                                "_nWM0gU8GEeSuMNIv6cnhGQ", //$NON-NLS-1$ 
                                "Process Manager  : A signal event handler in an embedded sub-process cannot be invoked from outside of the embedded sub-process. (TestEventHandlerCannotInvokeEventHandlerRulesxpdl:BADThrowSIGC)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/TestEventHandlerCannotInvokeEventHandlerRules.xpdl", //$NON-NLS-1$ 
                                "bx.cantTriggerEventhandlersFromEventHandler", //$NON-NLS-1$ 
                                "_sv_LYk8AEeSuMNIv6cnhGQ", //$NON-NLS-1$ 
                                "Process Manager  : An event handler flow cannot trigger another signal event handler / event sub-process. (TestEventHandlerCannotInvokeEventHandlerRulesxpdl:BADSIGB1)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/TestEventHandlerCannotInvokeEventHandlerRules.xpdl", //$NON-NLS-1$ 
                                "bx.cantTriggerEventhandlersFromEventHandler", //$NON-NLS-1$ 
                                "_TARr8k8AEeSuMNIv6cnhGQ", //$NON-NLS-1$ 
                                "Process Manager  : An event handler flow cannot trigger another signal event handler / event sub-process. (TestEventHandlerCannotInvokeEventHandlerRulesxpdl:BADSIGA)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/MCMEvent01/Process Packages/TestEventHandlerCannotInvokeEventHandlerRules.xpdl", //$NON-NLS-1$ 
                                "bx.cantTriggerEventHandlersFromEventSubProc", //$NON-NLS-1$ 
                                "_U6SfIU-QEeSOEo3p2SAJug", //$NON-NLS-1$ 
                                "Process Manager  : An event sub-process flow cannot trigger another signal event handler / event sub-process (except event handler in same event sub-process). (TestEventHandlerCannotInvokeEventHandlerRulesxpdl:EventSubProcess:BADSIGE2)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                };
        return markerInfos;
    }

    @Override
    protected String getTestName() {
        return "N2_36_EventHandlerValidationTest"; //$NON-NLS-1$
    }

    @Override
    protected String getTestPlugInId() {
        return "com.tibco.xpd.n2.test"; //$NON-NLS-1$
    }

    @Override
    protected TestResourceInfo[] getTestResources() {
        TestResourceInfo[] testResources =
                new TestResourceInfo[] {
                        new TestResourceInfo(
                                "resources/N236EventHandlerValidationTests", "MCMEvent01/Business Objects{bom}/MCMEvent01.bom"), //$NON-NLS-1$ //$NON-NLS-2$
                        new TestResourceInfo(
                                "resources/N236EventHandlerValidationTests", "MCMEvent01/Process Packages{processes}/MCMEvent01.xpdl"), //$NON-NLS-1$ //$NON-NLS-2$
                        new TestResourceInfo(
                                "resources/N236EventHandlerValidationTests", "MCMEvent01/Process Packages{processes}/TestEventHandlerCannotInvokeEventHandlerRules.xpdl"), //$NON-NLS-1$ //$NON-NLS-2$
                };

        return testResources;
    }

}
