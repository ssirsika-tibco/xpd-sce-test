/**
 * Copyright (c) TIBCO Software Inc 2004-2009. All rights reserved.
 */
package com.tibco.xpd.analyst.qa.test;

import com.tibco.xpd.core.test.util.TestResourceInfo;
import com.tibco.xpd.core.test.validations.AbstractBaseValidationTest;
import com.tibco.xpd.core.test.validations.ValidationsTestProblemMarkerInfo;

/**
 * This test was initially created with string comparisons. Updated this test
 * using the new Test creation for validations framework which should keep this
 * updated.
 * <p>
 * BPMN10ValidationTest - Test selected validations are correctly raised.
 * </p>
 * <p>
 * Generated by: createBaseTest.javajet
 * </p>
 * 
 * @author rsomayaj - updated
 * @author sghani - older version.
 * @since
 * 
 * 
 */
public class BPMN10ValidationTest extends AbstractBaseValidationTest {

    /**
     * BPMN10ValidationTest
     * 
     * @throws Exception
     */
    public void testBPMN10ValidationTest() throws Exception {
        doTestValidations();
        return;
    }

    @Override
    protected ValidationsTestProblemMarkerInfo[] getValidationProblemMarkerInfos() {
        ValidationsTestProblemMarkerInfo[] markerInfos =
                new ValidationsTestProblemMarkerInfo[] {

                        new ValidationsTestProblemMarkerInfo(
                                "/TestRequest res/Process Packages/TestProcessBPMN.xpdl", //$NON-NLS-1$ 
                                "bpmn.invalidNamedElementName", //$NON-NLS-1$ 
                                "_vNVKADkpEd2GLc4mGaj5qQ", //$NON-NLS-1$ 
                                "BPMN : Name 'Embedded Sub-Process' can contain only alpha-numeric and underscore characters. (ProcessPackage-Process:Embedded Sub-Process)", //$NON-NLS-1$ 
                                "Remove invalid characters from the name."), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/TestRequest res/Process Packages/TestProcessBPMN.xpdl", //$NON-NLS-1$ 
                                "bpmn.invalidNamedElementName", //$NON-NLS-1$ 
                                "_78LlwDkqEd2GLc4mGaj5qQ", //$NON-NLS-1$ 
                                "BPMN : Name 'Receive Task' can contain only alpha-numeric and underscore characters. (ProcessPackage-Process:Receive Task)", //$NON-NLS-1$ 
                                "Remove invalid characters from the name."), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/TestRequest res/Process Packages/TestProcessBPMN.xpdl", //$NON-NLS-1$ 
                                "bpmn.invalidNamedElementName", //$NON-NLS-1$ 
                                "_KB-RMDkqEd2GLc4mGaj5qQ", //$NON-NLS-1$ 
                                "BPMN : Name 'Link To: HERE' can contain only alpha-numeric and underscore characters. (ProcessPackage-Process:Link To: HERE)", //$NON-NLS-1$ 
                                "Remove invalid characters from the name."), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/TestRequest res/Process Packages/TestProcessBPMN.xpdl", //$NON-NLS-1$ 
                                "bpmn.invalidMixedTypesFromEventBasedGateway", //$NON-NLS-1$ 
                                "_fm9coDkqEd2GLc4mGaj5qQ", //$NON-NLS-1$ 
                                "BPMN : Sequence flows from an event-based gateway cannot be to both Receive Tasks and Message Events. (ProcessPackage-Process:EVTGATE)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/TestRequest res/Process Packages/TestProcessBPMN.xpdl", //$NON-NLS-1$ 
                                "bpmn.linkTargetInDifferentPoolOrSubProc", //$NON-NLS-1$ 
                                "_KB-RMDkqEd2GLc4mGaj5qQ", //$NON-NLS-1$ 
                                "BPMN : Throw link event must reference a catch link event in the same process / embedded sub-process scope. (ProcessPackage-Process:Link To: HERE)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/TestRequest res/Process Packages/TestProcessBPMN.xpdl", //$NON-NLS-1$ 
                                "bpmn.singleOutboundFlow", //$NON-NLS-1$ 
                                "_0K8eEDkqEd2GLc4mGaj5qQ", //$NON-NLS-1$ 
                                "BPMN : Event must have a single outgoing sequence flow. (ProcessPackage-Process:?)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/TestRequest res/Process Packages/TestProcessBPMN.xpdl", //$NON-NLS-1$ 
                                "bpmn.invalidEventBasedGatewayTransition", //$NON-NLS-1$ 
                                "_ilS2ADkqEd2GLc4mGaj5qQ", //$NON-NLS-1$ 
                                "BPMN : Sequence flows from an event-based gateway must be to a Receive Task or Intermediate Event of type Timer, Condition, Catch Message, Catch Signal, Catch Multiple. (EVTGATE -> Task2)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/TestRequest res/Process Packages/TestProcessBPMN.xpdl", //$NON-NLS-1$ 
                                "bpmn.eventMustBeBoundaryEvent", //$NON-NLS-1$ 
                                "_DGfNwN8vEd6coNkvrZDThw", //$NON-NLS-1$ 
                                "BPMN : Error and Catch Compensation must be attached to task boundaries. (ProcessPackage-Process:?)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/TestRequest res/Process Packages/TestProcessBPMN.xpdl", //$NON-NLS-1$ 
                                "bpmn.invalidNamedElementName", //$NON-NLS-1$ 
                                "_LjiAADkpEd2GLc4mGaj5qQ", //$NON-NLS-1$ 
                                "BPMN : Name 'ProcessPackage-Process' can contain only alpha-numeric and underscore characters. (ProcessPackage-Process)", //$NON-NLS-1$ 
                                "Remove invalid characters from the name."), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/TestRequest res/Process Packages/TestProcessBPMN.xpdl", //$NON-NLS-1$ 
                                "bpmn.singleOutboundFlow", //$NON-NLS-1$ 
                                "_ZEXc4DkrEd2GLc4mGaj5qQ", //$NON-NLS-1$ 
                                "BPMN : Event must have a single outgoing sequence flow. (ProcessPackage-Process:?)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/TestRequest res/Process Packages/TestProcessBPMN.xpdl", //$NON-NLS-1$ 
                                "bpmn.invalidCancelEventLocation", //$NON-NLS-1$ 
                                "_tkF7UDkpEd2GLc4mGaj5qQ", //$NON-NLS-1$ 
                                "BPMN : Cancel events can only be used on the boundary of a transactional Sub-Process. (ProcessPackage-Process:?)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/TestRequest res/Process Packages/TestProcessBPMN.xpdl", //$NON-NLS-1$ 
                                "bpmn.invalidNamedElementName", //$NON-NLS-1$ 
                                "_Md0eATkpEd2GLc4mGaj5qQ", //$NON-NLS-1$ 
                                "BPMN : Name 'Start Event' can contain only alpha-numeric and underscore characters. (ProcessPackage-Process:Start Event)", //$NON-NLS-1$ 
                                "Remove invalid characters from the name."), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/TestRequest res/Process Packages/TestProcessBPMN.xpdl", //$NON-NLS-1$ 
                                "bpmn.boundaryEventOutboundFlow", //$NON-NLS-1$ 
                                "_yFjUUDkpEd2GLc4mGaj5qQ", //$NON-NLS-1$ 
                                "BPMN : A cancelling boundary event must have a single outgoing sequence flow. (ProcessPackage-Process:?)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/TestRequest res/Process Packages/TestProcessBPMN.xpdl", //$NON-NLS-1$ 
                                "bpmn.noOutgoingAssociationForCompensatedTask", //$NON-NLS-1$ 
                                "_4MrDkTkpEd2GLc4mGaj5qQ", //$NON-NLS-1$ 
                                "BPMN : Compensation event must have exactly one compensation association to a compensating task. (ProcessPackage-Process:?)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/TestRequest res/Process Packages/TestProcessBPMN.xpdl", //$NON-NLS-1$ 
                                "bpmn.compensationBoundaryEventOutboundFlow", //$NON-NLS-1$ 
                                "_-pQFcDkpEd2GLc4mGaj5qQ", //$NON-NLS-1$ 
                                "BPMN : Catch compensation must use association connection rather than sequence flow. (unnamed -> Task3)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/TestRequest res/Process Packages/TestProcessBPMN.xpdl", //$NON-NLS-1$ 
                                "bpmn.linkSourceInDifferentPoolOrSubProc", //$NON-NLS-1$ 
                                "_Jz0gczkqEd2GLc4mGaj5qQ", //$NON-NLS-1$ 
                                "BPMN : Catch link event must be referred to by throw link event(s) in the same process / embedded sub-process scope. (ProcessPackage-Process:Embedded Sub-Process:HERE)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/TestRequest res/Process Packages/TestProcessBPMN.xpdl", //$NON-NLS-1$ 
                                "bpmn.invalidBoundaryEvent", //$NON-NLS-1$ 
                                "_fC3tkDkpEd2GLc4mGaj5qQ", //$NON-NLS-1$ 
                                "BPMN : Link and None events cannot be used on an activity boundary. (ProcessPackage-Process:?)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/TestRequest res/Process Packages/TestProcessBPMN.xpdl", //$NON-NLS-1$ 
                                "bpmn.invalidNamedElementName", //$NON-NLS-1$ 
                                "_Md0eAjkpEd2GLc4mGaj5qQ", //$NON-NLS-1$ 
                                "BPMN : Name 'End Event' can contain only alpha-numeric and underscore characters. (ProcessPackage-Process:End Event)", //$NON-NLS-1$ 
                                "Remove invalid characters from the name."), //$NON-NLS-1$ 

                };
        return markerInfos;
    }

    @Override
    protected String getTestName() {
        return "BPMN10ValidationTest"; //$NON-NLS-1$
    }

    @Override
    protected String getTestPlugInId() {
        return "com.tibco.xpd.analyst.qa.test"; //$NON-NLS-1$
    }

    @Override
    protected TestResourceInfo[] getTestResources() {
        TestResourceInfo[] testResources =
                new TestResourceInfo[] { new TestResourceInfo(
                        "resources/BPMN10ValidationTest", "TestRequest res/Process Packages{processes}/TestProcessBPMN.xpdl"), //$NON-NLS-1$ //$NON-NLS-2$
                };

        return testResources;
    }

}
