<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!-- WARNING: DO NOT EDIT MANUALLY:  This file is generated from an EA Model, and should not be edited manually.  The model (which contains instructions on how to generate) is located at: EventCollector/com.tibco.n2.ec.api.feature/plugins/com.tibco.n2.ec.api/resources/EventCollector API Model.eap -->
<xs:schema xmlns="http://base.api.ec.n2.tibco.com" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://base.api.ec.n2.tibco.com">
	<xs:simpleType name="AttributeType">
		<xs:annotation>
			<xs:documentation>Enumerated value defining the AttributeTypes for specific AttributeDefinitions. One of: DATE, INT, STRING, BOOLEAN, LONG or DOUBLE.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="DATE"/>
			<xs:enumeration value="INT"/>
			<xs:enumeration value="STRING"/>
			<xs:enumeration value="BOOLEAN"/>
			<xs:enumeration value="LONG"/>
			<xs:enumeration value="DOUBLE"/>
			<xs:enumeration value="BIGDECIMAL"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="SortType">
		<xs:annotation>
			<xs:documentation>Enumerated value defining the type of sort which can be used for each element of a SortOrder.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="DESCENDING"/>
			<xs:enumeration value="ASCENDING"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="Attribute" type="Attribute"/>
	<xs:complexType name="Attribute">
		<xs:annotation>
			<xs:documentation>Definition of a specific attribute/value pairing.  

The attributeId can be referenced to an AttributeDefinition using the following operations:

- getAttributes 
- getAllAttributes </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="1" name="attributeId" type="xs:long">
				<xs:annotation>
					<xs:documentation>Attribute ID that this value refers to.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="attributeName" type="xs:string">
				<xs:annotation>
					<xs:documentation>(Optional) Name of this attribute.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="1" name="value" type="xs:string">
				<xs:annotation>
					<xs:documentation>Value of this attribute in the context of this event.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="QueryParameter" type="QueryParameter"/>
	<xs:complexType name="QueryParameter">
		<xs:annotation>
			<xs:documentation>Definition of a QueryParameter, which can be used when late-binding values into a query filter string.

This can make it easier to re-use an existing query, where only certain values will change within the query.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="1" name="parameterName" type="xs:string">
				<xs:annotation>
					<xs:documentation>Name of the parameter to use.  

This should match the name of a late-bound parameter literal used as part of a filter for a registered query.

See the BPM Developer's Guide for more information about the use of late-bound parameter literals with registered query.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="1" name="parameterValue" type="xs:string">
				<xs:annotation>
					<xs:documentation>Value to use with this parameter.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Result" type="Result"/>
	<xs:complexType name="Result">
		<xs:annotation>
			<xs:documentation>Information returned by an executeQueryResponse message.
The Result object contains summary information followed by a list of the events returned by the query.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="1" name="endPosition" type="xs:int">
				<xs:annotation>
					<xs:documentation>Index of the last event returned by the query.

This will correlate with either:

- the numberOfItems + startPosition properties specified in the QueryOptions for the query, or

- the end of the results returned by the query.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="1" name="startPosition" type="xs:int">
				<xs:annotation>
					<xs:documentation>Index of the first event returned by the query. 

This will correlate with the startPosition specified in QueryOptions in the query request.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="1" name="totalItems" type="xs:long">
				<xs:annotation>
					<xs:documentation>Total number of items the query could have returned (if it had specified its startPosition as 0 and numberOfItems as -1).  

For performance reasons, totalItems is only returned if the getTotalItems flag was specified in QueryOptions in the query request.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="event" type="Event"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="AdvancedPurgeOption" type="AdvancedPurgeOption"/>
	<xs:complexType name="AdvancedPurgeOption">
		<xs:annotation>
			<xs:documentation>Advanced options for the Purge operation</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="1" name="optionName" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of an advanced option</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="1" name="optionValue" type="xs:string">
				<xs:annotation>
					<xs:documentation>The value of an advanced option</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ConfigurationArea" type="ConfigurationArea"/>
	<xs:complexType name="ConfigurationArea">
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="1" name="type" type="ConfigurationType"/>
			<xs:element maxOccurs="1" minOccurs="1" name="target" type="Target"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Query" type="Query"/>
	<xs:complexType name="Query">
		<xs:annotation>
			<xs:documentation>Definition of a query to execute on the system, to obtain data from the Event Collector database.  

Queries can either be executed directly, or registered for later execution (recommended  when repeatedly calling the same query).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="0" name="correlate" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Boolean value defining whether this query should be correlated. 

When this flag is set, the correlation ID of each returned event is examined. Every event that has the same correlation ID is then also returned.

Setting this flag can be useful for tracing the events triggered by a specific action. However, it can also result in large amounts of data being returned. It should therefore only be used where necessary.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="1" name="filter" type="xs:string">
				<xs:annotation>
					<xs:documentation>Filter string to use for this query.  

See the BPM Developer's Guide for more information about which attributes can be used in the filter and how to specify the filter string.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="requireAllAttributes" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Boolean value defining whether all attributes should be returned.  

This setting overrides any "requiredAttribute" elements.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="requiredAttribute" type="xs:string">
				<xs:annotation>
					<xs:documentation>List of attributes that should be returned for each event found by this query.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="sortOrder" type="SortElement"/>
			<xs:element maxOccurs="1" minOccurs="0" name="target" type="QueryTarget"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="QueryIdentifier" type="QueryIdentifier"/>
	<xs:complexType name="QueryIdentifier">
		<xs:annotation>
			<xs:documentation>Definition of the identifier for a query registered in Event Collector.

The QueryIdentifier can contain either a guid or a tag to identify the query. A guid is generally recommended for better performance.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="0" name="guid" type="xs:long">
				<xs:annotation>
					<xs:documentation>Globally unique identifier for this query.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="tag" type="xs:string">
				<xs:annotation>
					<xs:documentation>Unique string identifier for this query.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Event" type="Event"/>
	<xs:complexType name="Event">
		<xs:annotation>
			<xs:documentation>Details of a specific event contained in or submitted to Event Collector.  </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="0" name="correlationId" type="xs:string">
				<xs:annotation>
					<xs:documentation>CorrelationID assigned to this event.

The correlationID is used with the contextID and parentContextID to determine the series of events that have occurred. 

The correlationID will be set when a service request is received from an external source and remains the same for the duration of that request (including any child service calls made).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="1" name="eventTimestamp" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>Timestamp of this event.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="id" type="xs:long">
				<xs:annotation>
					<xs:documentation>Unique id for this Event</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="1" name="message" type="xs:string">
				<xs:annotation>
					<xs:documentation>String representation of this event.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="1" name="messageId" type="xs:string">
				<xs:annotation>
					<xs:documentation>Identifier for this event.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="1" name="priority" type="xs:string">
				<xs:annotation>
					<xs:documentation>Priority of this event (LOW, MEDIUM or HIGH).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="1" name="severity" type="xs:string">
				<xs:annotation>
					<xs:documentation>Severity of this event (DEBUG, SERVICE, INFO, AUDIT, WARN, ERROR or TRACE).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="attribute" type="Attribute"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="QueryOptions" type="QueryOptions"/>
	<xs:complexType name="QueryOptions">
		<xs:annotation>
			<xs:documentation>Execution-time options to be used with this query. These include:

- paging options for the query.

- runtime QueryParameters that should be used for any late-bound parameters specified in the query.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="0" name="getTotalCount" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Boolean value defining whether to return a count of the total number of items the query could return (if startPosition was specified as 0 and numberOfItems as -1). 

Setting this flag has some performance impact.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="numberOfItems" type="xs:int">
				<xs:annotation>
					<xs:documentation>Maximum number of events to return.

A value of  -1 specifies that all events (matching the filter) should be returned.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="populateAttributeNames" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>This option controls whether attribute names will be included in all returned attributes from the query. Where the QueryTarget refers to a table where id's are not applicable, this option will be ignored.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="startPosition" type="xs:int">
				<xs:annotation>
					<xs:documentation>Index of the first required event.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="parameter" type="QueryParameter"/>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="advancedOption" type="AdvancedQueryOption"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="AttributeDefinition" type="AttributeDefinition"/>
	<xs:complexType name="AttributeDefinition">
		<xs:annotation>
			<xs:documentation>Definition of an attribute.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="0" name="category" type="xs:string">
				<xs:annotation>
					<xs:documentation>Category of this AttributeDefinition.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="componentId" type="xs:long">
				<xs:annotation>
					<xs:documentation>Component against which this AttributeDefinition is registered.  

This value is only populated when calling getAllAttributes. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="id" type="xs:long">
				<xs:annotation>
					<xs:documentation>Identifier of this attribute.  

(When registering attributes this property should be left blank.  The result of the registration operation is the same list of AttributeDefinitions passed in but with the id property filled out.)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="isPrimary" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Boolean value defining whether this attribute can be used in a query string.
Attributes that do not have this flag set can be returned as part of a query result, but cannot be used in a query filter.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="length" type="xs:int">
				<xs:annotation>
					<xs:documentation>Length of this attribute (as defined by Hibernate mappings).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="name" type="xs:string">
				<xs:annotation>
					<xs:documentation>Name of this AttributeDefinition.

(The Name must be unique for a specific component and version.)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="type" type="AttributeType">
				<xs:annotation>
					<xs:documentation>Type of this AttributeDefinition, for possible options see AttributeType</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Component" type="Component"/>
	<xs:complexType name="Component">
		<xs:annotation>
			<xs:documentation>Definition of a component.  

(When registering components the id property should not be filled in, instead the system will return a component object which contains the passed in values and also the id property.)</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="0" name="componentClass" type="xs:string">
				<xs:annotation>
					<xs:documentation>A class name associated with this component</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="componentName" type="xs:string">
				<xs:annotation>
					<xs:documentation>Name of this component.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="description" type="xs:string">
				<xs:annotation>
					<xs:documentation>Description of this component.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="id" type="xs:long">
				<xs:annotation>
					<xs:documentation>Unique identifier of this component.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="implementationType" type="xs:string">
				<xs:annotation>
					<xs:documentation>Implementation type of this component (for example, SpringIT).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="1" name="name" type="xs:string">
				<xs:annotation>
					<xs:documentation>Name of this component (for example BRM, DE or EC).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="parentId" type="xs:long">
				<xs:annotation>
					<xs:documentation>ParentId of this component (as defined by the CLMD file - for example, BRM has an implicit parentId of Common).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="revision" type="xs:string">
				<xs:annotation>
					<xs:documentation>Plug-in revision number of this component.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="1" name="version" type="xs:string">
				<xs:annotation>
					<xs:documentation>Version number of this component.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="QueryInfo" type="QueryInfo"/>
	<xs:complexType name="QueryInfo">
		<xs:annotation>
			<xs:documentation>Details of a query, including its QueryIdentifier.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="1" name="query" type="Query"/>
			<xs:element maxOccurs="1" minOccurs="1" name="identifier" type="QueryIdentifier"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="ConfigurationType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="HIBERNATE_MAPPING"/>
			<xs:enumeration value="RULES_CONFIGURATION"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="ConfigurationValue" type="ConfigurationValue"/>
	<xs:complexType name="ConfigurationValue">
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="1" name="name" type="xs:string"/>
			<xs:element maxOccurs="1" minOccurs="1" name="value" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="QueryTarget">
		<xs:restriction base="xs:string">
			<xs:enumeration value="AUDIT"/>
			<xs:enumeration value="PROCESS_METRICS"/>
			<xs:enumeration value="PROCESS_STATS"/>
			<xs:enumeration value="WORKITEM_STATS"/>
			<xs:enumeration value="USER_ACTIVITY"/>
			<xs:enumeration value="REGISTERED_QUERIES"/>
			<xs:enumeration value="REGISTERED_COMPONENTS"/>
			<xs:enumeration value="REGISTERED_ATTRIBUTES"/>
			<xs:enumeration value="PROCESS_ACTIVITY"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="EventBatch" type="EventBatch"/>
	<xs:complexType name="EventBatch">
		<xs:annotation>
			<xs:documentation>A batch of events for submission to Event Collector</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="1" name="event" type="Event"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="PurgeStatus" type="PurgeStatus"/>
	<xs:complexType name="PurgeStatus">
		<xs:annotation>
			<xs:documentation>The status of a purge operation</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="1" name="statusMessage" type="xs:string">
				<xs:annotation>
					<xs:documentation>A message indicating further information on the last purge operation</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="1" name="status" type="PurgeStatusType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="PurgeStatusType">
		<xs:annotation>
			<xs:documentation>An enumerated status indicator for the last purge opertation</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="PURGE_IN_PROGRESS">
				<xs:annotation>
					<xs:documentation>A purge action is currently being executed</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PURGE_COMPLETED">
				<xs:annotation>
					<xs:documentation>The last purge operation completed successfully</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PURGE_STOPPED">
				<xs:annotation>
					<xs:documentation>The last purge operation was stopped manually</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PURGE_FAILED">
				<xs:annotation>
					<xs:documentation>The last purge operation failed.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="SortElement" type="SortElement"/>
	<xs:complexType name="SortElement">
		<xs:annotation>
			<xs:documentation>Definition of a specific SortElement (used to build up the SortOrder on a query).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="1" name="attribute" type="xs:string">
				<xs:annotation>
					<xs:documentation>Name of the attribute to sort on.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="1" name="type" type="SortType">
				<xs:annotation>
					<xs:documentation>Type (direction) the sort should take.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="AdvancedQueryOption" type="AdvancedQueryOption"/>
	<xs:complexType name="AdvancedQueryOption">
		<xs:annotation>
			<xs:documentation>** PRIVATE API - Reserved for internal use **</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="1" name="optionName" type="xs:string"/>
			<xs:element maxOccurs="1" minOccurs="1" name="optionValue" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="MeasureType">
		<xs:annotation>
			<xs:documentation>Enumerated value defining the type of measure to return. 

** PRIVATE API - Reserved for internal use **.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="PROCESS_TEMPLATE_MEASURE"/>
			<xs:enumeration value="PROCESS_DURATION_MEASURE"/>
			<xs:enumeration value="WORK_ITEM_FOR_RESOURCE_MEASURE"/>
			<xs:enumeration value="WORK_ITEM_FOR_TEMPLATE_MEASURE"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="MeasureGranularity">
		<xs:annotation>
			<xs:documentation>Enumerated value defining the unit of time represented by a MeasurePeriod that is either required (in a request) or returned (in a response).

One of: HOUR, DAY, MONTH, YEAR or WEEK.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="HOUR">
				<xs:annotation>
					<xs:documentation>Hourly granularity</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DAY">
				<xs:annotation>
					<xs:documentation>Daily granularity</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MONTH">
				<xs:annotation>
					<xs:documentation>Monthly granularity</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="YEAR">
				<xs:annotation>
					<xs:documentation>Yearly granularity</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="WEEK">
				<xs:annotation>
					<xs:documentation>Weekly granularity</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="MeasureId" type="MeasureId"/>
	<xs:complexType abstract="true" name="MeasureId">
		<xs:annotation>
			<xs:documentation>Basic MeasureId. The id used by a measure depends on the type of measure being referred to. For example, in the case of ProcessTemplate measures the id is defined by the name, version and module of the process template.

In all cases, the MeasureId uniquely identifies a specific entity in the EventCollectorMeasuresService.  </xs:documentation>
		</xs:annotation>
		<xs:sequence/>
	</xs:complexType>
	<xs:element name="MeasureOptions" type="MeasureOptions"/>
	<xs:complexType name="MeasureOptions">
		<xs:annotation>
			<xs:documentation>Options to apply to this measure request.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="0" name="consolidation" type="ConsolidationType">
				<xs:annotation>
					<xs:documentation>Enumerated value defining the consolidation mode to use for this measure request. Either:

- NO_CONSOLIDATION: One measure is returned for each id passed in by the request. Each measure returned will specify the id to which it refers (see the non-abstract extensions of Measure for details).

- CONSOLIDATE: A single measure is returned, containing the consolidated data for all the ids passed in by the request.

- BOTH: One measure is returned for each id passed in by the request. An additional measure is also returned, containing the consolidated data for all the ids passed in by the request. (The isConsolidation attribute can be used to recognize which entry contains the consolidated data.)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="advancedOption" type="AdvancedMeasureOption"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="MeasureDuration" type="MeasureDuration"/>
	<xs:complexType name="MeasureDuration">
		<xs:annotation>
			<xs:documentation>A specific duration within a MeasurePeriod. This is used:

- in a request, to provide the required start date, end date and granularity. 

- in a response, to describe the time a MeasurePeriod refers to.  

See MeasurePeriod for more details.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="0" name="endDate" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>End date for this MeasureDuration.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="startDate" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>Start date for this MeasureDuration.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="granularity" type="MeasureGranularity">
				<xs:annotation>
					<xs:documentation>Enumerated value defining the unit of time represented by a MeasurePeriod that is either required (in a request) or returned (in a response).

One of: HOUR, DAY, MONTH, YEAR or WEEK.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Measure" type="Measure"/>
	<xs:complexType abstract="true" name="Measure">
		<xs:annotation>
			<xs:documentation>Base entity returned when requesting a measure.  

When making a request, an array of identifiers can be passed in. For example, an array of ProcessTemplateIds can be supplied when calling the requestProcessTemplateMeasure operation.

The number of measures returned depends on the consolidation mode selected in the MeasureOptions.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="1" name="index" type="xs:int">
				<xs:annotation>
					<xs:documentation>Zero-based numeric index for each measure returned. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="1" name="isConsolidatedMeasure" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Boolean value defining whether the measure contains:

- data for a single id.

- consolidated data for all the ids passed in by the request.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="MeasureEntry" type="MeasureEntry"/>
	<xs:complexType abstract="true" name="MeasureEntry">
		<xs:annotation>
			<xs:documentation>Generic MeasureEntry. Within a MeasurePeriod an entry will be returned for each entry type available. 

For example, when using a ProcessTemplate measure, one entry will be returned for each of: STARTED, COMPLETED, SUSPENDED and CANCELLED.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="1" name="index" type="xs:int">
				<xs:annotation>
					<xs:documentation>Zero-based numeric index for each entry returned. </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ProcessTemplateMeasure" type="ProcessTemplateMeasure"/>
	<xs:complexType name="ProcessTemplateMeasure">
		<xs:annotation>
			<xs:documentation>Entity returned by a requestProcessTemplateMeasureResponse message.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="Measure">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="id" type="ProcessTemplateId"/>
					<xs:element maxOccurs="unbounded" minOccurs="1" name="period" type="ProcessTemplateMeasurePeriod"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="MeasurePeriod" type="MeasurePeriod"/>
	<xs:complexType abstract="true" name="MeasurePeriod">
		<xs:annotation>
			<xs:documentation>Definition of a specific time period used by a measure.

When requesting a measure, a startDate, endDate and granularity value (HOUR, DAY, MONTH, YEAR, WEEK) must be specified. A MeasurePeriod will then be returned for each "unit" defined by this time period. 

For example if start and end dates defining 1 day of time are specified, with a granularity of HOUR, 24 MeasurePeriods will be returned.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="1" name="index" type="xs:int">
				<xs:annotation>
					<xs:documentation>Zero-based index for each measure period. The index will provide chronological ordering of the measures.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="1" name="duration" type="MeasureDuration"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="WorkItemMeasure" type="WorkItemMeasure"/>
	<xs:complexType name="WorkItemMeasure">
		<xs:annotation>
			<xs:documentation>Entity returned by a requestWorkItemPerformanceForTemplateResponse or requestWorkItemPerformanceForResourceResponse message.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="Measure">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="id" type="MeasureId"/>
					<xs:element maxOccurs="unbounded" minOccurs="1" name="period" type="WorkItemMeasurePeriod"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ProcessTemplateId" type="ProcessTemplateId"/>
	<xs:complexType name="ProcessTemplateId">
		<xs:annotation>
			<xs:documentation>Id of a valid process template.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="MeasureId">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="moduleName" type="xs:string">
						<xs:annotation>
							<xs:documentation>(Optional) ModuleName of this process template.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="1" name="processTemplateName" type="xs:string">
						<xs:annotation>
							<xs:documentation>Name of this process template.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="processTemplateVersion" type="xs:string">
						<xs:annotation>
							<xs:documentation>(Optional) Version number of this process template.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ResourceId" type="ResourceId"/>
	<xs:complexType name="ResourceId">
		<xs:annotation>
			<xs:documentation>ResourceId implementation of the MeasureId. </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="MeasureId">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="resourceId" type="xs:string">
						<xs:annotation>
							<xs:documentation>Unique ID of a valid resource to use as the identifier for this request.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="IntMeasure" type="IntMeasure"/>
	<xs:complexType abstract="true" name="IntMeasure">
		<xs:annotation>
			<xs:documentation>Specific type of MeasureEntry that returns an integer value for each entry.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="MeasureEntry">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="value" type="xs:int"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ProcessTemplateMeasureEntry" type="ProcessTemplateMeasureEntry"/>
	<xs:complexType name="ProcessTemplateMeasureEntry">
		<xs:annotation>
			<xs:documentation>Measure entry for the ProcessTemplateMeasure type.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="IntMeasure">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="type" type="ProcessTemplateStatusType">
						<xs:annotation>
							<xs:documentation>Enumerated value defining the state of a process instance. One of: STARTED, COMPLETED, SUSPENDED or CANCELLED.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="ProcessTemplateStatusType">
		<xs:annotation>
			<xs:documentation>Enumerated value defining the state of a process instance. One of: STARTED, COMPLETED, SUSPENDED, HALTED, CANCELLED or FAILED.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="STARTED">
				<xs:annotation>
					<xs:documentation>Process started status</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="COMPLETED">
				<xs:annotation>
					<xs:documentation>Process completed status</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SUSPENDED">
				<xs:annotation>
					<xs:documentation>Process suspended status</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="HALTED">
				<xs:annotation>
					<xs:documentation>Process halted status</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CANCELLED">
				<xs:annotation>
					<xs:documentation>Process cancelled status</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FAILED">
				<xs:annotation>
					<xs:documentation>Process failed status</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="WorkItemMeasureEntry" type="WorkItemMeasureEntry"/>
	<xs:complexType name="WorkItemMeasureEntry">
		<xs:annotation>
			<xs:documentation>Measure entry for the WorkItemMeasure type.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="IntMeasure">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="type" type="WorkItemStatusType">
						<xs:annotation>
							<xs:documentation>Enumerated value defining the state of a work item. One of: OFFERED, ALLOCATED, PENDED, COMPLETED, SUSPENDED or CANCELLED.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="WorkItemStatusType">
		<xs:annotation>
			<xs:documentation>Enumerated value defining the state of a work item. One of: OFFERED, ALLOCATED, PENDED, COMPLETED, SUSPENDED, CANCELLED or OPENED.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="OFFERED">
				<xs:annotation>
					<xs:documentation>Work Item Offered State</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ALLOCATED">
				<xs:annotation>
					<xs:documentation>Work Item Allocated State</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PENDED">
				<xs:annotation>
					<xs:documentation>Work Item Pended State</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="COMPLETED">
				<xs:annotation>
					<xs:documentation>Work Item Completed State</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SUSPENDED">
				<xs:annotation>
					<xs:documentation>Work Item Suspended State</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CANCELLED">
				<xs:annotation>
					<xs:documentation>Work Item Cancelled State</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="OPENED">
				<xs:annotation>
					<xs:documentation>Work Item Opened State</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="AverageMeasure" type="AverageMeasure"/>
	<xs:complexType abstract="true" name="AverageMeasure">
		<xs:annotation>
			<xs:documentation>Specific type of MeasureEntry that returns an average value for each entry.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="MeasureEntry">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="value" type="xs:long"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ProcessDurationMeasureEntry" type="ProcessDurationMeasureEntry"/>
	<xs:complexType name="ProcessDurationMeasureEntry">
		<xs:annotation>
			<xs:documentation>Measure entry for the ProcessDurationMeasure type.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="LongMeasure">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="type" type="AveragesMeasureType">
						<xs:annotation>
							<xs:documentation>Enumerated value defining the type of an AverageMeasure. One of the following:

- PROCESS_TOTAL: Total number of instances of this process template started during this ProcessDurationMeasurePeriod.

- PROCESS_TOTAL_TIME: Total time that instances of this process template were active during this ProcessDurationMeasurePeriod.

- PROCESS_AVERAGE_TIME: Average time that an instance of this process template was active during this ProcessDurationMeasurePeriod.

- WORKITEM_TOTAL: Total number of work items generated by this process template that were active during this ProcessDurationMeasurePeriod.

- WORKITEM_ACTIVE_AVERAGE_TIME: Average time that a work item generated by this process template was active during this ProcessDurationMeasurePeriod. A work item is defined as being active between the time of the event when it first entered the OFFERED state and the time of the event that it entered the COMPLETED state, disregarding any intermediate states.

- WORKITEM_ACTIVE_TOTAL_TIME: Total time that work items generated by this process template were active during this ProcessDurationMeasurePeriod. A work item is defined as being active between the time of the event when it first entered the OFFERED state and the time of the event that it entered the COMPLETED state, disregarding any intermediate states.

- WORKITEM_WAIT_TOTAL_TIME: Total time that work items generated by this process template were waiting during this ProcessDurationMeasurePeriod. A work item is defined as waiting between the time of the event when it first entered the OFFERED state and the time of the event when it first entered the OPENED state.

- WORKITEM_WAIT_AVERAGE_TIME: Average time that a work item generated by this process template was waiting during this ProcessDurationMeasurePeriod. A work item is defined as waiting between the time of the event when it first entered the OFFERED state and the time of the event when it first entered the OPENED state.

- WORKITEM_ACTION_TOTAL_TIME: Total time that work items generated by this process template were being actioned during this ProcessDurationMeasurePeriod. A work item is defined as being actioned between the time of the event when it first entered the OPENED state and the time of the event that it entered the COMPLETED state - that is, when the user submitted the form.

- WORKITEM_ACTION_AVERAGE_TIME: Average time that a work item generated by this process template during this ProcessDurationMeasurePeriod. A work item is defined as being actioned between the time of the event when it first entered the OPENED state and the time of the event that it entered the COMPLETED state - that is, when the user submitted the form.

- WORKITEM_WORKINGTIME_TOTAL_TIME: Total time that users spent processing work items generated by this process template during this ProcessDurationMeasurePeriod. A work item is defined as being worked on between the accumulated time between each event when it entered the OPENED state and the time of the paired event when it entered a PENDED, SUSPENDED, CANCELLED or COMPLETED state. 

- WORKITEM_WORKINGTIME_AVERAGE_TIME: Average time that a work item generated by this process template was worked on by users during this ProcessDurationMeasurePeriod. A work item is defined as being worked on between the accumulated time between each event when it entered the OPENED state and the time of the paired event when it entered a PENDED, SUSPENDED, CANCELLED or COMPLETED state. </xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="AdvancedMeasureOption" type="AdvancedMeasureOption"/>
	<xs:complexType name="AdvancedMeasureOption">
		<xs:annotation>
			<xs:documentation>** PRIVATE API - Reserved for internal use **</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="1" name="optionName" type="xs:string"/>
			<xs:element maxOccurs="1" minOccurs="1" name="optionValue" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="ConsolidationType">
		<xs:annotation>
			<xs:documentation>Enumerated value defining the consolidation modes available for the measure request. One of: NO_CONSOLIDATION, CONSOLIDATE or BOTH.

See MeasureOptions.consolidation for more information.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="NO_CONSOLIDATION"/>
			<xs:enumeration value="CONSOLIDATE"/>
			<xs:enumeration value="BOTH"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="BasicMeasureId" type="BasicMeasureId"/>
	<xs:complexType name="BasicMeasureId">
		<xs:annotation>
			<xs:documentation>** PRIVATE API - Reserved for internal use **</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="MeasureId">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="id" type="xs:string"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="BasicValueMeasure" type="BasicValueMeasure"/>
	<xs:complexType name="BasicValueMeasure">
		<xs:annotation>
			<xs:documentation>** PRIVATE API - Reserved for internal use **</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="IntMeasure">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="type" type="xs:string"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ProcessDurationMeasure" type="ProcessDurationMeasure"/>
	<xs:complexType name="ProcessDurationMeasure">
		<xs:annotation>
			<xs:documentation>Entity returned by a requestProcessDurationMeasureResponse message.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="Measure">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="id" type="ProcessTemplateId"/>
					<xs:element maxOccurs="unbounded" minOccurs="1" name="period" type="ProcessDurationMeasurePeriod"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="BasicMeasure" type="BasicMeasure"/>
	<xs:complexType name="BasicMeasure">
		<xs:annotation>
			<xs:documentation>** PRIVATE API - Reserved for internal use **</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="Measure">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="id" type="BasicMeasureId"/>
					<xs:element maxOccurs="unbounded" minOccurs="1" name="period" type="BasicMeasurePeriod"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ProcessTemplateMeasurePeriod" type="ProcessTemplateMeasurePeriod"/>
	<xs:complexType name="ProcessTemplateMeasurePeriod">
		<xs:annotation>
			<xs:documentation>MeasurePeriod for ProcessTemplateMeasure objects.  See MeasurePeriod for more information.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="MeasurePeriod">
				<xs:sequence>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="ProcessTemplateMeasureEntry"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="WorkItemMeasurePeriod" type="WorkItemMeasurePeriod"/>
	<xs:complexType name="WorkItemMeasurePeriod">
		<xs:annotation>
			<xs:documentation>MeasurePeriod for WorkItemMeasure objects. See MeasurePeriod for more information</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="MeasurePeriod">
				<xs:sequence>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="WorkItemMeasureEntry"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ProcessDurationMeasurePeriod" type="ProcessDurationMeasurePeriod"/>
	<xs:complexType name="ProcessDurationMeasurePeriod">
		<xs:annotation>
			<xs:documentation>MeasurePeriod for ProcessDurationMeasure objects.  See MeasurePeriod for more information.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="MeasurePeriod">
				<xs:sequence>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="ProcessDurationMeasureEntry"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="BasicMeasurePeriod" type="BasicMeasurePeriod"/>
	<xs:complexType name="BasicMeasurePeriod">
		<xs:annotation>
			<xs:documentation>** PRIVATE API - Reserved for internal use **</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="MeasurePeriod">
				<xs:sequence>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="BasicValueMeasure"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="ConfigurationEntry" type="ConfigurationEntry"/>
	<xs:complexType name="ConfigurationEntry">
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="1" name="name" type="xs:string"/>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="value" type="ConfigurationValue"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="AveragesMeasureType">
		<xs:annotation>
			<xs:documentation>Enumerated value defining the type of an AverageMeasure. One of the following:

- PROCESS_TOTAL: Total number of instances of this process template started during this ProcessDurationMeasurePeriod.

- PROCESS_TOTAL_TIME: Total time that instances of this process template were active during this ProcessDurationMeasurePeriod.

- PROCESS_AVERAGE_TIME: Average time that an instance of this process template was active during this ProcessDurationMeasurePeriod.

- WORKITEM_TOTAL: Total number of work items generated by this process template that were active during this ProcessDurationMeasurePeriod.

- WORKITEM_ACTIVE_AVERAGE_TIME: Average time that a work item generated by this process template was active during this ProcessDurationMeasurePeriod. A work item is defined as being active between the time of the event when it first entered the OFFERED state and the time of the event that it entered the COMPLETED state, disregarding any intermediate states.

- WORKITEM_ACTIVE_TOTAL_TIME: Total time that work items generated by this process template were active during this ProcessDurationMeasurePeriod. A work item is defined as being active between the time of the event when it first entered the OFFERED state and the time of the event that it entered the COMPLETED state, disregarding any intermediate states.

- WORKITEM_WAIT_TOTAL_TIME: Total time that work items generated by this process template were waiting during this ProcessDurationMeasurePeriod. A work item is defined as waiting between the time of the event when it first entered the OFFERED state and the time of the event when it first entered the OPENED state.

- WORKITEM_WAIT_AVERAGE_TIME: Average time that a work item generated by this process template was waiting during this ProcessDurationMeasurePeriod. A work item is defined as waiting between the time of the event when it first entered the OFFERED state and the time of the event when it first entered the OPENED state.

- WORKITEM_ACTION_TOTAL_TIME: Total time that work items generated by this process template were being actioned during this ProcessDurationMeasurePeriod. A work item is defined as being actioned between the time of the event when it first entered the OPENED state and the time of the event that it entered the COMPLETED state - that is, when the user submitted the form.

- WORKITEM_ACTION_AVERAGE_TIME: Average time that a work item generated by this process template during this ProcessDurationMeasurePeriod. A work item is defined as being actioned between the time of the event when it first entered the OPENED state and the time of the event that it entered the COMPLETED state - that is, when the user submitted the form.

- WORKITEM_WORKINGTIME_TOTAL_TIME: Total time that users spent processing work items generated by this process template during this ProcessDurationMeasurePeriod. A work item is defined as being worked on between the accumulated time between each event when it entered the OPENED state and the time of the paired event when it entered a PENDED, SUSPENDED, CANCELLED or COMPLETED state. 

- WORKITEM_WORKINGTIME_AVERAGE_TIME: Average time that a work item generated by this process template was worked on by users during this ProcessDurationMeasurePeriod. A work item is defined as being worked on between the accumulated time between each event when it entered the OPENED state and the time of the paired event when it entered a PENDED, SUSPENDED, CANCELLED or COMPLETED state. </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="PROCESS_TOTAL">
				<xs:annotation>
					<xs:documentation>Total number of processes started for this duration</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PROCESS_TOTAL_TIME"/>
			<xs:enumeration value="PROCESS_AVERAGE_TIME"/>
			<xs:enumeration value="WORKITEM_TOTAL"/>
			<xs:enumeration value="WORKITEM_ACTIVE_AVERAGE_TIME">
				<xs:annotation>
					<xs:documentation>User Task Instance Active Duration (Average)
All AMX BPM tasks will emit a READY and COMPLETE event. The time interval between the emission of these events will determine the Task Instance Active duration.
The Process Duration will be calculated when the task's COMPLETE audit event is received and written to the Audit trail for the process instance.
We interpret this as we need to calculate the time between 1st offer / allocate (firstOfferTime) and workItem completion (completionTime) disregarding any intermediate states.
			</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="WORKITEM_ACTIVE_TOTAL_TIME">
				<xs:annotation>
					<xs:documentation>User Task Instance Active Duration (Total)
All AMX BPM tasks will emit a READY and COMPLETE event. The time interval between the emission of these events will determine the Task Instance Active duration.
The Process Duration will be calculated when the task's COMPLETE audit event is received and written to the Audit trail for the process instance.
We interpret this as we need to calculate the time between 1st offer / allocate (firstOfferTime) and workItem completion (completionTime) disregarding any intermediate states.
			</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="WORKITEM_WAIT_TOTAL_TIME">
				<xs:annotation>
					<xs:documentation>User Task Instance Wait Duration (Total)
All AMX BPM tasks will emit a READY and OPEN event. The time interval between the emission of these events will determine the Task Instance Wait duration.
The Process Duration will be calculated when the task's (first) OPEN audit event is received and written to the Audit trail for the process instance.
We interpret this as we need to calculate the time between 1st Offer / Allocate (firstOfferTime)and 1st Open (firstOpenTime)</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="WORKITEM_WAIT_AVERAGE_TIME">
				<xs:annotation>
					<xs:documentation>User Task Instance Wait Duration (Average)
All AMX BPM tasks will emit a READY and OPEN event. The time interval between the emission of these events will determine the Task Instance Wait duration.
The Process Duration will be calculated when the task's (first) OPEN audit event is received and written to the Audit trail for the process instance.
We interpret this as we need to calculate the time between 1st Offer / Allocate (firstOfferTime)and 1st Open (firstOpenTime)</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="WORKITEM_ACTION_TOTAL_TIME">
				<xs:annotation>
					<xs:documentation>User Task Instance Action Duration (Total)
All AMX BPM tasks will emit an OPEN and COMPLETE event. The time interval between the emission of (the first OPEN of) these events will determine the Task Instance
Action duration. The Process Duration will be calculated when the task's COMPLETE audit event is received and written to the Audit trail for the process instance.
We interpret this as we need to calculate the time between 1st Open (firstOpenTime) and form submission (completionTime)</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="WORKITEM_ACTION_AVERAGE_TIME">
				<xs:annotation>
					<xs:documentation>User Task Instance Action Duration (Average)
All AMX BPM tasks will emit an OPEN and COMPLETE event. The time interval between the emission of (the first OPEN of) these events will determine the Task Instance
Action duration. The Process Duration will be calculated when the task's COMPLETE audit event is received and written to the Audit trail for the process instance.
We interpret this as we need to calculate the time between 1st Open (firstOpenTime) and form submission (completionTime)</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="WORKITEM_WORKINGTIME_TOTAL_TIME">
				<xs:annotation>
					<xs:documentation>User Task Instance Working Time Duration (Total)
All AMX BPM tasks will emit an OPEN and various user interaction end events, namely CLOSE, PEND, CANCEL and COMPLETE events.
The User Task Instance Working Time Duration will be incremented by the time interval between each OPEN and work item end event pairing,
each time one of these event pairings completes. Thus giving a total working time for a task instance, regardless of the number of times
it is opened/closed and by how many different users.
We interpret this as we need to calculate the cumulative time for between first and last (form submission) activities.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="WORKITEM_WORKINGTIME_AVERAGE_TIME">
				<xs:annotation>
					<xs:documentation>User Task Instance Working Time Duration (Average)
All AMX BPM tasks will emit an OPEN and various user interaction end events, namely CLOSE, PEND, CANCEL and COMPLETE events.
The User Task Instance Working Time Duration will be incremented by the time interval between each OPEN and work item end event pairing,
each time one of these event pairings completes. Thus giving a total working time for a task instance, regardless of the number of times
it is opened/closed and by how many different users.
We interpret this as we need to calculate the cumulative time for between first and last (form submission) activities.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="LongMeasure" type="LongMeasure"/>
	<xs:complexType name="LongMeasure">
		<xs:annotation>
			<xs:documentation>Specific type of MeasureEntry that returns a long value for each entry.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="MeasureEntry">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="value" type="xs:long"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="GenericResult" type="GenericResult"/>
	<xs:complexType name="GenericResult">
		<xs:annotation>
			<xs:documentation>Information returned by an executeGenericQueryResponse message.
The GenericResult object contains summary information for this query, as well as the entries returned by the query.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="1" name="endPosition" type="xs:int">
				<xs:annotation>
					<xs:documentation>Index of the last event returned by the query.

This will either correlate with either:

- the numberOfItems+startPosition properties specified in the QueryOptions for the query, or

- the end of the results returned by the query.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="1" name="startPosition" type="xs:int">
				<xs:annotation>
					<xs:documentation>Index of the first event returend by the query. 

This will correlate with the startPosition  specified in QueryOptions in the query request.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="1" name="totalItems" type="xs:long">
				<xs:annotation>
					<xs:documentation>Total number of items the query could have returned (if it had specified its startPosition as 0 and numberOfItems as -1).  

For performance reasons, 
totalItems is only returned if the getTotalItems flag was specified in QueryOptions in the query request.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="resultEntry" type="ResultEntry"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ResultEntry" type="ResultEntry"/>
	<xs:complexType name="ResultEntry">
		<xs:annotation>
			<xs:documentation>ResultEntry contains the id and ref for this entry, as well as the attributes set for this entry</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="0" name="id" type="xs:long">
				<xs:annotation>
					<xs:documentation>Unique id for this result entry</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="ref" type="xs:string">
				<xs:annotation>
					<xs:documentation>Reference used for this entry</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="attribute" type="BaseEntryAttribute"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="Target">
		<xs:annotation>
			<xs:documentation>Specifies the target table in the Event Collector database against which the query should be executed. One of:

- AUDIT: This is the default option if QueryTarget is not specified.

- PROCESS_METRICS: 

- PROCESS_STATS: 

- WORKITEM_STATS:  

- REGISTERED_QUERIES: 

- REGISTERED_COMPONENTS

- REGISTERED_ATTRIBUTES

- USER_ACTIVITY</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="AUDIT"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="BaseEntryAttribute" type="BaseEntryAttribute"/>
	<xs:complexType abstract="true" name="BaseEntryAttribute">
		<xs:annotation>
			<xs:documentation>Specific attribute that is set on an entry returned by a query.

This entity is abstract and provides the id and name (where requested/applicable) for the query. It is then extended by each specific type supported, which provides a hard-typed value for the attribute.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="1" name="attributeId" type="xs:long">
				<xs:annotation>
					<xs:documentation>Unique identifier for this attribute (where applicable, else -1).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="attributeName" type="xs:string">
				<xs:annotation>
					<xs:documentation>Name of this attribute. 

This value is not set if populateAttributeNames is set to false.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="1" name="type" type="AttributeType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="LongEntryAttribute" type="LongEntryAttribute"/>
	<xs:complexType name="LongEntryAttribute">
		<xs:annotation>
			<xs:documentation>A long-typed entry attribute</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="BaseEntryAttribute">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="value" type="xs:long"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="StringEntryAttribute" type="StringEntryAttribute"/>
	<xs:complexType name="StringEntryAttribute">
		<xs:annotation>
			<xs:documentation>String-typed entry attribute.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="BaseEntryAttribute">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="value" type="xs:string"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="IntegerEntryAttribute" type="IntegerEntryAttribute"/>
	<xs:complexType name="IntegerEntryAttribute">
		<xs:annotation>
			<xs:documentation>An integer-typed entry attribute</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="BaseEntryAttribute">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="value" type="xs:int"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="DateEntryAttribute" type="DateEntryAttribute"/>
	<xs:complexType name="DateEntryAttribute">
		<xs:annotation>
			<xs:documentation>A date-typed entry attribute.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="BaseEntryAttribute">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="value" type="xs:dateTime"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="BooleanEntryAttribute" type="BooleanEntryAttribute"/>
	<xs:complexType name="BooleanEntryAttribute">
		<xs:annotation>
			<xs:documentation>A boolean-typed entry attribute.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="BaseEntryAttribute">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="value" type="xs:boolean"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="DoubleEntryAttribute" type="DoubleEntryAttribute"/>
	<xs:complexType name="DoubleEntryAttribute">
		<xs:annotation>
			<xs:documentation>A double-typed entry attribute.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="BaseEntryAttribute">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="value" type="xs:double"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="PurgeOptions" type="PurgeOptions"/>
	<xs:complexType name="PurgeOptions">
		<xs:annotation>
			<xs:documentation>Provides options to control how a purge is carried out</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="0" name="batchSize" type="xs:int">
				<xs:annotation>
					<xs:documentation>(Optional) Number of process instances that should be deleted before the transaction is committed.

Default value: 100</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="runInBackground" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>(Optional) Boolean value specifying whether the purge runs in the background. If:
- True: The purge will run in the background and the operation returns immediately. This is the default value.
- False: The operation waits for the purge to complete before returning (subject to timeouts).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="threshold" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>(Optional) Date before which process instances must have been completed, cancelled or failed for them to be purged in this operation.

If this value is omitted, all completed, cancelled and failed instances will be deleted.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="advancedOption" type="AdvancedPurgeOption"/>
			<xs:element maxOccurs="1" minOccurs="0" name="processTemplates" type="ProcessTemplates"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ProcessTemplateNameIdentifier" type="ProcessTemplateNameIdentifier"/>
	<xs:complexType name="ProcessTemplateNameIdentifier">
		<xs:annotation>
			<xs:documentation>A Process Template identified by name, and optionally moduleName/version. Note: This option must uniquely identify a Process Template.  Name can be used alone provided there is only one template on the system with it.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="1" name="processTemplateName" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of this process template</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="moduleName" type="xs:string">
				<xs:annotation>
					<xs:documentation>(Optional) The module name for this Process Template.  If not specified there must be only one Process Template on the system with the given processTemplateName</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="version" type="xs:string">
				<xs:annotation>
					<xs:documentation>(Optional) The version of this Process Template.   If not specified there must be only one Process Template on the system with the given processTemplateName</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ProcessTemplateIdIdentifier" type="ProcessTemplateIdIdentifier"/>
	<xs:complexType name="ProcessTemplateIdIdentifier">
		<xs:annotation>
			<xs:documentation>A Process Template identified by the id associated with it.  </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="1" name="processTemplateId" type="xs:long">
				<xs:annotation>
					<xs:documentation>The Id for this Process Template</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ProcessTemplates" type="ProcessTemplates"/>
	<xs:complexType name="ProcessTemplates">
		<xs:sequence>
			<xs:choice maxOccurs="unbounded" minOccurs="0">
				<xs:element maxOccurs="1" minOccurs="1" name="processTemplateIdIdentifier" type="ProcessTemplateIdIdentifier"/>
				<xs:element maxOccurs="1" minOccurs="1" name="processTemplateNameIdentifier" type="ProcessTemplateNameIdentifier"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="BigDecimalEntryAttribute" type="BigDecimalEntryAttribute"/>
	<xs:complexType name="BigDecimalEntryAttribute">
		<xs:complexContent>
			<xs:extension base="BaseEntryAttribute">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="value" type="xs:decimal"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="AttributeDefinitions" type="AttributeDefinitions"/>
	<xs:complexType name="AttributeDefinitions">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="1" name="definition" type="AttributeDefinition"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ProcessTemplateIds" type="ProcessTemplateIds"/>
	<xs:complexType name="ProcessTemplateIds">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="1" name="id" type="ProcessTemplateId"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ProcessDurationMeasures" type="ProcessDurationMeasures"/>
	<xs:complexType name="ProcessDurationMeasures">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="measure" type="ProcessDurationMeasure"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="ProcessTemplateMeasures" type="ProcessTemplateMeasures"/>
	<xs:complexType name="ProcessTemplateMeasures">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="measure" type="ProcessTemplateMeasure"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="WorkItemMeasures" type="WorkItemMeasures"/>
	<xs:complexType name="WorkItemMeasures">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="measure" type="WorkItemMeasure"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Components" type="Components"/>
	<xs:complexType name="Components">
		<xs:sequence>
			<xs:element maxOccurs="unbounded" minOccurs="0" name="component" type="Component"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="QueryPayload" type="QueryPayload"/>
	<xs:complexType name="QueryPayload">
		<xs:sequence>
			<xs:element maxOccurs="1" minOccurs="1" name="query" type="Query"/>
			<xs:element maxOccurs="1" minOccurs="0" name="options" type="QueryOptions"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
