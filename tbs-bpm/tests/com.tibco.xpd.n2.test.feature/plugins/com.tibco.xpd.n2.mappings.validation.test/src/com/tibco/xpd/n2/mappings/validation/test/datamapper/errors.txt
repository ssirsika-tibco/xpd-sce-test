junit.framework.AssertionFailedError:   [ProcessDataMapper-Process:Like Mappings - platform:/resource/ProcessDataMapper/Process%20Packages/ProcessDataMapper.xpdl#//@package/@processes.0/@activities.7/@implementation/@taskScript/@script/@mixed.0]
-----------------------------------------------------------
Generated script does not match gold standard script...
Gold and Test File Line 2 Differ:
  Gold: if (LikeMappingPatient != null) {
  Test: 

Generated Script:
~~~~~~~~~~~~~~~~~~
// Like mapping from 'LikeMappingPatient' to 'LikeMappingVisitor'

// Create target 'LikeMappingVisitor' if it doesn't exist.
if (LikeMappingVisitor == null) {
    LikeMappingVisitor = com_example_bdp_Factory.createVisitor();
}

// Map from 'LikeMappingPatient.id' to 'LikeMappingVisitor.id'
LikeMappingVisitor.id = LikeMappingPatient.id;

// Map from 'LikeMappingPatient.name' to 'LikeMappingVisitor.name'
LikeMappingVisitor.name = LikeMappingPatient.name;

// Create target 'LikeMappingVisitor.address' if it doesn't exist.
if (LikeMappingVisitor.address == null) {
    LikeMappingVisitor.address = com_example_bdp_Factory.createVisitorAddress();
}

// Map from 'LikeMappingPatient.address.line1' to 'LikeMappingVisitor.address.line1'
LikeMappingVisitor.address.line1 = LikeMappingPatient.address.line1;

// Map from 'LikeMappingPatient.address.postcode' to 'LikeMappingVisitor.address.postcode'
LikeMappingVisitor.address.postcode = LikeMappingPatient.address.postcode;

// Like mapping from 'LikeMappingPatientArray' to 'LikeMappingVisitorArray'

// Overwrite list: LikeMappingVisitorArray
LikeMappingVisitorArray.clear();
for (var i1 = 0; i1 < LikeMappingPatientArray.size(); i1++) { 
    var sVi1 = LikeMappingPatientArray.get(i1);
    var tVi1 = com_example_bdp_Factory.createVisitor();

    // Map from 'LikeMappingPatientArray.id' to 'LikeMappingVisitorArray.id'
    tVi1.id = sVi1.id;

    // Map from 'LikeMappingPatientArray.name' to 'LikeMappingVisitorArray.name'
    tVi1.name = sVi1.name;

    // Create target 'LikeMappingVisitorArray.address' if it doesn't exist.
    if (tVi1.address == null) {
        tVi1.address = com_example_bdp_Factory.createVisitorAddress();
    }

    // Map from 'LikeMappingPatientArray.address.line1' to 'LikeMappingVisitorArray.address.line1'
    tVi1.address.line1 = sVi1.address.line1;

    // Map from 'LikeMappingPatientArray.address.postcode' to 'LikeMappingVisitorArray.address.postcode'
    tVi1.address.postcode = sVi1.address.postcode;
    
    LikeMappingVisitorArray.add(tVi1);
}

// Like mapping from 'MergeLikeMappingPatientArray' to 'MergeLikeMappingVisitorArray'

// Merge list content: MergeLikeMappingVisitorArray
for (var i2 = 0; i2 < MergeLikeMappingPatientArray.size(); i2++) { 
    var sVi2 = MergeLikeMappingPatientArray.get(i2);
    var tVi2;
    if (i2 < MergeLikeMappingVisitorArray.size()) {
        tVi2 = MergeLikeMappingVisitorArray.get(i2);
    } else {
        tVi2 = com_example_bdp_Factory.createVisitor();
    }

    // Map from 'MergeLikeMappingPatientArray.id' to 'MergeLikeMappingVisitorArray.id'
    tVi2.id = sVi2.id;

    // Map from 'MergeLikeMappingPatientArray.name' to 'MergeLikeMappingVisitorArray.name'
    tVi2.name = sVi2.name;

    // Create target 'MergeLikeMappingVisitorArray.address' if it doesn't exist.
    if (tVi2.address == null) {
        tVi2.address = com_example_bdp_Factory.createVisitorAddress();
    }

    // Map from 'MergeLikeMappingPatientArray.address.line1' to 'MergeLikeMappingVisitorArray.address.line1'
    tVi2.address.line1 = sVi2.address.line1;

    // Map from 'MergeLikeMappingPatientArray.address.postcode' to 'MergeLikeMappingVisitorArray.address.postcode'
    tVi2.address.postcode = sVi2.address.postcode;
    
    if (i2 >= MergeLikeMappingVisitorArray.size()) {
        MergeLikeMappingVisitorArray.add(tVi2);
    }
}



~~~~~~~~~~~~~~~~~~
Gold Script:
~~~~~~~~~~~~~~~~~~
// Like mapping from 'LikeMappingPatient' to 'LikeMappingVisitor'
if (LikeMappingPatient != null) {
    if (LikeMappingVisitor == null) {
        LikeMappingVisitor = com_example_bdp_Factory.createVisitor();
    }
    LikeMappingVisitor.id = LikeMappingPatient.id;
    LikeMappingVisitor.name = LikeMappingPatient.name;

    // Like mapping from 'LikeMappingPatient.address' to 'LikeMappingVisitor.address'
    if (LikeMappingPatient.address != null) {
        if (LikeMappingVisitor.address == null) {
            LikeMappingVisitor.address = com_example_bdp_Factory.createVisitorAddress();
        }
        LikeMappingVisitor.address.line1 = LikeMappingPatient.address.line1;
        LikeMappingVisitor.address.postcode = LikeMappingPatient.address.postcode;
    }
}

// Like mapping from 'LikeMappingPatientArray' to 'LikeMappingVisitorArray'

// Overwrite list: LikeMappingVisitorArray
LikeMappingVisitorArray.clear();
for (var i1 = 0; i1 < LikeMappingPatientArray.size(); i1++) { 
    var sVi1 = LikeMappingPatientArray.get(i1);
    var tVi1 = com_example_bdp_Factory.createVisitor();
    tVi1.id = sVi1.id;
    tVi1.name = sVi1.name;

    // Like mapping from 'LikeMappingPatientArray.address' to 'LikeMappingVisitorArray.address'
    if (sVi1.address != null) {
        if (tVi1.address == null) {
            tVi1.address = com_example_bdp_Factory.createVisitorAddress();
        }
        tVi1.address.line1 = sVi1.address.line1;
        tVi1.address.postcode = sVi1.address.postcode;
    }
    
    LikeMappingVisitorArray.add(tVi1);
}

// Like mapping from 'MergeLikeMappingPatientArray' to 'MergeLikeMappingVisitorArray'

// Merge list content: MergeLikeMappingVisitorArray
for (var i2 = 0; i2 < MergeLikeMappingPatientArray.size(); i2++) { 
    var sVi2 = MergeLikeMappingPatientArray.get(i2);
    var tVi2;
    if (i2 < MergeLikeMappingVisitorArray.size()) {
        tVi2 = MergeLikeMappingVisitorArray.get(i2);
    } else {
        tVi2 = com_example_bdp_Factory.createVisitor();
    }
    tVi2.id = sVi2.id;
    tVi2.name = sVi2.name;

    // Like mapping from 'MergeLikeMappingPatientArray.address' to 'MergeLikeMappingVisitorArray.address'
    if (sVi2.address != null) {
        if (tVi2.address == null) {
            tVi2.address = com_example_bdp_Factory.createVisitorAddress();
        }
        tVi2.address.line1 = sVi2.address.line1;
        tVi2.address.postcode = sVi2.address.postcode;
    }
    
    if (i2 >= MergeLikeMappingVisitorArray.size()) {
        MergeLikeMappingVisitorArray.add(tVi2);
    }
}


~~~~~~~~~~~~~~~~~~

  [ProcessDataMapper-Process:Direct Array Mapping Merge - platform:/resource/ProcessDataMapper/Process%20Packages/ProcessDataMapper.xpdl#//@package/@processes.0/@activities.11/@implementation/@taskScript/@script/@mixed.0]
-----------------------------------------------------------
Generated script does not match gold standard script...
Gold and Test File Line 3 Differ:
  Gold: // Merge list content: TopArrayField
  Test: // Overwrite list: TopArrayField

Generated Script:
~~~~~~~~~~~~~~~~~~
// Map from 'TopArrayParam' to 'TopArrayField'

// Overwrite list: TopArrayField
TopArrayField.clear();
for (var i1 = 0; i1 < TopArrayParam.size(); i1++) { 
    var sVi1 = TopArrayParam.get(i1);
    
    TopArrayField.add(sVi1);
}



~~~~~~~~~~~~~~~~~~
Gold Script:
~~~~~~~~~~~~~~~~~~
// Map from 'TopArrayParam' to 'TopArrayField'

// Merge list content: TopArrayField
for (var i1 = 0; i1 < TopArrayParam.size(); i1++) { 
    var sVi1 = TopArrayParam.get(i1);
    
    TopArrayField.add(sVi1);
}



~~~~~~~~~~~~~~~~~~

  [ProcessDataMapper-Process:Inflate Array Mapping Overwrite - platform:/resource/ProcessDataMapper/Process%20Packages/ProcessDataMapper.xpdl#//@package/@processes.0/@activities.12/@implementation/@taskScript/@script/@mixed.0]
-----------------------------------------------------------
Generated script does not match gold standard script...
Gold and Test File Line 2 Differ:
  Gold: // Overwrite list: TopArrayField
  Test: TopArrayField.clear();

Generated Script:
~~~~~~~~~~~~~~~~~~
// Overwrite list: TopArrayField
TopArrayField.clear();
for (var i1 = 0; i1 < PatientArray.size(); i1++) { 
    var sVi1 = PatientArray.get(i1);
    var tVi1 = com_example_bdp_Factory.createTop();

    // Map from 'PatientArray.id' to 'TopArrayField.topAttr'
    tVi1.topAttr = sVi1.id;

    // Create target 'TopArrayField.middleSingleInst' if it doesn't exist.
    if (tVi1.middleSingleInst == null) {
        tVi1.middleSingleInst = com_example_bdp_Factory.createMiddle();
    }

    // Map from 'PatientArray.name' to 'TopArrayField.middleSingleInst.middleAttr'
    tVi1.middleSingleInst.middleAttr = sVi1.name;

    // Create target 'TopArrayField.middleSingleInst.bottomSingleInst' if it doesn't exist.
    if (tVi1.middleSingleInst.bottomSingleInst == null) {
        tVi1.middleSingleInst.bottomSingleInst = com_example_bdp_Factory.createBottom();
    }

    // Map from 'PatientArray.address.line1' to 'TopArrayField.middleSingleInst.bottomSingleInst.bottomAttr'
    tVi1.middleSingleInst.bottomSingleInst.bottomAttr = sVi1.address.line1;
    
    TopArrayField.add(tVi1);
}



~~~~~~~~~~~~~~~~~~
Gold Script:
~~~~~~~~~~~~~~~~~~
// Overwrite list: TopArrayField
// Overwrite list: TopArrayField
TopArrayField.clear();
for(var i1 = 0; i1 < PatientArray.size(); i1++) { 
    var sVi1 = PatientArray.get(i1);
    var tVi1 = com_example_bdp_Factory.createTop();

    // Map from 'PatientArray.id' to 'TopArrayField.topAttr'
    tVi1.topAttr = sVi1.id;

    // Create target 'TopArrayField.middleSingleInst' if it doesn't exist.
    if (tVi1.middleSingleInst == null) {
        tVi1.middleSingleInst = com_example_bdp_Factory.createMiddle();
    }

    // Map from 'PatientArray.name' to 'TopArrayField.middleSingleInst.middleAttr'
    tVi1.middleSingleInst.middleAttr = sVi1.name;

    // Create target 'TopArrayField.middleSingleInst.bottomSingleInst' if it doesn't exist.
    if (tVi1.middleSingleInst.bottomSingleInst == null) {
        tVi1.middleSingleInst.bottomSingleInst = com_example_bdp_Factory.createBottom();
    }

    // Map from 'PatientArray.address.line1' to 'TopArrayField.middleSingleInst.bottomSingleInst.bottomAttr'
    tVi1.middleSingleInst.bottomSingleInst.bottomAttr = sVi1.address.line1;
    
    TopArrayField.add(tVi1);
}





~~~~~~~~~~~~~~~~~~


	at junit.framework.Assert.fail(Assert.java:47)
	at com.tibco.xpd.n2.mappings.validation.test.datamapper.AbstractProcessDataMapperScriptGenerationTest.testProcessDataMapperScriptGenerationTestsTest(AbstractProcessDataMapperScriptGenerationTest.java:80)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:243)
	at junit.framework.TestSuite.run(TestSuite.java:238)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:62)
	at org.eclipse.pde.internal.junit.runtime.PlatformUITestHarness$1.run(PlatformUITestHarness.java:47)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4140)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2701)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2665)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2499)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:679)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:668)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.pde.internal.junit.runtime.NonUIThreadTestApplication.runApp(NonUIThreadTestApplication.java:54)
	at org.eclipse.pde.internal.junit.runtime.UITestApplication.runApp(UITestApplication.java:41)
	at org.eclipse.pde.internal.junit.runtime.NonUIThreadTestApplication.start(NonUIThreadTestApplication.java:48)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)

