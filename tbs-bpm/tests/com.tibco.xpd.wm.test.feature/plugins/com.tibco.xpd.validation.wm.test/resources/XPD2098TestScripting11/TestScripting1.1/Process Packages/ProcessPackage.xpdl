<?xml version="1.0" encoding="UTF-8"?>
<xpdl2:Package xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:database="http://www.tibco.com/XPD/database1.0.0" xmlns:eaijava="http://www.tibco.com/XPD/EAIJava1.0.0" xmlns:email="http://www.tibco.com/XPD/email1.0.0" xmlns:iProcessExt="http://www.tibco.com/XPD/iProcessExt1.0.0" xmlns:orchestrator="http://www.tibco.com/XPD/orchestrator1.0.0" xmlns:order="http://www.tibco.com/XPD/order1.0.0" xmlns:simulation="http://www.tibco.com/xpd/Simulation1.0.1" xmlns:xpdExt="http://www.tibco.com/XPD/xpdExtension1.0.0" xmlns:xpdl2="http://www.wfmc.org/2008/XPDL2.1" xsi:schemaLocation="http://www.wfmc.org/2008/XPDL2.1 http://www.wfmc.org/standards/bpmnxpdl_31.xsd" Id="_Mj9uUGnAEeCp3sCuRmkvPQ" xpdExt:DisplayName="ProcessPackage" Name="ProcessPackage">
  <xpdl2:PackageHeader xpdExt:Language="en_GB">
    <xpdl2:XPDLVersion>2.1</xpdl2:XPDLVersion>
    <xpdl2:Vendor>TIBCO</xpdl2:Vendor>
    <xpdl2:Created>2011-04-18</xpdl2:Created>
    <xpdl2:Description></xpdl2:Description>
    <xpdl2:Documentation></xpdl2:Documentation>
    <xpdl2:CostUnit>GBP</xpdl2:CostUnit>
  </xpdl2:PackageHeader>
  <xpdl2:RedefinableHeader PublicationStatus="UNDER_REVISION">
    <xpdl2:Author>ktredget</xpdl2:Author>
    <xpdl2:Version>1.0.0.qualifier</xpdl2:Version>
  </xpdl2:RedefinableHeader>
  <xpdl2:Participants>
    <xpdl2:Participant Id="_3YgnwGnAEeCp3sCuRmkvPQ" xpdExt:DisplayName="AssignmentScript (API Activity EndPoint)" Name="ProcessPackage_AssignmentScript">
      <xpdl2:ParticipantType Type="SYSTEM"/>
      <xpdExt:ParticipantSharedResource>
        <xpdExt:WebService>
          <xpdExt:Inbound>
            <xpdExt:VirtualBinding Name="Virtualization"/>
            <xpdExt:SoapHttpBinding Name="SoapOverHttp" BindingStyle="RpcLiteral" SoapVersion="1.1" EndpointUrlPath="/ProcessPackage/AssignmentScript" HttpConnectorInstanceName="httpConnector"/>
          </xpdExt:Inbound>
        </xpdExt:WebService>
      </xpdExt:ParticipantSharedResource>
    </xpdl2:Participant>
  </xpdl2:Participants>
  <xpdl2:Pools>
    <xpdl2:Pool Id="_POW4AGnAEeCp3sCuRmkvPQ" xpdExt:DisplayName="Pool" Name="Pool" BoundaryVisible="true" Process="_Mj9uUWnAEeCp3sCuRmkvPQ">
      <xpdl2:Lanes>
        <xpdl2:Lane Id="_POW4AWnAEeCp3sCuRmkvPQ" xpdExt:DisplayName="Lane" Name="Lane">
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo Height="1317.0"/>
          </xpdl2:NodeGraphicsInfos>
        </xpdl2:Lane>
      </xpdl2:Lanes>
      <xpdl2:NodeGraphicsInfos>
        <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="223,179,0" IsVisible="true"/>
      </xpdl2:NodeGraphicsInfos>
    </xpdl2:Pool>
  </xpdl2:Pools>
  <xpdl2:WorkflowProcesses>
    <xpdl2:WorkflowProcess Id="_Mj9uUWnAEeCp3sCuRmkvPQ" xpdExt:ApiEndPointParticipant="_3YgnwGnAEeCp3sCuRmkvPQ" xpdExt:DisplayName="AssignmentScript" iProcessExt:MaxStepIndex="36" Name="AssignmentScript">
      <xpdl2:ProcessHeader>
        <xpdl2:Description></xpdl2:Description>
      </xpdl2:ProcessHeader>
      <xpdl2:FormalParameters>
        <xpdl2:FormalParameter Id="_okrAAGnAEeCp3sCuRmkvPQ" Name="value" IsArray="false" ReadOnly="false" Mode="IN" Required="true" xpdExt:DisplayName="value">
          <xpdl2:DataType>
            <xpdl2:BasicType Type="STRING">
              <xpdl2:Length>100</xpdl2:Length>
            </xpdl2:BasicType>
          </xpdl2:DataType>
        </xpdl2:FormalParameter>
        <xpdl2:FormalParameter Id="_qfoJcGnDEeCp3sCuRmkvPQ" Name="expectedValue" ReadOnly="false" Mode="IN" Required="true" xpdExt:DisplayName="expectedValue">
          <xpdl2:DataType>
            <xpdl2:BasicType Type="STRING">
              <xpdl2:Length>100</xpdl2:Length>
            </xpdl2:BasicType>
          </xpdl2:DataType>
        </xpdl2:FormalParameter>
        <xpdl2:FormalParameter Id="_qkgCYGnDEeCp3sCuRmkvPQ" Name="src" ReadOnly="false" Mode="IN" Required="true" xpdExt:DisplayName="src">
          <xpdl2:DataType>
            <xpdl2:BasicType Type="STRING">
              <xpdl2:Length>50</xpdl2:Length>
            </xpdl2:BasicType>
          </xpdl2:DataType>
        </xpdl2:FormalParameter>
        <xpdl2:FormalParameter Id="_qo1v0WnDEeCp3sCuRmkvPQ" Name="dst" ReadOnly="false" Mode="IN" Required="true" xpdExt:DisplayName="dst">
          <xpdl2:DataType>
            <xpdl2:BasicType Type="STRING">
              <xpdl2:Length>50</xpdl2:Length>
            </xpdl2:BasicType>
          </xpdl2:DataType>
        </xpdl2:FormalParameter>
        <xpdl2:FormalParameter Id="_qsvYYGnDEeCp3sCuRmkvPQ" Name="result" ReadOnly="false" Mode="OUT" Required="true" xpdExt:DisplayName="result">
          <xpdl2:DataType>
            <xpdl2:BasicType Type="STRING">
              <xpdl2:Length>1024</xpdl2:Length>
            </xpdl2:BasicType>
          </xpdl2:DataType>
        </xpdl2:FormalParameter>
        <xpdl2:FormalParameter Id="_qweo4GnDEeCp3sCuRmkvPQ" Name="actualValue" ReadOnly="false" Mode="OUT" Required="true" xpdExt:DisplayName="actualValue">
          <xpdl2:DataType>
            <xpdl2:BasicType Type="STRING">
              <xpdl2:Length>100</xpdl2:Length>
            </xpdl2:BasicType>
          </xpdl2:DataType>
        </xpdl2:FormalParameter>
        <xpdl2:FormalParameter Id="_q0-uYGnDEeCp3sCuRmkvPQ" Name="description" ReadOnly="false" Mode="IN" Required="true" xpdExt:DisplayName="description">
          <xpdl2:DataType>
            <xpdl2:BasicType Type="STRING">
              <xpdl2:Length>80</xpdl2:Length>
            </xpdl2:BasicType>
          </xpdl2:DataType>
        </xpdl2:FormalParameter>
        <xpdl2:FormalParameter Id="_q5QKYWnDEeCp3sCuRmkvPQ" Name="src2" ReadOnly="false" Mode="IN" Required="true" xpdExt:DisplayName="src2">
          <xpdl2:DataType>
            <xpdl2:BasicType Type="STRING">
              <xpdl2:Length>50</xpdl2:Length>
            </xpdl2:BasicType>
          </xpdl2:DataType>
        </xpdl2:FormalParameter>
        <xpdl2:FormalParameter Id="_q90hUWnDEeCp3sCuRmkvPQ" Name="value2" ReadOnly="false" Mode="IN" Required="true" xpdExt:DisplayName="value2">
          <xpdl2:DataType>
            <xpdl2:BasicType Type="STRING">
              <xpdl2:Length>100</xpdl2:Length>
            </xpdl2:BasicType>
          </xpdl2:DataType>
        </xpdl2:FormalParameter>
        <xpdl2:FormalParameter Id="_rPh8YGnDEeCp3sCuRmkvPQ" Name="operation" ReadOnly="false" Mode="IN" Required="true" xpdExt:DisplayName="operation">
          <xpdl2:DataType>
            <xpdl2:BasicType Type="STRING">
              <xpdl2:Length>50</xpdl2:Length>
            </xpdl2:BasicType>
          </xpdl2:DataType>
        </xpdl2:FormalParameter>
        <xpdl2:FormalParameter Id="_ypFj4WnDEeCp3sCuRmkvPQ" Name="flags" ReadOnly="false" Mode="IN" Required="true" xpdExt:DisplayName="flags">
          <xpdl2:DataType>
            <xpdl2:BasicType Type="STRING">
              <xpdl2:Length>50</xpdl2:Length>
            </xpdl2:BasicType>
          </xpdl2:DataType>
        </xpdl2:FormalParameter>
      </xpdl2:FormalParameters>
      <xpdl2:DataFields>
        <xpdl2:DataField Id="_DpNY1mnLEeCNEO-k721VLA" xpdExt:DisplayName="srcField" Name="srcField">
          <xpdl2:DataType>
            <xpdl2:ExternalReference location="TSCustomerModel1.1.bom" namespace="http://www.eclipse.org/uml2/2.1.0/UML" xref="_gZ5T4BJoEd-Jq5jVrkEdZQ"/>
          </xpdl2:DataType>
        </xpdl2:DataField>
        <xpdl2:DataField Id="_DpNY2GnLEeCNEO-k721VLA" xpdExt:DisplayName="opScript" Name="opScript">
          <xpdl2:DataType>
            <xpdl2:BasicType Type="STRING">
              <xpdl2:Length>50</xpdl2:Length>
            </xpdl2:BasicType>
          </xpdl2:DataType>
        </xpdl2:DataField>
        <xpdl2:DataField Id="_DpNY2WnLEeCNEO-k721VLA" xpdExt:DisplayName="opCode" Name="opCode">
          <xpdl2:DataType>
            <xpdl2:BasicType Type="STRING">
              <xpdl2:Length>50</xpdl2:Length>
            </xpdl2:BasicType>
          </xpdl2:DataType>
        </xpdl2:DataField>
        <xpdl2:DataField Id="_DpNY2mnLEeCNEO-k721VLA" xpdExt:DisplayName="dstField" Name="dstField">
          <xpdl2:DataType>
            <xpdl2:ExternalReference location="TSCustomerModel1.1.bom" namespace="http://www.eclipse.org/uml2/2.1.0/UML" xref="_gZ5T4BJoEd-Jq5jVrkEdZQ"/>
          </xpdl2:DataType>
        </xpdl2:DataField>
        <xpdl2:DataField Id="_DpNY3GnLEeCNEO-k721VLA" xpdExt:DisplayName="srcField2" Name="srcField2">
          <xpdl2:DataType>
            <xpdl2:ExternalReference location="TSCustomerModel1.1.bom" namespace="http://www.eclipse.org/uml2/2.1.0/UML" xref="_gZ5T4BJoEd-Jq5jVrkEdZQ"/>
          </xpdl2:DataType>
        </xpdl2:DataField>
        <xpdl2:DataField Id="_pMqhV2nNEeCvfK09LgLLfw" xpdExt:DisplayName="textArray" Name="textArray" IsArray="true" ReadOnly="false">
          <xpdl2:DataType>
            <xpdl2:BasicType Type="STRING">
              <xpdl2:Length>50</xpdl2:Length>
            </xpdl2:BasicType>
          </xpdl2:DataType>
          <xpdl2:InitialValue/>
        </xpdl2:DataField>
        <xpdl2:DataField Id="_pMqhXmnNEeCvfK09LgLLfw" xpdExt:DisplayName="text" Name="text">
          <xpdl2:DataType>
            <xpdl2:BasicType Type="STRING">
              <xpdl2:Length>50</xpdl2:Length>
            </xpdl2:BasicType>
          </xpdl2:DataType>
        </xpdl2:DataField>
        <xpdl2:DataField Id="_pMqhX2nNEeCvfK09LgLLfw" xpdExt:DisplayName="cust2" Name="cust2" ReadOnly="false">
          <xpdl2:DataType>
            <xpdl2:ExternalReference location="TSCustomerModel1.1.bom" namespace="http://www.eclipse.org/uml2/2.1.0/UML" xref="_PrRU7QTtEd-w7fKQoChn6A"/>
          </xpdl2:DataType>
          <xpdl2:InitialValue/>
        </xpdl2:DataField>
        <xpdl2:DataField Id="_pMqhZmnNEeCvfK09LgLLfw" xpdExt:DisplayName="cust1" Name="cust1" ReadOnly="false">
          <xpdl2:DataType>
            <xpdl2:ExternalReference location="TSCustomerModel1.1.bom" namespace="http://www.eclipse.org/uml2/2.1.0/UML" xref="_PrRU7QTtEd-w7fKQoChn6A"/>
          </xpdl2:DataType>
          <xpdl2:InitialValue/>
        </xpdl2:DataField>
        <xpdl2:DataField Id="_to8XkJ54EeC5wuChGREBNQ" xpdExt:DisplayName="CorrelationField" Name="CorrelationField" ReadOnly="true" Correlation="true">
          <xpdl2:DataType>
            <xpdl2:BasicType Type="STRING">
              <xpdl2:Length>50</xpdl2:Length>
            </xpdl2:BasicType>
          </xpdl2:DataType>
        </xpdl2:DataField>
      </xpdl2:DataFields>
      <xpdl2:Activities>
        <xpdl2:Activity Id="_POW4AmnAEeCp3sCuRmkvPQ" Name="TestScriptingWS" xpdExt:DisplayName="TestScriptingWS" iProcessExt:StepIndex="4">
          <xpdl2:Event>
            <xpdl2:StartEvent xpdExt:ImplementationType="WebService" Implementation="WebService" Trigger="Message">
              <xpdl2:TriggerResultMessage xpdExt:Generated="true" CatchThrow="CATCH">
                <xpdl2:Message Id="_3YYE4GnAEeCp3sCuRmkvPQ">
                  <xpdl2:DataMappings>
                    <xpdl2:DataMapping xpdExt:TargetPrimitiveProperty="true" Direction="OUT" Formal="value">
                      <xpdl2:Actual ScriptGrammar="JavaScript">value</xpdl2:Actual>
                    </xpdl2:DataMapping>
                    <xpdl2:DataMapping xpdExt:TargetPrimitiveProperty="true" Direction="OUT" Formal="expectedValue">
                      <xpdl2:Actual ScriptGrammar="JavaScript">expectedValue</xpdl2:Actual>
                    </xpdl2:DataMapping>
                    <xpdl2:DataMapping xpdExt:TargetPrimitiveProperty="true" Direction="OUT" Formal="src">
                      <xpdl2:Actual ScriptGrammar="JavaScript">src</xpdl2:Actual>
                    </xpdl2:DataMapping>
                    <xpdl2:DataMapping xpdExt:TargetPrimitiveProperty="true" Direction="OUT" Formal="dst">
                      <xpdl2:Actual ScriptGrammar="JavaScript">dst</xpdl2:Actual>
                    </xpdl2:DataMapping>
                    <xpdl2:DataMapping xpdExt:TargetPrimitiveProperty="true" Direction="OUT" Formal="description">
                      <xpdl2:Actual ScriptGrammar="JavaScript">description</xpdl2:Actual>
                    </xpdl2:DataMapping>
                    <xpdl2:DataMapping xpdExt:TargetPrimitiveProperty="true" Direction="OUT" Formal="src2">
                      <xpdl2:Actual ScriptGrammar="JavaScript">src2</xpdl2:Actual>
                    </xpdl2:DataMapping>
                    <xpdl2:DataMapping xpdExt:TargetPrimitiveProperty="true" Direction="OUT" Formal="value2">
                      <xpdl2:Actual ScriptGrammar="JavaScript">value2</xpdl2:Actual>
                    </xpdl2:DataMapping>
                    <xpdl2:DataMapping xpdExt:TargetPrimitiveProperty="true" Direction="OUT" Formal="operation">
                      <xpdl2:Actual ScriptGrammar="JavaScript">operation</xpdl2:Actual>
                    </xpdl2:DataMapping>
                    <xpdl2:DataMapping xpdExt:TargetPrimitiveProperty="true" Direction="OUT" Formal="flags">
                      <xpdl2:Actual ScriptGrammar="JavaScript">flags</xpdl2:Actual>
                    </xpdl2:DataMapping>
                  </xpdl2:DataMappings>
                </xpdl2:Message>
                <xpdl2:WebServiceOperation xpdExt:SecurityProfile="" xpdExt:Transport="http://schemas.xmlsoap.org/soap/http" xpdExt:Alias="_3YgnwGnAEeCp3sCuRmkvPQ" OperationName="">
                  <xpdl2:Service xpdExt:IsRemote="true" PortName="" ServiceName="">
                    <xpdl2:EndPoint EndPointType="WSDL">
                      <xpdl2:ExternalReference location="ProcessPackage.wsdl"/>
                    </xpdl2:EndPoint>
                  </xpdl2:Service>
                </xpdl2:WebServiceOperation>
                <xpdExt:PortTypeOperation PortTypeName="AssignmentScript" OperationName="TestScriptingWS">
                  <xpdExt:ExternalReference location="ProcessPackage.wsdl"/>
                </xpdExt:PortTypeOperation>
              </xpdl2:TriggerResultMessage>
            </xpdl2:StartEvent>
          </xpdl2:Event>
          <xpdl2:Performers>
            <xpdl2:Performer>_3YgnwGnAEeCp3sCuRmkvPQ</xpdl2:Performer>
          </xpdl2:Performers>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="47.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="88.0">
              <xpdl2:Coordinates XCoordinate="57.0" YCoordinate="69.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
          <xpdl2:Extensions/>
          <xpdExt:ActivityResourcePatterns>
            <xpdExt:AllocationStrategy xpdExt:Strategy="SYSTEM_DETERMINED"/>
          </xpdExt:ActivityResourcePatterns>
          <xpdExt:AssociatedCorrelationFields DisableImplicitAssociation="true"/>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_POW4A2nAEeCp3sCuRmkvPQ" Name="EndEvent" xpdExt:DisplayName="End Event" iProcessExt:StepIndex="5">
          <xpdl2:Event>
            <xpdl2:EndEvent xpdExt:ImplementationType="WebService" Implementation="WebService" Result="Message">
              <xpdl2:TriggerResultMessage xpdExt:ReplyToActivityId="_POW4AmnAEeCp3sCuRmkvPQ" CatchThrow="THROW">
                <xpdl2:Message Id="_4Vud8GnAEeCp3sCuRmkvPQ">
                  <xpdl2:DataMappings>
                    <xpdl2:DataMapping xpdExt:SourcePrimitiveProperty="true" Direction="IN" Formal="result">
                      <xpdl2:Actual ScriptGrammar="JavaScript">result</xpdl2:Actual>
                    </xpdl2:DataMapping>
                    <xpdl2:DataMapping xpdExt:SourcePrimitiveProperty="true" Direction="IN" Formal="actualValue">
                      <xpdl2:Actual ScriptGrammar="JavaScript">actualValue</xpdl2:Actual>
                    </xpdl2:DataMapping>
                  </xpdl2:DataMappings>
                </xpdl2:Message>
                <xpdl2:WebServiceOperation xpdExt:SecurityProfile="" xpdExt:Transport="http://schemas.xmlsoap.org/soap/http" xpdExt:Alias="_3YgnwGnAEeCp3sCuRmkvPQ" OperationName="">
                  <xpdl2:Service xpdExt:IsRemote="true" PortName="" ServiceName="">
                    <xpdl2:EndPoint EndPointType="WSDL">
                      <xpdl2:ExternalReference location="ProcessPackage.wsdl"/>
                    </xpdl2:EndPoint>
                  </xpdl2:Service>
                </xpdl2:WebServiceOperation>
                <xpdExt:PortTypeOperation PortTypeName="AssignmentScript" OperationName="TestScriptingWS">
                  <xpdExt:ExternalReference location="ProcessPackage.wsdl"/>
                </xpdExt:PortTypeOperation>
              </xpdl2:TriggerResultMessage>
            </xpdl2:EndEvent>
          </xpdl2:Event>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="47.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="54.0">
              <xpdl2:Coordinates XCoordinate="1022.0" YCoordinate="59.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
          <xpdl2:Extensions/>
          <xpdExt:ActivityResourcePatterns>
            <xpdExt:AllocationStrategy xpdExt:Strategy="SYSTEM_DETERMINED"/>
          </xpdExt:ActivityResourcePatterns>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_DpNY0GnLEeCNEO-k721VLA" Name="InitScript" xpdExt:Visibility="Private" xpdExt:DisplayName="Init Script" iProcessExt:StepIndex="6">
          <xpdl2:Implementation>
            <xpdl2:Task>
              <xpdl2:TaskScript>
                <xpdl2:Script ScriptGrammar="JavaScript">////////////////////////////////////////////////////////&#xD;
// Initialise the return result&#xD;
result = &quot;|INFO:Enter:Init Script (src = '&quot;+src+&quot;' type)&quot;;&#xD;
result += &quot;|INFO:&quot;+description;&#xD;
&#xD;
 &#xD;
//// Attempt 1 &#xD;
//opScript = operation.replace(&quot;:.*&quot;,&quot;&quot;);&#xD;
//opCode = operation.replace(&quot;.*:&quot;,&quot;&quot;);&#xD;
&#xD;
//// Attempt 2&#xD;
var ix = operation.indexOf(&quot;:&quot;);&#xD;
if (ix > 0) {&#xD;
	opScript = operation.substring(0,ix);&#xD;
	opCode = operation.substring(ix+1, operation.length);&#xD;
} else {&#xD;
	opScript = opCode = operation;&#xD;
}&#xD;
result += &quot;|INFO: operation:&quot;+operation+&quot; --> &quot;+opScript+&quot; / &quot;+opCode;&#xD;
&#xD;
////////////////////////////////////////////////////////&#xD;
// Initialise the source BOM object if required&#xD;
if (src.indexOf(&quot;null:&quot;) == 0) {&#xD;
	src = src.replace(&quot;null:&quot;,&quot;&quot;);&#xD;
} else {&#xD;
 	srcField = com_myorg_customermodel11_Factory.createAllTypesOptional();&#xD;
 	//srcField.bool = true;&#xD;
 	//srcField.integerSigned = 12345; &#xD;
	result += &quot;|INFO:srcField initialised:&quot;;&#xD;
	result += &quot;|INFO:      srcField = com_myorg_customermodel_Factory.createAllTypesOptional();&quot;;&#xD;
}&#xD;
&#xD;
////////////////////////////////////////////////////////&#xD;
// Process the src parameter&#xD;
if (opScript == &quot;list&quot;) {&#xD;
	// Skip setup of srcField&#xD;
} else if (src == &quot;attach&quot;) {&#xD;
	result += &quot;|ERROR: src='attach' not supported yet&quot;;&#xD;
} else if (src == &quot;bool&quot;) {&#xD;
	srcField.bool = ScriptUtil.createBoolean(value);&#xD;
	result += &quot;|INFO:srcField.bool = ScriptUtil.createBoolean(value);&quot;;&#xD;
	result += &quot;|INFO:      where value = &quot; + value;&#xD;
	result += &quot;|INFO:      and   srcField.bool = &quot;+srcField.bool;&#xD;
} else if (src == &quot;date&quot;) {&#xD;
	if (value != &quot;TODAY&quot;) {&#xD;
		srcField.date = DateTimeUtil.createDate(value);&#xD;
		result += &quot;|INFO:srcField.date = DateTimeUtil.createDate(value);&quot;;&#xD;
		result += &quot;|INFO:      where value = &quot; + value;&#xD;
	} else {&#xD;
		srcField.date = DateTimeUtil.createDate();&#xD;
		result += &quot;|INFO:srcField.date = DateTimeUtil.createDate();&quot;;&#xD;
	}	&#xD;
	result += &quot;|INFO:      and   srcField.date = &quot; + srcField.date;&#xD;
} else if (src == &quot;time&quot;) {&#xD;
	if (value != &quot;TODAY&quot;) {&#xD;
		srcField.time = DateTimeUtil.createTime(value);&#xD;
		result += &quot;|INFO:srcField.time = DateTimeUtil.createTime(value);&quot;;&#xD;
		result += &quot;|INFO:      where value = &quot; + value;&#xD;
	} else {&#xD;
		srcField.time = DateTimeUtil.createTime();&#xD;
		result += &quot;|INFO:srcField.time = DateTimeUtil.createTime();&quot;;&#xD;
	}&#xD;
	result += &quot;|INFO:      and   srcField.time = &quot; + srcField.time;&#xD;
} else if (src == &quot;datetime&quot;) {&#xD;
	if (value != &quot;TODAY&quot;) {&#xD;
		srcField.datetime = DateTimeUtil.createDatetime(value);&#xD;
		result += &quot;|INFO:srcField.datetime = DateTimeUtil.createDatetime(value);&quot;;&#xD;
		result += &quot;|INFO:      where value = &quot; + value;&#xD;
	} else {&#xD;
		srcField.datetime = DateTimeUtil.createDatetime();&#xD;
		result += &quot;|INFO:srcField.datetime = DateTimeUtil.createDatetime();&quot;;&#xD;
	}&#xD;
	result += &quot;|INFO:      and   srcField.datetime = &quot; + srcField.datetime;&#xD;
} else if (src == &quot;datetimetz&quot;) {&#xD;
	if (value != &quot;TODAY&quot;) {&#xD;
		srcField.datetimetz = DateTimeUtil.createDatetimetz(value);&#xD;
		result += &quot;|INFO:srcField.datetimetz = DateTimeUtil.createDatetimetz(value);&quot;;&#xD;
		result += &quot;|INFO:      where value = &quot; + value;&#xD;
	} else {&#xD;
		srcField.datetimetz = DateTimeUtil.createDatetimetz();&#xD;
		result += &quot;|INFO:srcField.datetimetz = DateTimeUtil.createDatetimetz();&quot;;&#xD;
	}&#xD;
	result += &quot;|INFO:      now   srcField.datetimetz = &quot; + srcField.datetimetz;&#xD;
} else if (src == &quot;decimalFloat&quot;) {&#xD;
	srcField.decimalFloat = Number(value);&#xD;
	result += &quot;|INFO:srcField.decimalFloat = Number(value);&quot;;&#xD;
	result += &quot;|INFO:      where value = &quot; + value;&#xD;
	result += &quot;|INFO:      now   srcField.decimalFloat = &quot; + srcField.decimalFloat;&#xD;
} else if (src == &quot;decimalFixed&quot;) {&#xD;
	srcField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(value);&#xD;
	result += &quot;|INFO:srcField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(value);&quot;;&#xD;
	result += &quot;|INFO:      where value = &quot; + value;&#xD;
	result += &quot;|INFO:      now   srcField.decimalFixed8Dot4.toString() = &quot; + srcField.decimalFixed8Dot4.toString();&#xD;
} else if (src == &quot;decimalFixedBig&quot;) {&#xD;
	srcField.decimalFixed80dot70 = ScriptUtil.createBigDecimal(value);&#xD;
	result += &quot;|INFO:srcField.decimalFixed80dot70 = ScriptUtil.createBigDecimal(value);&quot;;&#xD;
	result += &quot;|INFO:      where value = &quot; + value;&#xD;
	result += &quot;|INFO:      now   srcField.decimalFixed80dot70.toString() = &quot; + srcField.decimalFixed80dot70.toString();&#xD;
} else if (src == &quot;intSigned&quot;) {&#xD;
	srcField.integerSigned = Number(value);&#xD;
	result += &quot;|INFO:srcField.integerSigned = Number(value);&quot;;&#xD;
	result += &quot;|INFO:      where value = &quot; + value;&#xD;
	result += &quot;|INFO:      now   srcField.integerSigned = &quot; + srcField.integerSigned;&#xD;
} else if (src == &quot;intFixed&quot;) {&#xD;
	srcField.integerFixed5 = ScriptUtil.createBigInteger(value);&#xD;
	result += &quot;|INFO:srcField.integerFixed5 = ScriptUtil.createBigInteger(value);&quot;;&#xD;
	result += &quot;|INFO:      where value = &quot; + value;&#xD;
	result += &quot;|INFO:      now   srcField.integerFixed5.toString() = &quot; + srcField.integerFixed5.toString();&#xD;
} else if (src == &quot;text&quot;) {&#xD;
	srcField.text20 = value;&#xD;
	result += &quot;|INFO:srcField.text20 = value;&quot;;&#xD;
	result += &quot;|INFO:      where value = &quot; + value;&#xD;
	result += &quot;|INFO:      now   srcField.text20 = &quot; + srcField.text20;&#xD;
} else if (src == &quot;duration&quot;) {&#xD;
	srcField.duration = DateTimeUtil.createDuration(value);&#xD;
	result += &quot;|INFO:srcField.duration = DateTimeUtil.createDuration(value);&quot;;&#xD;
	result += &quot;|INFO:      where value = &quot; + value;&#xD;
	result += &quot;|INFO:      now   srcField.duration = &quot; + srcField.duration;&#xD;
} else if (src == &quot;id&quot;) {&#xD;
	srcField.id = value;&#xD;
	result += &quot;|INFO:srcField.id = value;&quot;;&#xD;
	result += &quot;|INFO:      where value = &quot; + value;&#xD;
	result += &quot;|INFO:      now   srcField.id = &quot; + srcField.id;&#xD;
} else if (src == &quot;uri&quot;) {&#xD;
	srcField.uri = value;&#xD;
	result += &quot;|INFO:srcField.uri = value;&quot;;&#xD;
	result += &quot;|INFO:      where value = &quot; + value;&#xD;
	result += &quot;|INFO:      now   srcField.uri = &quot; + srcField.uri;&#xD;
} else if (src == &quot;-&quot;) {&#xD;
	// No input parameter&#xD;
} else if (src == &quot;boolList&quot;) {&#xD;
	var val = value;&#xD;
	var count = 0;&#xD;
	var nxt     = &quot;&quot;;&#xD;
	while(val != &quot;&quot;)&#xD;
	{&#xD;
		var ix = val.indexOf(&quot;|&quot;);&#xD;
		if (ix > 0) {&#xD;
			nxt = val.substring(0,ix);&#xD;
			val = val.substring(ix+1,val.length);&#xD;
		}&#xD;
		else {&#xD;
			nxt = val;&#xD;
			val = &quot;&quot;;&#xD;
		}&#xD;
		srcField.boolList.add(ScriptUtil.createBoolean(nxt));&#xD;
		count++;&#xD;
	}&#xD;
	result += &quot;|INFO:srcField.boolList.add(value);&quot;;&#xD;
	result += &quot;|INFO:      where value = &quot; + value + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
} else if (src == &quot;dateList&quot;) {&#xD;
	var val = value;&#xD;
	var count = 0;&#xD;
	var nxt     = &quot;&quot;;&#xD;
	while(val != &quot;&quot;)&#xD;
	{&#xD;
		var ix = val.indexOf(&quot;|&quot;);&#xD;
		if (ix > 0) {&#xD;
			nxt = val.substring(0,ix);&#xD;
			val = val.substring(ix+1,val.length);&#xD;
		}&#xD;
		else {&#xD;
			nxt = val;&#xD;
			val = &quot;&quot;;&#xD;
		}&#xD;
		srcField.dateList.add(DateTimeUtil.createDate(nxt));&#xD;
		count++;&#xD;
	}&#xD;
	result += &quot;|INFO:srcField.dateList.add(DateTimeUtil.createDate(value));&quot;;&#xD;
	result += &quot;|INFO:      where value = &quot; + value + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
} else if (src == &quot;timeList&quot;) {&#xD;
	var val = value;&#xD;
	var count = 0;&#xD;
	var nxt     = &quot;&quot;;&#xD;
	while(val != &quot;&quot;)&#xD;
	{&#xD;
		var ix = val.indexOf(&quot;|&quot;);&#xD;
		if (ix > 0) {&#xD;
			nxt = val.substring(0,ix);&#xD;
			val = val.substring(ix+1,val.length);&#xD;
		}&#xD;
		else {&#xD;
			nxt = val;&#xD;
			val = &quot;&quot;;&#xD;
		}&#xD;
		srcField.timeList.add(DateTimeUtil.createTime(nxt));&#xD;
		count++;&#xD;
	}&#xD;
	result += &quot;|INFO:srcField.timeList.add(DateTimeUtil.createTime(value));&quot;;&#xD;
	result += &quot;|INFO:      where value = &quot; + value + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
} else if (src == &quot;datetimeList&quot;) {&#xD;
	var val = value;&#xD;
	var count = 0;&#xD;
	var nxt     = &quot;&quot;;&#xD;
	while(val != &quot;&quot;)&#xD;
	{&#xD;
		var ix = val.indexOf(&quot;|&quot;);&#xD;
		if (ix > 0) {&#xD;
			nxt = val.substring(0,ix);&#xD;
			val = val.substring(ix+1,val.length);&#xD;
		}&#xD;
		else {&#xD;
			nxt = val;&#xD;
			val = &quot;&quot;;&#xD;
		}&#xD;
		srcField.datetimeList.add(DateTimeUtil.createDatetime(nxt));&#xD;
		count++;&#xD;
	}&#xD;
	result += &quot;|INFO:srcField.datetimeList.add(DateTimeUtil.createDatetime(value));&quot;;&#xD;
	result += &quot;|INFO:      where value = &quot; + value + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
} else if (src == &quot;datetimetzList&quot;) {&#xD;
	var val = value;&#xD;
	var count = 0;&#xD;
	var nxt     = &quot;&quot;;&#xD;
	while(val != &quot;&quot;)&#xD;
	{&#xD;
		var ix = val.indexOf(&quot;|&quot;);&#xD;
		if (ix > 0) {&#xD;
			nxt = val.substring(0,ix);&#xD;
			val = val.substring(ix+1,val.length);&#xD;
		}&#xD;
		else {&#xD;
			nxt = val;&#xD;
			val = &quot;&quot;;&#xD;
		}&#xD;
		srcField.datetimetzList.add(DateTimeUtil.createDatetimetz(nxt));&#xD;
		count++;&#xD;
	}&#xD;
	result += &quot;|INFO:srcField.datetimetz.add(DateTimeUtil.createDatetime(value));&quot;;&#xD;
	result += &quot;|INFO:      where value = &quot; + value + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
} else if (src == &quot;decimalFloatList&quot;) {&#xD;
	var val = value;&#xD;
	var count = 0;&#xD;
	var nxt     = &quot;&quot;;&#xD;
	while(val != &quot;&quot;)&#xD;
	{&#xD;
		var ix = val.indexOf(&quot;|&quot;);&#xD;
		if (ix > 0) {&#xD;
			nxt = val.substring(0,ix);&#xD;
			val = val.substring(ix+1,val.length);&#xD;
		}&#xD;
		else {&#xD;
			nxt = val;&#xD;
			val = &quot;&quot;;&#xD;
		}&#xD;
		srcField.decimalFloatList.add(Number(nxt));&#xD;
		count++;&#xD;
	}&#xD;
	result += &quot;|INFO:srcField.decimalFloatList.add(Number(value));&quot;;&#xD;
	result += &quot;|INFO:      where value = &quot; + value + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
} else if (src == &quot;decimalFixedList&quot;) {&#xD;
	var val = value;&#xD;
	var count = 0;&#xD;
	var nxt     = &quot;&quot;;&#xD;
	while(val != &quot;&quot;)&#xD;
	{&#xD;
		var ix = val.indexOf(&quot;|&quot;);&#xD;
		if (ix > 0) {&#xD;
			nxt = val.substring(0,ix);&#xD;
			val = val.substring(ix+1,val.length);&#xD;
		}&#xD;
		else {&#xD;
			nxt = val;&#xD;
			val = &quot;&quot;;&#xD;
		}&#xD;
		srcField.decimalFixed8Dot4List.add(ScriptUtil.createBigDecimal(nxt));&#xD;
		count++;&#xD;
	}&#xD;
	result += &quot;|INFO:srcField.decimalFixed8Dot4List.add(ScriptUtil.createBigDecimal(value));&quot;;&#xD;
	result += &quot;|INFO:      where value = &quot; + value + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
} else if (src == &quot;intSignedList&quot;) {&#xD;
	var val = value;&#xD;
	var count = 0;&#xD;
	var nxt     = &quot;&quot;;&#xD;
	while(val != &quot;&quot;)&#xD;
	{&#xD;
		var ix = val.indexOf(&quot;|&quot;);&#xD;
		if (ix > 0) {&#xD;
			nxt = val.substring(0,ix);&#xD;
			val = val.substring(ix+1,val.length);&#xD;
		}&#xD;
		else {&#xD;
			nxt = val;&#xD;
			val = &quot;&quot;;&#xD;
		}&#xD;
		srcField.integerSignedList.add(Number(nxt));&#xD;
		count++;&#xD;
	}&#xD;
	result += &quot;|INFO:srcField.integerSignedList.add(Number(value));&quot;;&#xD;
	result += &quot;|INFO:      where value = &quot; + value + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
} else if (src == &quot;intFixedList&quot;) {&#xD;
	var val = value;&#xD;
	var count = 0;&#xD;
	var nxt     = &quot;&quot;;&#xD;
	while(val != &quot;&quot;)&#xD;
	{&#xD;
		var ix = val.indexOf(&quot;|&quot;);&#xD;
		if (ix > 0) {&#xD;
			nxt = val.substring(0,ix);&#xD;
			val = val.substring(ix+1,val.length);&#xD;
		}&#xD;
		else {&#xD;
			nxt = val;&#xD;
			val = &quot;&quot;;&#xD;
		}&#xD;
		srcField.integerFixed5List.add(ScriptUtil.createBigInteger(nxt));&#xD;
		count++;&#xD;
	}&#xD;
	result += &quot;|INFO:srcField.integerFixed5List.add(ScriptUtil.createBigInteger(value));&quot;;&#xD;
	result += &quot;|INFO:      where value = &quot; + value + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
} else if (src == &quot;textList&quot;) {&#xD;
	var val = value;&#xD;
	var count = 0;&#xD;
	var nxt     = &quot;&quot;;&#xD;
	while(val != &quot;&quot;)&#xD;
	{&#xD;
		var ix = val.indexOf(&quot;|&quot;);&#xD;
		if (ix > 0) {&#xD;
			nxt = val.substring(0,ix);&#xD;
			val = val.substring(ix+1,val.length);&#xD;
		}&#xD;
		else {&#xD;
			nxt = val;&#xD;
			val = &quot;&quot;;&#xD;
		}&#xD;
		srcField.text20List.add(nxt);&#xD;
		count++;&#xD;
	}&#xD;
	result += &quot;|INFO:srcField.text20List.add(value);&quot;;&#xD;
	result += &quot;|INFO:      where value = &quot; + value + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
} else if (src == &quot;durationList&quot;) {&#xD;
	var val = value;&#xD;
	var count = 0;&#xD;
	var nxt     = &quot;&quot;;&#xD;
	while(val != &quot;&quot;)&#xD;
	{&#xD;
		var ix = val.indexOf(&quot;|&quot;);&#xD;
		if (ix > 0) {&#xD;
			nxt = val.substring(0,ix);&#xD;
			val = val.substring(ix+1,val.length);&#xD;
		}&#xD;
		else {&#xD;
			nxt = val;&#xD;
			val = &quot;&quot;;&#xD;
		}&#xD;
		srcField.durationList.add(DateTimeUtil.createDuration(nxt));&#xD;
		count++;&#xD;
	}&#xD;
	result += &quot;|INFO:srcField.durationList.add(DateTimeUtil.createDuration(value));&quot;;&#xD;
	result += &quot;|INFO:      where value = &quot; + value + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
} else if (src == &quot;idList&quot;) {&#xD;
	var val = value;&#xD;
	var count = 0;&#xD;
	var nxt     = &quot;&quot;;&#xD;
	while(val != &quot;&quot;)&#xD;
	{&#xD;
		var ix = val.indexOf(&quot;|&quot;);&#xD;
		if (ix > 0) {&#xD;
			nxt = val.substring(0,ix);&#xD;
			val = val.substring(ix+1,val.length);&#xD;
		}&#xD;
		else {&#xD;
			nxt = val;&#xD;
			val = &quot;&quot;;&#xD;
		}&#xD;
		srcField.idList.add(nxt);&#xD;
		count++;&#xD;
	}&#xD;
	result += &quot;|INFO:srcField.idList.add(value);&quot;;&#xD;
	result += &quot;|INFO:      where value = &quot; + value + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
} else if (src == &quot;uriList&quot;) {&#xD;
	var val = value;&#xD;
	var count = 0;&#xD;
	var nxt     = &quot;&quot;;&#xD;
	while(val != &quot;&quot;)&#xD;
	{&#xD;
		var ix = val.indexOf(&quot;|&quot;);&#xD;
		if (ix > 0) {&#xD;
			nxt = val.substring(0,ix);&#xD;
			val = val.substring(ix+1,val.length);&#xD;
		}&#xD;
		else {&#xD;
			nxt = val;&#xD;
			val = &quot;&quot;;&#xD;
		}&#xD;
		srcField.uriList.add(nxt);&#xD;
		count++;&#xD;
	}&#xD;
	result += &quot;|INFO:srcField.uriList.add(value);&quot;;&#xD;
	result += &quot;|INFO:      where value = &quot; + value + &quot; (&quot; + count + &quot; elements)&quot;;	&#xD;
} else {&#xD;
	result += &quot;|ERROR:Invalid src value: '&quot; + src + &quot;'&quot;;&#xD;
}&#xD;
&#xD;
// Check for second input parameter&#xD;
if (src2 != &quot;-&quot;) {&#xD;
	////////////////////////////////////////////////////////&#xD;
	// Initialise the source BOM object if required&#xD;
	if (src2.indexOf(&quot;null:&quot;) == 0) {&#xD;
		src2 = src2.replace(&quot;null:&quot;,&quot;&quot;);&#xD;
	} else {&#xD;
		srcField2 = com_myorg_customermodel11_Factory.createAllTypesOptional();&#xD;
		//srcField2.bool = true;&#xD;
		//srcField2.integerSigned = 12345; &#xD;
		result += &quot;|INFO:srcField2 initialised:&quot;;&#xD;
		result += &quot;|INFO:      srcField2 = com_myorg_customermodel_Factory.createAllTypesOptional();&quot;;&#xD;
	}&#xD;
&#xD;
	////////////////////////////////////////////////////////&#xD;
	// Process the src2 parameter&#xD;
	if (opScript == &quot;list&quot;) {&#xD;
		// Skip setup of srcField&#xD;
	} else if (src2 == &quot;attach&quot;) {&#xD;
		result += &quot;|ERROR: src2='attach' not supported yet&quot;;&#xD;
	} else if (src2 == &quot;bool&quot;) {&#xD;
		srcField2.bool = ScriptUtil.createBoolean(value2);&#xD;
		result += &quot;|INFO:srcField2.bool = ScriptUtil.createBoolean(value2);&quot;;&#xD;
		result += &quot;|INFO:      where value2 = &quot; + value2;&#xD;
		result += &quot;|INFO:      and   srcField2.bool = &quot;+srcField2.bool;&#xD;
	} else if (src2 == &quot;date&quot;) {&#xD;
		if (value2 != &quot;TODAY&quot;) {&#xD;
			srcField2.date = DateTimeUtil.createDate(value2);&#xD;
			result += &quot;|INFO:srcField2.date = DateTimeUtil.createDate(value2);&quot;;&#xD;
			result += &quot;|INFO:      where value2 = &quot; + value2;&#xD;
		} else {&#xD;
			srcField2.date = DateTimeUtil.createDate();&#xD;
			result += &quot;|INFO:srcField2.date = DateTimeUtil.createDate();&quot;;&#xD;
		}	&#xD;
		result += &quot;|INFO:      and   srcField2.date = &quot; + srcField2.date;&#xD;
	} else if (src2 == &quot;time&quot;) {&#xD;
		if (value2 != &quot;TODAY&quot;) {&#xD;
			srcField2.time = DateTimeUtil.createTime(value2);&#xD;
			result += &quot;|INFO:srcField2.time = DateTimeUtil.createTime(value2);&quot;;&#xD;
			result += &quot;|INFO:      where value2 = &quot; + value2;&#xD;
		} else {&#xD;
			srcField2.time = DateTimeUtil.createTime();&#xD;
			result += &quot;|INFO:srcField2.time = DateTimeUtil.createTime();&quot;;&#xD;
		}&#xD;
		result += &quot;|INFO:      and   srcField2.time = &quot; + srcField2.time;&#xD;
	} else if (src2 == &quot;datetime&quot;) {&#xD;
		if (value2 != &quot;TODAY&quot;) {&#xD;
			srcField2.datetime = DateTimeUtil.createDatetime(value2);&#xD;
			result += &quot;|INFO:srcField2.datetime = DateTimeUtil.createDatetime(value2);&quot;;&#xD;
			result += &quot;|INFO:      where value2 = &quot; + value2;&#xD;
		} else {&#xD;
			srcField2.datetime = DateTimeUtil.createDatetime();&#xD;
			result += &quot;|INFO:srcField2.datetime = DateTimeUtil.createDatetime();&quot;;&#xD;
		}&#xD;
		result += &quot;|INFO:      and   srcField2.datetime = &quot; + srcField2.datetime;&#xD;
	} else if (src2 == &quot;datetimetz&quot;) {&#xD;
		if (value2 != &quot;TODAY&quot;) {&#xD;
			srcField2.datetimetz = DateTimeUtil.createDatetimetz(value2);&#xD;
			result += &quot;|INFO:srcField2.datetimetz = DateTimeUtil.createDatetimetz(value2);&quot;;&#xD;
			result += &quot;|INFO:      where value2 = &quot; + value2;&#xD;
		} else {&#xD;
			srcField2.datetimetz = DateTimeUtil.createDatetimetz();&#xD;
			result += &quot;|INFO:srcField2.datetimetz = DateTimeUtil.createDatetimetz();&quot;;&#xD;
		}&#xD;
		result += &quot;|INFO:      and   srcField2.datetimetz = &quot; + srcField2.datetimetz;&#xD;
	} else if (src2 == &quot;decimalFloat&quot;) {&#xD;
		srcField2.decimalFloat = Number(value2);&#xD;
		result += &quot;|INFO:srcField2.decimalFloat = Number(value2);&quot;;&#xD;
		result += &quot;|INFO:      where value2 = &quot; + value2;&#xD;
		result += &quot;|INFO:      now   srcField2.decimalFloat = &quot; + srcField2.decimalFloat;&#xD;
	} else if (src2 == &quot;decimalFixed&quot;) {&#xD;
		srcField2.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(value2);&#xD;
		result += &quot;|INFO:srcField2.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(value2);&quot;;&#xD;
		result += &quot;|INFO:      where value2 = &quot; + value2;&#xD;
		result += &quot;|INFO:      now   srcField2.decimalFixed8Dot4.toString() = &quot; + srcField2.decimalFixed8Dot4.toString();&#xD;
	} else if (src2 == &quot;decimalFixedBig&quot;) {&#xD;
		srcField2.decimalFixed80dot70 = ScriptUtil.createBigDecimal(value2);&#xD;
		result += &quot;|INFO:srcField2.decimalFixed80dot70 = ScriptUtil.createBigDecimal(value2);&quot;;&#xD;
		result += &quot;|INFO:      where value2 = &quot; + value2;&#xD;
		result += &quot;|INFO:      now   srcField2.decimalFixed80dot70.toString() = &quot; + srcField2.decimalFixed80dot70.toString();&#xD;
	} else if (src2 == &quot;intSigned&quot;) {&#xD;
		srcField2.integerSigned = Number(value2);&#xD;
		result += &quot;|INFO:srcField2.integerSigned = Number(value2);&quot;;&#xD;
		result += &quot;|INFO:      where value2 = &quot; + value2;&#xD;
		result += &quot;|INFO:      now   srcField2.integerSigned = &quot; + srcField2.integerSigned;&#xD;
	} else if (src2 == &quot;intFixed&quot;) {&#xD;
		srcField2.integerFixed5 = ScriptUtil.createBigInteger(value2);&#xD;
		result += &quot;|INFO:srcField2.integerFixed5 = ScriptUtil.createBigInteger(value2);&quot;;&#xD;
		result += &quot;|INFO:      where value2 = &quot; + value2;&#xD;
		result += &quot;|INFO:      now   srcField2.integerFixed5.toString() = &quot; + srcField2.integerFixed5.toString();&#xD;
	} else if (src2 == &quot;text&quot;) {&#xD;
		srcField2.text20 = value2;&#xD;
		result += &quot;|INFO:srcField2.text20 = value2;&quot;;&#xD;
		result += &quot;|INFO:      where value2 = &quot; + value2;&#xD;
		result += &quot;|INFO:      now   srcField2.text20 = &quot; + srcField2.text20;&#xD;
	} else if (src2 == &quot;duration&quot;) {&#xD;
		srcField2.duration = DateTimeUtil.createDuration(value2);&#xD;
		result += &quot;|INFO:srcField2.duration = DateTimeUtil.createDuration(value2);&quot;;&#xD;
		result += &quot;|INFO:      where value2 = &quot; + value2;&#xD;
		result += &quot;|INFO:      now   srcField2.duration = &quot; + srcField2.duration;&#xD;
	} else if (src2 == &quot;id&quot;) {&#xD;
		srcField2.id = value2;&#xD;
		result += &quot;|INFO:srcField2.id = value2;&quot;;&#xD;
		result += &quot;|INFO:      where value2 = &quot; + value2;&#xD;
		result += &quot;|INFO:      now   srcField2.id = &quot; + srcField2.id;&#xD;
	} else if (src2 == &quot;uri&quot;) {&#xD;
		srcField2.uri = value2;&#xD;
		result += &quot;|INFO:srcField2.uri = value2;&quot;;&#xD;
		result += &quot;|INFO:      where value2 = &quot; + value2;&#xD;
		result += &quot;|INFO:      now   srcField2.uri = &quot; + srcField2.uri;&#xD;
	} else if (src2 == &quot;boolList&quot;) {&#xD;
		var val = value2;&#xD;
		var count = 0;&#xD;
		var nxt     = &quot;&quot;;&#xD;
		while(val != &quot;&quot;)&#xD;
		{&#xD;
			var ix = val.indexOf(&quot;|&quot;);&#xD;
			if (ix > 0) {&#xD;
				nxt = val.substring(0,ix);&#xD;
				val = val.substring(ix+1,val.length);&#xD;
			}&#xD;
			else {&#xD;
				nxt = val;&#xD;
				val = &quot;&quot;;&#xD;
			}&#xD;
			srcField2.boolList.add(ScriptUtil.createBoolean(nxt));&#xD;
			count++;&#xD;
		}&#xD;
		result += &quot;|INFO:srcField2.boolList.add(value);&quot;;&#xD;
		result += &quot;|INFO:      where value = &quot; + value2 + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
	} else if (src2 == &quot;dateList&quot;) {&#xD;
		var val = value2;&#xD;
		var count = 0;&#xD;
		var nxt     = &quot;&quot;;&#xD;
		while(val != &quot;&quot;)&#xD;
		{&#xD;
			var ix = val.indexOf(&quot;|&quot;);&#xD;
			if (ix > 0) {&#xD;
				nxt = val.substring(0,ix);&#xD;
				val = val.substring(ix+1,val.length);&#xD;
			}&#xD;
			else {&#xD;
				nxt = val;&#xD;
				val = &quot;&quot;;&#xD;
			}&#xD;
			srcField2.dateList.add(DateTimeUtil.createDate(nxt));&#xD;
			count++;&#xD;
		}&#xD;
		result += &quot;|INFO:srcField2.dateList.add(DateTimeUtil.createDate(value));&quot;;&#xD;
		result += &quot;|INFO:      where value = &quot; + value2 + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
	} else if (src2 == &quot;timeList&quot;) {&#xD;
		var val = value2;&#xD;
		var count = 0;&#xD;
		var nxt     = &quot;&quot;;&#xD;
		while(val != &quot;&quot;)&#xD;
		{&#xD;
			var ix = val.indexOf(&quot;|&quot;);&#xD;
			if (ix > 0) {&#xD;
				nxt = val.substring(0,ix);&#xD;
				val = val.substring(ix+1,val.length);&#xD;
			}&#xD;
			else {&#xD;
				nxt = val;&#xD;
				val = &quot;&quot;;&#xD;
			}&#xD;
			srcField2.timeList.add(DateTimeUtil.createTime(nxt));&#xD;
			count++;&#xD;
		}&#xD;
		result += &quot;|INFO:srcField2.timeList.add(DateTimeUtil.createTime(value));&quot;;&#xD;
		result += &quot;|INFO:      where value = &quot; + value2 + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
	} else if (src2 == &quot;datetimeList&quot;) {&#xD;
		var val = value2;&#xD;
		var count = 0;&#xD;
		var nxt     = &quot;&quot;;&#xD;
		while(val != &quot;&quot;)&#xD;
		{&#xD;
			var ix = val.indexOf(&quot;|&quot;);&#xD;
			if (ix > 0) {&#xD;
				nxt = val.substring(0,ix);&#xD;
				val = val.substring(ix+1,val.length);&#xD;
			}&#xD;
			else {&#xD;
				nxt = val;&#xD;
				val = &quot;&quot;;&#xD;
			}&#xD;
			srcField2.datetimeList.add(DateTimeUtil.createDatetime(nxt));&#xD;
			count++;&#xD;
		}&#xD;
		result += &quot;|INFO:srcField2.datetimeList.add(DateTimeUtil.createDatetime(value));&quot;;&#xD;
		result += &quot;|INFO:      where value = &quot; + value2 + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
	} else if (src2 == &quot;datetimetzList&quot;) {&#xD;
		var val = value2;&#xD;
		var count = 0;&#xD;
		var nxt     = &quot;&quot;;&#xD;
		while(val != &quot;&quot;)&#xD;
		{&#xD;
			var ix = val.indexOf(&quot;|&quot;);&#xD;
			if (ix > 0) {&#xD;
				nxt = val.substring(0,ix);&#xD;
				val = val.substring(ix+1,val.length);&#xD;
			}&#xD;
			else {&#xD;
				nxt = val;&#xD;
				val = &quot;&quot;;&#xD;
			}&#xD;
			srcField2.datetimetzList.add(DateTimeUtil.createDatetimetz(nxt));&#xD;
			count++;&#xD;
		}&#xD;
		result += &quot;|INFO:srcField2.datetimetz.add(DateTimeUtil.createDatetime(value));&quot;;&#xD;
		result += &quot;|INFO:      where value = &quot; + value2 + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
	} else if (src2 == &quot;decimalFloatList&quot;) {&#xD;
		var val = value2;&#xD;
		var count = 0;&#xD;
		var nxt     = &quot;&quot;;&#xD;
		while(val != &quot;&quot;)&#xD;
		{&#xD;
			var ix = val.indexOf(&quot;|&quot;);&#xD;
			if (ix > 0) {&#xD;
				nxt = val.substring(0,ix);&#xD;
				val = val.substring(ix+1,val.length);&#xD;
			}&#xD;
			else {&#xD;
				nxt = val;&#xD;
				val = &quot;&quot;;&#xD;
			}&#xD;
			srcField2.decimalFloatList.add(Number(nxt));&#xD;
			count++;&#xD;
		}&#xD;
		result += &quot;|INFO:srcField2.decimalFloatList.add(Number(value));&quot;;&#xD;
		result += &quot;|INFO:      where value = &quot; + value2 + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
	} else if (src2 == &quot;decimalFixedList&quot;) {&#xD;
		var val = value2;&#xD;
		var count = 0;&#xD;
		var nxt     = &quot;&quot;;&#xD;
		while(val != &quot;&quot;)&#xD;
		{&#xD;
			var ix = val.indexOf(&quot;|&quot;);&#xD;
			if (ix > 0) {&#xD;
				nxt = val.substring(0,ix);&#xD;
				val = val.substring(ix+1,val.length);&#xD;
			}&#xD;
			else {&#xD;
				nxt = val;&#xD;
				val = &quot;&quot;;&#xD;
			}&#xD;
			srcField2.decimalFixed8Dot4List.add(ScriptUtil.createBigDecimal(nxt));&#xD;
			count++;&#xD;
		}&#xD;
		result += &quot;|INFO:srcField2.decimalFixed8Dot4List.add(ScriptUtil.createBigDecimal(value));&quot;;&#xD;
		result += &quot;|INFO:      where value = &quot; + value2 + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
	} else if (src2 == &quot;intSignedList&quot;) {&#xD;
		var val = value2;&#xD;
		var count = 0;&#xD;
		var nxt     = &quot;&quot;;&#xD;
		while(val != &quot;&quot;)&#xD;
		{&#xD;
			var ix = val.indexOf(&quot;|&quot;);&#xD;
			if (ix > 0) {&#xD;
				nxt = val.substring(0,ix);&#xD;
				val = val.substring(ix+1,val.length);&#xD;
			}&#xD;
			else {&#xD;
				nxt = val;&#xD;
				val = &quot;&quot;;&#xD;
			}&#xD;
			srcField2.integerSignedList.add(Number(nxt));&#xD;
			count++;&#xD;
		}&#xD;
		result += &quot;|INFO:srcField2.integerSignedList.add(Number(value));&quot;;&#xD;
		result += &quot;|INFO:      where value = &quot; + value2 + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
	} else if (src2 == &quot;intFixedList&quot;) {&#xD;
		var val = value2;&#xD;
		var count = 0;&#xD;
		var nxt     = &quot;&quot;;&#xD;
		while(val != &quot;&quot;)&#xD;
		{&#xD;
			var ix = val.indexOf(&quot;|&quot;);&#xD;
			if (ix > 0) {&#xD;
				nxt = val.substring(0,ix);&#xD;
				val = val.substring(ix+1,val.length);&#xD;
			}&#xD;
			else {&#xD;
				nxt = val;&#xD;
				val = &quot;&quot;;&#xD;
			}&#xD;
			srcField2.integerFixed5List.add(ScriptUtil.createBigInteger(nxt));&#xD;
			count++;&#xD;
		}&#xD;
		result += &quot;|INFO:srcField2.integerFixed5List.add(ScriptUtil.createBigInteger(value));&quot;;&#xD;
		result += &quot;|INFO:      where value = &quot; + value2 + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
	} else if (src2 == &quot;textList&quot;) {&#xD;
		var val = value2;&#xD;
		var count = 0;&#xD;
		var nxt     = &quot;&quot;;&#xD;
		while(val != &quot;&quot;)&#xD;
		{&#xD;
			var ix = val.indexOf(&quot;|&quot;);&#xD;
			if (ix > 0) {&#xD;
				nxt = val.substring(0,ix);&#xD;
				val = val.substring(ix+1,val.length);&#xD;
			}&#xD;
			else {&#xD;
				nxt = val;&#xD;
				val = &quot;&quot;;&#xD;
			}&#xD;
			srcField2.text20List.add(nxt);&#xD;
			count++;&#xD;
		}&#xD;
		result += &quot;|INFO:srcField2.text20List.add(value);&quot;;&#xD;
		result += &quot;|INFO:      where value = &quot; + value2 + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
	} else if (src2 == &quot;durationList&quot;) {&#xD;
		var val = value2;&#xD;
		var count = 0;&#xD;
		var nxt     = &quot;&quot;;&#xD;
		while(val != &quot;&quot;)&#xD;
		{&#xD;
			var ix = val.indexOf(&quot;|&quot;);&#xD;
			if (ix > 0) {&#xD;
				nxt = val.substring(0,ix);&#xD;
				val = val.substring(ix+1,val.length);&#xD;
			}&#xD;
			else {&#xD;
				nxt = val;&#xD;
				val = &quot;&quot;;&#xD;
			}&#xD;
			srcField2.durationList.add(DateTimeUtil.createDuration(nxt));&#xD;
			count++;&#xD;
		}&#xD;
		result += &quot;|INFO:srcField2.durationList.add(DateTimeUtil.createDuration(value));&quot;;&#xD;
		result += &quot;|INFO:      where value = &quot; + value2 + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
	} else if (src2 == &quot;idList&quot;) {&#xD;
		var val = value2;&#xD;
		var count = 0;&#xD;
		var nxt     = &quot;&quot;;&#xD;
		while(val != &quot;&quot;)&#xD;
		{&#xD;
			var ix = val.indexOf(&quot;|&quot;);&#xD;
			if (ix > 0) {&#xD;
				nxt = val.substring(0,ix);&#xD;
				val = val.substring(ix+1,val.length);&#xD;
			}&#xD;
			else {&#xD;
				nxt = val;&#xD;
				val = &quot;&quot;;&#xD;
			}&#xD;
			srcField2.idList.add(nxt);&#xD;
			count++;&#xD;
		}&#xD;
		result += &quot;|INFO:srcField2.idList.add(value);&quot;;&#xD;
		result += &quot;|INFO:      where value = &quot; + value2 + &quot; (&quot; + count + &quot; elements)&quot;;&#xD;
	} else if (src2 == &quot;uriList&quot;) {&#xD;
		var val = value2;&#xD;
		var	 count = 0;&#xD;
		var nxt     = &quot;&quot;;&#xD;
		while(val != &quot;&quot;)&#xD;
		{&#xD;
			var ix = val.indexOf(&quot;|&quot;);&#xD;
			if (ix > 0) {&#xD;
				nxt = val.substring(0,ix);&#xD;
				val = val.substring(ix+1,val.length);&#xD;
			}&#xD;
			else {&#xD;
				nxt = val;&#xD;
				val = &quot;&quot;;&#xD;
			}&#xD;
			srcField2.uriList.add(nxt);&#xD;
			count++;&#xD;
		}&#xD;
		result += &quot;|INFO:srcField2.uriList.add(value);&quot;;&#xD;
		result += &quot;|INFO:      where value = &quot; + value2 + &quot; (&quot; + count + &quot; elements)&quot;;			&#xD;
	} else 	{&#xD;
			result += &quot;|ERROR:Invalid src2 value2: '&quot; + src2 + &quot;'&quot;;&#xD;
	}&#xD;
}&#xD;
&#xD;
////////////////////////////////////////////////////////&#xD;
// Initialise the destination BOM object if required&#xD;
if (dst.indexOf(&quot;null:&quot;) == 0) {&#xD;
	dst = dst.replace(&quot;null:&quot;,&quot;&quot;);&#xD;
} else {&#xD;
	dstField = com_myorg_customermodel11_Factory.createAllTypesOptional();&#xD;
	result += &quot;|INFO:dstField initialised&quot;;&#xD;
	result += &quot;|INFO:      dstField = com_myorg_customermodel_Factory.createAllTypesOptional();&quot;;&#xD;
}&#xD;
&#xD;
result += &quot;|INFO:Leave:Init Script&quot;;&#xD;
&#xD;
</xpdl2:Script>
              </xpdl2:TaskScript>
            </xpdl2:Task>
          </xpdl2:Implementation>
          <xpdl2:ExtendedAttributes>
            <xpdl2:ExtendedAttribute Name=""/>
          </xpdl2:ExtendedAttributes>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="83.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="96.0">
              <xpdl2:Coordinates XCoordinate="56.0" YCoordinate="374.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
          <xpdl2:Extensions/>
          <xpdExt:ActivityResourcePatterns>
            <xpdExt:AllocationStrategy xpdExt:Strategy="SYSTEM_DETERMINED"/>
          </xpdExt:ActivityResourcePatterns>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_DpNY0WnLEeCNEO-k721VLA" xpdExt:Visibility="Private" iProcessExt:StepIndex="7">
          <xpdl2:Event>
            <xpdl2:IntermediateEvent Target="_DpNY0GnLEeCNEO-k721VLA" Trigger="Error">
              <xpdl2:ResultError ErrorCode=""/>
            </xpdl2:IntermediateEvent>
          </xpdl2:Event>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="31.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="31.0">
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:NodeGraphicsInfo>
            <xpdl2:NodeGraphicsInfo ToolId="XPD.BorderEventPosition">
              <xpdl2:Coordinates XCoordinate="36.592178770949715" YCoordinate="0.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMp6IGnNEeCvfK09LgLLfw" xpdExt:Visibility="Private" iProcessExt:StepIndex="8">
          <xpdl2:Event>
            <xpdl2:IntermediateEvent Target="_pMp6ImnNEeCvfK09LgLLfw" Trigger="Error">
              <xpdl2:ResultError ErrorCode=""/>
            </xpdl2:IntermediateEvent>
          </xpdl2:Event>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="31.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="31.0">
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:NodeGraphicsInfo>
            <xpdl2:NodeGraphicsInfo ToolId="XPD.BorderEventPosition">
              <xpdl2:Coordinates XCoordinate="21.71717171717172" YCoordinate="0.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMp6IWnNEeCvfK09LgLLfw" Name="DatetimeScript" xpdExt:Visibility="Private" xpdExt:DisplayName="Datetime Script" iProcessExt:StepIndex="9">
          <xpdl2:Implementation>
            <xpdl2:Task>
              <xpdl2:TaskScript>
                <xpdl2:Script ScriptGrammar="JavaScript">/////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Enter:Datetime Script (dst = '&quot;+dst+&quot;' type)&quot;;&#xD;
&#xD;
/////////////////////////////////////////////////////////////&#xD;
// Process the dst parameter&#xD;
if (dst == &quot;attach&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Datetime Script&quot;;&#xD;
} else if (dst == &quot;bool&quot;) {&#xD;
	if (opCode == &quot;compare&quot;) {&#xD;
		if (src == &quot;date&quot; &amp;&amp; src2 == &quot;date&quot;) { &#xD;
			dstField.bool = srcField.date.equals(srcField2.date);&#xD;
			result += &quot;|INFO:dstField.bool = srcField.date.equals(srcField2.date);&quot;; &#xD;
		} else if (src == &quot;datetime&quot; &amp;&amp; src2 == &quot;datetime&quot;) { &#xD;
			dstField.bool = srcField.datetime.equals(srcField2.datetime);&#xD;
			result += &quot;|INFO:dstField.bool = srcField.datetime.equals(srcField2.datetime);&quot;; &#xD;
		} else if (src == &quot;datetimetz&quot; &amp;&amp; src2 == &quot;datetimetz&quot;) { &#xD;
			dstField.bool = srcField.datetimetz.equals(srcField2.datetimetz);&#xD;
			result += &quot;|INFO:dstField.bool = srcField.datetimetz.equals(srcField2.datetimetz);&quot;; &#xD;
		} else if (src == &quot;time&quot; &amp;&amp; src2 == &quot;time&quot;) { &#xD;
			dstField.bool = srcField.time.equals(srcField2.time);&#xD;
			result += &quot;|INFO:dstField.bool = srcField.time.equals(srcField2.time);&quot;; 	&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		}&#xD;
	} else {&#xD;
		result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;date&quot;) {&#xD;
	if (src == &quot;date&quot;) { &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;copy&quot;) {&#xD;
				dstField.date = DateTimeUtil.createDate();&#xD;
				dstField.date.clear();&#xD;
				dstField.date.setYear (srcField.date.getYear ());&#xD;
				dstField.date.setMonth(srcField.date.getMonth());&#xD;
				dstField.date.setDay  (srcField.date.getDay  ());&#xD;
				&#xD;
				result += &quot;|INFO:dstField.date = DateTimeUtil.createDate();&quot;;&#xD;
				result += &quot;|INFO:dstField.date.clear();&quot;;&#xD;
				result += &quot;|INFO:dstField.date.setYear (srcField.date.getYear ());&quot;;&#xD;
				result += &quot;|INFO:dstField.date.setMonth(srcField.date.getMonth());&quot;;&#xD;
				result += &quot;|INFO:dstField.date.setDay  (srcField.date.getDay  ());&quot;;&#xD;
			} else if (opCode == &quot;copyCons&quot;) {&#xD;
				dstField.date = DateTimeUtil.createDate(srcField.date);&#xD;
				result += &quot;|INFO:dstField.date = DateTimeUtil.createDate(srcField.date);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else if (src2 == &quot;duration&quot;) {&#xD;
			if (opCode == &quot;add&quot;) {&#xD;
				dstField.date = DateTimeUtil.createDate(srcField.date);&#xD;
				dstField.date.add(srcField2.duration);&#xD;
				result += &quot;|INFO:dstField.date = DateTimeUtil.createDate(srcField.date);dstField.date.add(srcField2.duration);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid src2 value: '&quot; + src2 + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		} &#xD;
	} else if (src == &quot;datetime&quot;) { &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;copy&quot;) {&#xD;
				dstField.date = DateTimeUtil.createDate();&#xD;
				dstField.date.clear();&#xD;
				dstField.date.setYear (srcField.datetime.getYear ());&#xD;
				dstField.date.setMonth(srcField.datetime.getMonth());&#xD;
				dstField.date.setDay  (srcField.datetime.getDay  ());&#xD;
				&#xD;
				result += &quot;|INFO:dstField.date = DateTimeUtil.createDate();&quot;;&#xD;
				result += &quot;|INFO:dstField.date.clear();&quot;;&#xD;
				result += &quot;|INFO:dstField.date.setYear (srcField.datetime.getYear ());&quot;;&#xD;
				result += &quot;|INFO:dstField.date.setMonth(srcField.datetime.getMonth());&quot;;&#xD;
				result += &quot;|INFO:dstField.date.setDay  (srcField.datetime.getDay  ());&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else if (src2 == &quot;duration&quot;) {&#xD;
			if (opCode == &quot;add&quot;) {&#xD;
				dstField.date = DateTimeUtil.createDate(srcField.datetime);&#xD;
				dstField.date.add(srcField2.duration);&#xD;
				result += &quot;|INFO:dstField.date = DateTimeUtil.createDate(srcField.datetime);dstField.date.add(srcField2.duration);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid src2 value: '&quot; + src2 + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		} &#xD;
	} else if (src == &quot;datetimetz&quot;) { &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;copy&quot;) {&#xD;
				dstField.date = DateTimeUtil.createDate();&#xD;
				dstField.date.clear();&#xD;
				dstField.date.setYear (srcField.datetimetz.getYear ());&#xD;
				dstField.date.setMonth(srcField.datetimetz.getMonth());&#xD;
				dstField.date.setDay  (srcField.datetimetz.getDay  ());&#xD;
				&#xD;
				result += &quot;|INFO:dstField.date = DateTimeUtil.createDate();&quot;;&#xD;
				result += &quot;|INFO:dstField.date.clear();&quot;;&#xD;
				result += &quot;|INFO:dstField.date.setYear (srcField.datetimetz.getYear ());&quot;;&#xD;
				result += &quot;|INFO:dstField.date.setMonth(srcField.datetimetz.getMonth());&quot;;&#xD;
				result += &quot;|INFO:dstField.date.setDay  (srcField.datetimetz.getDay  ());&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else if (src2 == &quot;duration&quot;) {&#xD;
			if (opCode == &quot;add&quot;) {&#xD;
				dstField.date = DateTimeUtil.createDate(srcField.datetimetz, false);&#xD;
				dstField.date.add(srcField2.duration);&#xD;
				result += &quot;|INFO:dstField.date = DateTimeUtil.createDate(srcField.datetimetz, false);dstField.date.add(srcField2.duration);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid src2 value: '&quot; + src2 + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		} &#xD;
	} else {&#xD;
		result += &quot;|ERROR:Invalid src value: '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;time&quot;) {&#xD;
	if (src == &quot;time&quot;) { &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;copy1&quot;) {&#xD;
				dstField.time = DateTimeUtil.createTime();&#xD;
				dstField.time.clear();&#xD;
				dstField.time.setHour  (srcField.time.getHour  ());&#xD;
				dstField.time.setMinute(srcField.time.getMinute());&#xD;
				dstField.time.setSecond(srcField.time.getSecond());&#xD;
				dstField.time.setMillisecond(srcField.time.getMillisecond());&#xD;
				&#xD;
				result += &quot;|INFO:dstField.time = DateTimeUtil.createTime();&quot;;&#xD;
				result += &quot;|INFO:dstField.time.clear();&quot;;&#xD;
				result += &quot;|INFO:dstField.time.setHour  (srcField.time.getHour  ());&quot;;&#xD;
				result += &quot;|INFO:dstField.time.setMinute(srcField.time.getMinute())&quot;;&#xD;
				result += &quot;|INFO:dstField.time.setSecond(srcField.time.getSecond());&quot;;&#xD;
				result += &quot;|INFO:dstField.time.setMillisecond(srcField.time.getMillisecond());&quot;;&#xD;
			} else if (opCode == &quot;copy2&quot;) {&#xD;
				dstField.time = DateTimeUtil.createTime();&#xD;
				dstField.time.clear();&#xD;
				dstField.time.setHour  (srcField.time.getHour  ());&#xD;
				dstField.time.setMinute(srcField.time.getMinute());&#xD;
				dstField.time.setSecond(srcField.time.getSecond());&#xD;
				dstField.time.setFractionalSecond(srcField.time.getFractionalSecond());&#xD;
				&#xD;
				result += &quot;|INFO:dstField.time = DateTimeUtil.createTime();&quot;;&#xD;
				result += &quot;|INFO:dstField.time.clear();&quot;;&#xD;
				result += &quot;|INFO:dstField.time.setHour  (srcField.time.getHour  ());&quot;;&#xD;
				result += &quot;|INFO:dstField.time.setMinute(srcField.time.getMinute())&quot;;&#xD;
				result += &quot;|INFO:dstField.time.setSecond(srcField.time.getSecond());&quot;;&#xD;
				result += &quot;|INFO:dstField.time.setMillisecond(srcField.time.getMillisecond());&quot;;&#xD;
			} else if (opCode == &quot;copyCons&quot;) {&#xD;
				dstField.time = DateTimeUtil.createTime(srcField.time);&#xD;
				result += &quot;|INFO:dstField.time = DateTimeUtil.createTime(srcField.time);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else if (src2 == &quot;duration&quot;) {&#xD;
			if (opCode == &quot;add&quot;) {&#xD;
				dstField.time = DateTimeUtil.createTime(srcField.time);&#xD;
				dstField.time.add(srcField2.duration);&#xD;
				result += &quot;|INFO:dstField.time = DateTimeUtil.createTime(srcField.time);dstField.time.add(srcField2.duration);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid src2 value: '&quot; + src2 + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		} &#xD;
	} else if (src == &quot;datetime&quot;) { &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;copy&quot;) {&#xD;
				dstField.time = DateTimeUtil.createTime();&#xD;
				dstField.time.clear();&#xD;
				dstField.time.setHour  (srcField.datetime.getHour  ());&#xD;
				dstField.time.setMinute(srcField.datetime.getMinute());&#xD;
				dstField.time.setSecond(srcField.datetime.getSecond());&#xD;
				&#xD;
				result += &quot;|INFO:dstField.time = DateTimeUtil.createTime();&quot;;&#xD;
				result += &quot;|INFO:dstField.time.clear();&quot;;&#xD;
				result += &quot;|INFO:dstField.time.setHour  (srcField.datetime.getHour  ());&quot;;&#xD;
				result += &quot;|INFO:dstField.time.setMinute(srcField.datetime.getMinute());&quot;;&#xD;
				result += &quot;|INFO:dstField.time.setSecond(srcField.datetime.getSecond());&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else if (src2 == &quot;duration&quot;) {&#xD;
			if (opCode == &quot;add&quot;) {&#xD;
				dstField.time = DateTimeUtil.createTime(srcField.datetime);&#xD;
				dstField.time.add(srcField2.duration);&#xD;
				result += &quot;|INFO:dstField.time = DateTimeUtil.createTime(srcField.datetime);dstField.time.add(srcField2.duration);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid src2 value: '&quot; + src2 + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		} &#xD;
	} else if (src == &quot;datetimetz&quot;) { &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;copy&quot;) {&#xD;
				dstField.time = DateTimeUtil.createTime();&#xD;
				dstField.time.clear();&#xD;
				dstField.time.setHour  (srcField.datetimetz.getHour  ());&#xD;
				dstField.time.setMinute(srcField.datetimetz.getMinute());&#xD;
				dstField.time.setSecond(srcField.datetimetz.getSecond());&#xD;
				&#xD;
				result += &quot;|INFO:dstField.time = DateTimeUtil.createTime();&quot;;&#xD;
				result += &quot;|INFO:dstField.time.clear();&quot;;&#xD;
				result += &quot;|INFO:dstField.time.setHour  (srcField.datetimetz.getHour  ());&quot;;&#xD;
				result += &quot;|INFO:dstField.time.setMinute(srcField.datetimetz.getMinute());&quot;;&#xD;
				result += &quot;|INFO:dstField.time.setSecond(srcField.datetimetz.getSecond());&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else if (src2 == &quot;duration&quot;) {&#xD;
			if (opCode == &quot;add&quot;) {&#xD;
				dstField.time = DateTimeUtil.createTime(srcField.datetimetz, false);&#xD;
				dstField.time.add(srcField2.duration);&#xD;
				result += &quot;|INFO:dstField.time = DateTimeUtil.createTime(srcField.time, false);dstField.time.add(srcField2.duration);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid src2 value: '&quot; + src2 + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		} &#xD;
	} else if (src == &quot;intSigned&quot;) { &#xD;
		if (src2 == &quot;intSigned&quot;) {&#xD;
			if (opCode == &quot;setTime&quot;) {&#xD;
Log.write(&quot;LOGWRITE: In time=setTime(h,m,s,fract)&quot;);&#xD;
				var secs = srcField.integerSigned % 100;&#xD;
Log.write(&quot;LOGWRITE: secs = &quot;+secs);&#xD;
				srcField.integerSigned = Math.floor(srcField.integerSigned/100);&#xD;
Log.write(&quot;LOGWRITE: HHMM = &quot;+srcField.integerSigned);&#xD;
Log.write(&quot;LOGWRITE: Creating time...&quot;);&#xD;
				dstField.time = DateTimeUtil.createTime();&#xD;
Log.write(&quot;LOGWRITE: calling setTime()...&quot;);&#xD;
Log.write(&quot;LOGWRITE:     HH=&quot;+Math.floor(srcField.integerSigned/100));&#xD;
Log.write(&quot;LOGWRITE:     MM=&quot;+srcField.integerSigned%100);&#xD;
Log.write(&quot;LOGWRITE:     SS=&quot;+secs);&#xD;
Log.write(&quot;LOGWRITE:     sss=&quot;+srcField2.integerSigned);&#xD;
				dstField.time.setTime(Math.floor(srcField.integerSigned/100), srcField.integerSigned%100, secs, srcField2.integerSigned);&#xD;
Log.write(&quot;returned from setTime().&quot;);				&#xD;
Log.write(&quot;LOGWRITE:     logging 1&quot;);&#xD;
				result += &quot;|INFO:var secs = SrcField.integerSigned % 100;&quot;;&#xD;
Log.write(&quot;LOGWRITE:     logging 2&quot;);&#xD;
				result += &quot;|INFO:srcField.integerSigned = Math.floor(srcField.integerSigned/100);&quot;;&#xD;
Log.write(&quot;LOGWRITE:     logging 3&quot;);&#xD;
				result += &quot;|INFO:dstField.time = DateTimeUtil.createTime();&quot;;&#xD;
Log.write(&quot;LOGWRITE:     logging 4&quot;);&#xD;
				result += &quot;|INFO:dstField.time.setTime(Math.floor(srcField.integerSigned/100), srcField.integerSigned%100, secs, srcField2.integerSigned);&quot;;&#xD;
Log.write(&quot;LOGWRITE:     logging 5 and finished&quot;);&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else if (src2 == &quot;decimalFixed&quot;) {&#xD;
			if (opCode == &quot;setTime&quot;) {&#xD;
				var secs = srcField.integerSigned % 100;&#xD;
				srcField.integerSigned = Math.floor(srcField.integerSigned/100);&#xD;
				dstField.time = DateTimeUtil.createTime();&#xD;
				dstField.time.setTime(Math.floor(srcField.integerSigned/100), srcField.integerSigned%100, secs, srcField2.decimalFixed8Dot4);&#xD;
				&#xD;
				result += &quot;|INFO:var secs = SrcField.integerSigned % 100;&quot;;&#xD;
				result += &quot;|INFO:srcField.integerSigned = Math.floor(srcField.integerSigned/100);&quot;;&#xD;
				result += &quot;|INFO:dstField.time = DateTimeUtil.createTime();&quot;;&#xD;
				result += &quot;|INFO:dstField.time.setTime(srcField.integerSigned/100, srcField.integerSigned%100, secs, srcField2.decimalFloat);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;setTime&quot;) {&#xD;
				var secs = srcField.integerSigned % 100;&#xD;
				srcField.integerSigned = Math.floor(srcField.integerSigned/100);&#xD;
				dstField.time = DateTimeUtil.createTime();&#xD;
				dstField.time.setTime(srcField.integerSigned/100, srcField.integerSigned%100, secs);&#xD;
				&#xD;
				result += &quot;|INFO:var secs = SrcField.integerSigned % 100;&quot;;&#xD;
				result += &quot;|INFO:srcField.integerSigned = Math.floor(srcField.integerSigned/100);&quot;;&#xD;
				result += &quot;|INFO:dstField.time = DateTimeUtil.createTime();&quot;;&#xD;
				result += &quot;|INFO:dstField.time.setTime(srcField.integerSigned/100, srcField.integerSigned%100, secs);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid src2 value: '&quot; + src2 + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		} 	} else {&#xD;
		result += &quot;|ERROR:Invalid src value: '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;datetime&quot;) {&#xD;
	if (src == &quot;date&quot;) { &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;copy&quot;) {&#xD;
				dstField.datetime = DateTimeUtil.createDatetime();&#xD;
				dstField.datetime.clear();&#xD;
				dstField.datetime.setYear (srcField.date.getYear ());&#xD;
				dstField.datetime.setMonth(srcField.date.getMonth());&#xD;
				dstField.datetime.setDay  (srcField.date.getDay  ());&#xD;
&#xD;
				result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime();&quot;;&#xD;
				result += &quot;|INFO:dstField.datetime.clear();&quot;;&#xD;
				result += &quot;|INFO:dstField.datetime.setYear (srcField.date.getYear ());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetime.setMonth(srcField.date.getMonth());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetime.setDay  (srcField.date.getDay  ());&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else if (src2 == &quot;duration&quot;) {&#xD;
			if (opCode == &quot;add&quot;) {&#xD;
				dstField.datetime = DateTimeUtil.createDatetime(srcField.date, DateTimeUtil.createTime(&quot;00:00:00&quot;));&#xD;
				dstField.datetime.add(srcField2.duration);&#xD;
				result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime(srcField.date, DateTimeUtil.createTime(\&quot;00:00:00\&quot;));dstField.datetime.add(srcField2.duration);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid src2 value: '&quot; + src2 + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		} &#xD;
	} else if (src == &quot;datetime&quot;) { &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;copy&quot;) {&#xD;
				dstField.datetime = DateTimeUtil.createDatetime();&#xD;
				dstField.datetime.clear();&#xD;
				dstField.datetime.setYear  (srcField.datetime.getYear ());&#xD;
				dstField.datetime.setMonth (srcField.datetime.getMonth());&#xD;
				dstField.datetime.setDay   (srcField.datetime.getDay  ());&#xD;
				dstField.datetime.setHour  (srcField.datetime.getHour  ());&#xD;
				dstField.datetime.setMinute(srcField.datetime.getMinute());&#xD;
				dstField.datetime.setSecond(srcField.datetime.getSecond());&#xD;
				&#xD;
				result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime();&quot;;&#xD;
				result += &quot;|INFO:dstField.datetime.clear();&quot;;&#xD;
				result += &quot;|INFO:dstField.datetime.setYear  (srcField.datetime.getYear  ());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetime.setMonth (srcField.datetime.getMonth ());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetime.setDay   (srcField.datetime.getDay   ());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetime.setHour  (srcField.datetime.getHour  ());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetime.setMinute(srcField.datetime.getMinute());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetime.setSecond(srcField.datetime.getSecond());&quot;;&#xD;
			} else if (opCode == &quot;copyCons&quot;) {&#xD;
				dstField.datetime = DateTimeUtil.createDatetime(srcField.datetime);&#xD;
				result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime(srcField.datetime);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else if (src2 == &quot;duration&quot;) {&#xD;
			if (opCode == &quot;add&quot;) {&#xD;
				dstField.datetime = DateTimeUtil.createDatetime(srcField.datetime);&#xD;
				dstField.datetime.add(srcField2.duration);&#xD;
				result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime(srcField.datetime);dstField.datetime.add(srcField2.duration);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid src2 value: '&quot; + src2 + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		} &#xD;
	} else if (src == &quot;datetimetz&quot;) { &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;copy&quot;) {&#xD;
				dstField.datetime = DateTimeUtil.createDatetime();&#xD;
				dstField.datetime.clear();&#xD;
				dstField.datetime.setYear  (srcField.datetimetz.getYear ());&#xD;
				dstField.datetime.setMonth (srcField.datetimetz.getMonth());&#xD;
				dstField.datetime.setDay   (srcField.datetimetz.getDay  ());&#xD;
				dstField.datetime.setHour  (srcField.datetimetz.getHour  ());&#xD;
				dstField.datetime.setMinute(srcField.datetimetz.getMinute());&#xD;
				dstField.datetime.setSecond(srcField.datetimetz.getSecond());&#xD;
				&#xD;
				result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime();&quot;;&#xD;
				result += &quot;|INFO:dstField.datetime.clear();&quot;;&#xD;
				result += &quot;|INFO:dstField.datetime.setYear  (srcField.datetimetz.getYear  ());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetime.setMonth (srcField.datetimetz.getMonth ());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetime.setDay   (srcField.datetimetz.getDay   ());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetime.setHour  (srcField.datetimetz.getHour  ());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetime.setMinute(srcField.datetimetz.getMinute());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetime.setSecond(srcField.datetimetz.getSecond());&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else if (src2 == &quot;duration&quot;) {&#xD;
			if (opCode == &quot;add&quot;) {&#xD;
				dstField.datetime = DateTimeUtil.createDatetime(srcField.datetimetz, false);&#xD;
				dstField.datetime.add(srcField2.duration);&#xD;
				result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime(srcField.datetimetz, false);dstField.datetime.add(srcField2.duration);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid src2 value: '&quot; + src2 + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		} &#xD;
	} else if (src == &quot;time&quot;) { &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;copy&quot;) {&#xD;
				dstField.datetime = DateTimeUtil.createDatetimetz();&#xD;
				dstField.datetime.clear();&#xD;
				dstField.datetime.setHour  (srcField.time.getHour  ());&#xD;
				dstField.datetime.setMinute(srcField.time.getMinute());&#xD;
				dstField.datetime.setSecond(srcField.time.getSecond());&#xD;
				&#xD;
				result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime();&quot;;&#xD;
				result += &quot;|INFO:dstField.datetime.clear();&quot;;&#xD;
				result += &quot;|INFO:dstField.datetime.setHour  (srcField.time.getHour  ());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetime.setMinute(srcField.time.getMinute());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetime.setSecond(srcField.time.getSecond());&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else if (src2 == &quot;duration&quot;) {&#xD;
			if (opCode == &quot;add&quot;) {&#xD;
				dstField.datetime = DateTimeUtil.createDatetime(srcField.time);&#xD;
				dstField.datetime.add(srcField2.duration);&#xD;
				result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime(srcField.time);dstField.datetime.add(srcField2.duration);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid src2 value: '&quot; + src2 + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		} &#xD;
	} else {&#xD;
		result += &quot;|ERROR:Invalid src value: '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;datetimetz&quot;) {&#xD;
	if (src == &quot;date&quot;) { &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;copy&quot;) {&#xD;
				dstField.datetimetz = DateTimeUtil.createDatetimetz();&#xD;
				dstField.datetimetz.clear();&#xD;
				dstField.datetimetz.setYear (srcField.date.getYear ());&#xD;
				dstField.datetimetz.setMonth(srcField.date.getMonth());&#xD;
				dstField.datetimetz.setDay  (srcField.date.getDay  ());&#xD;
				dstField.datetimetz.setHour (0);&#xD;
				dstField.datetimetz.setMinute(0);&#xD;
				dstField.datetimetz.setSecond(0);&#xD;
&#xD;
				result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetimetz();&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.clear();&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.setYear (srcField.date.getYear ());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.setMonth(srcField.date.getMonth());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.setDay  (srcField.date.getDay  ());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.setHour (0);&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.setMinute(0);&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.setSecond(0);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else if (src2 == &quot;duration&quot;) {&#xD;
			if (opCode == &quot;add&quot;) {&#xD;
				dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.date, DateTimeUtil.createTime(&quot;00:00:00&quot;), 0);&#xD;
				dstField.datetimetz.add(srcField2.duration);&#xD;
				result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.date, DateTimeUtil.createTime(\&quot;00:00:00\&quot;), 0);dstField.datetimetz.add(srcField2.duration);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid src2 value: '&quot; + src2 + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		} &#xD;
	} else if (src == &quot;datetime&quot;) { &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;copy&quot;) {&#xD;
				dstField.datetimetz = DateTimeUtil.createDatetimetz();&#xD;
				dstField.datetimetz.clear();&#xD;
				dstField.datetimetz.setYear  (srcField.datetime.getYear ());&#xD;
				dstField.datetimetz.setMonth (srcField.datetime.getMonth());&#xD;
				dstField.datetimetz.setDay   (srcField.datetime.getDay  ());&#xD;
				dstField.datetimetz.setHour  (srcField.datetime.getHour  ());&#xD;
				dstField.datetimetz.setMinute(srcField.datetime.getMinute());&#xD;
				dstField.datetimetz.setSecond(srcField.datetime.getSecond());&#xD;
				&#xD;
				result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetimetz();&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.clear();&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.setYear  (srcField.datetime.getYear  ());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.setMonth (srcField.datetime.getMonth ());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.setDay   (srcField.datetime.getDay   ());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.setHour  (srcField.datetime.getHour  ());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.setMinute(srcField.datetime.getMinute());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.setSecond(srcField.datetime.getSecond());&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else if (src2 == &quot;duration&quot;) {&#xD;
			if (opCode == &quot;add&quot;) {&#xD;
				dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.datetime, 0);&#xD;
				dstField.datetimetz.add(srcField2.duration);&#xD;
				result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.datetime, 0);dstField.datetimetz.add(srcField2.duration);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid src2 value: '&quot; + src2 + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		} &#xD;
	} else if (src == &quot;datetimetz&quot;) { &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;copy&quot;) {&#xD;
				dstField.datetimetz = DateTimeUtil.createDatetimetz();&#xD;
				dstField.datetimetz.clear();&#xD;
				dstField.datetimetz.setYear  (srcField.datetimetz.getYear ());&#xD;
				dstField.datetimetz.setMonth (srcField.datetimetz.getMonth());&#xD;
				dstField.datetimetz.setDay   (srcField.datetimetz.getDay  ());&#xD;
				dstField.datetimetz.setHour  (srcField.datetimetz.getHour  ());&#xD;
				dstField.datetimetz.setMinute(srcField.datetimetz.getMinute());&#xD;
				dstField.datetimetz.setSecond(srcField.datetimetz.getSecond());&#xD;
				&#xD;
				result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetimetz();&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.clear();&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.setYear  (srcField.datetimetz.getYear  ());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.setMonth (srcField.datetimetz.getMonth ());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.setDay   (srcField.datetimetz.getDay   ());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.setHour  (srcField.datetimetz.getHour  ());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.setMinute(srcField.datetimetz.getMinute());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.setSecond(srcField.datetimetz.getSecond());&quot;;&#xD;
			} else if (opCode == &quot;copyCons&quot;) {&#xD;
				dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.datetimetz);&#xD;
				result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.datetimetz);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else if (src2 == &quot;duration&quot;) {&#xD;
			if (opCode == &quot;add&quot;) {&#xD;
				dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.datetimetz);&#xD;
				dstField.datetimetz.add(srcField2.duration);&#xD;
				result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.datetimetz);dstField.datetimetz.add(srcField2.duration);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else if (src2 == &quot;intSigned&quot;) {&#xD;
			if (opCode == &quot;setTZ&quot;) {&#xD;
				srcField.datetimetz.setTimezone(srcField2.integerSigned);&#xD;
				dstField.datetimetz = srcField.datetimetz;&#xD;
				result += &quot;|INFO:srcField.datetimetz.setTimezone(srcField2.integerSigned);&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz = srcField.datetimetz;&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else if (src2 == &quot;intFixed&quot;) {&#xD;
			if (opCode == &quot;setYear&quot;) {&#xD;
				srcField.datetimetz.setYear(srcField2.integerFixed5);&#xD;
				dstField.datetimetz = srcField.datetimetz;&#xD;
				result += &quot;|INFO:srcField.datetimetz.setYear(srcField2.integerFixed5);&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz = srcField.datetimetz;&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid src2 value: '&quot; + src2 + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		} &#xD;
	} else if (src == &quot;time&quot;) { &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;copy&quot;) {&#xD;
				dstField.datetimetz = DateTimeUtil.createDatetimetz();&#xD;
				dstField.datetimetz.clear();&#xD;
				dstField.datetimetz.setHour  (srcField.time.getHour  ());&#xD;
				dstField.datetimetz.setMinute(srcField.time.getMinute());&#xD;
				dstField.datetimetz.setSecond(srcField.time.getSecond());&#xD;
				&#xD;
				result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetimetz();&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.clear();&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.setHour  (srcField.time.getHour  ());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.setMinute(srcField.time.getMinute());&quot;;&#xD;
				result += &quot;|INFO:dstField.datetimetz.setSecond(srcField.time.getSecond());&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else if (src2 == &quot;duration&quot;) {&#xD;
			if (opCode == &quot;add&quot;) {&#xD;
				dstField.datetimetz = DateTimeUtil.createDatetimetz(DateTimeUtil.createDate(), srcField.time, 0);&#xD;
				dstField.datetimetz.add(srcField2.duration);&#xD;
				result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetimetz(DateTimeUtil.createDate(), srcField.time, 0);dstField.datetimetz.add(srcField2.duration);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid src2 value: '&quot; + src2 + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		} &#xD;
	} else {&#xD;
		result += &quot;|ERROR:Invalid src value: '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;decimalFloat&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Datetime Script&quot;;&#xD;
} else if (dst == &quot;decimalFixed&quot;) {&#xD;
	if (src == &quot;date&quot;) { &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;getFracSec&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.date.getFractionalSecond();&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.date.getFractionalSecond();&quot;; 			&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} &#xD;
	} else if (src == &quot;datetime&quot;) { &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;getFracSec&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.datetime.getFractionalSecond();&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.datetime.getFractionalSecond();&quot;; 				&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} &#xD;
	} else if (src == &quot;datetimetz&quot;) { &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;getFracSec&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.datetimetz.getFractionalSecond();&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.datetimetz.getFractionalSecond();&quot;; 			&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} &#xD;
	} else if (src == &quot;time&quot;) { &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;getFracSec&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.time.getFractionalSecond();&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.time.getFractionalSecond();&quot;; 				&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} &#xD;
	} else {&#xD;
		result += &quot;|ERROR:Invalid src value: '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;intSigned&quot;) {&#xD;
	if (src == &quot;date&quot;) {&#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;getDay&quot;) {&#xD;
				dstField.integerSigned = srcField.date.getDay();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.date.getDay();&quot;; 		&#xD;
			} else if (opCode == &quot;getHour&quot;) {&#xD;
				dstField.integerSigned = srcField.date.getHour();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.date.getHour();&quot;; 		&#xD;
			} else if (opCode == &quot;getMs&quot;) {&#xD;
				dstField.integerSigned = srcField.date.getMillisecond();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.date.getMillisecond();&quot;; 		&#xD;
			} else if (opCode == &quot;getMin&quot;) {&#xD;
				dstField.integerSigned = srcField.date.getMinute();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.date.getMinute();&quot;; 		&#xD;
			} else if (opCode == &quot;getMon&quot;) {&#xD;
				dstField.integerSigned = srcField.date.getMonth();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.date.getMonth();&quot;; 		&#xD;
			} else if (opCode == &quot;getSec&quot;) {&#xD;
				dstField.integerSigned = srcField.date.getSecond();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.date.getSecond();&quot;; 		&#xD;
			} else if (opCode == &quot;getTz&quot;) {&#xD;
				dstField.integerSigned = srcField.date.getTimezone();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.date.getTimezone();&quot;; 		&#xD;
			} else if (opCode == &quot;getYear&quot;) {&#xD;
				dstField.integerSigned = srcField.date.getYear();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.date.getYear();&quot;; 		&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}&#xD;
		} else if (src2 == &quot;date&quot;) {&#xD;
			if (opCode == &quot;compare&quot;) {&#xD;
				dstField.integerSigned = srcField.date.compare(srcField2.date);&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.date.compare(srcField2.date);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}&#xD;
		} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		} &#xD;
	} else if (src == &quot;datetime&quot;) {&#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;getDay&quot;) {&#xD;
				dstField.integerSigned = srcField.datetime.getDay();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.datetime.getDay();&quot;; 		&#xD;
			} else if (opCode == &quot;getHour&quot;) {&#xD;
				dstField.integerSigned = srcField.datetime.getHour();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.datetime.getHour();&quot;; 		&#xD;
			} else if (opCode == &quot;getMs&quot;) {&#xD;
				dstField.integerSigned = srcField.datetime.getMillisecond();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.datetime.getMillisecond();&quot;; 		&#xD;
			} else if (opCode == &quot;getMin&quot;) {&#xD;
				dstField.integerSigned = srcField.datetime.getMinute();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.datetime.getMinute();&quot;; 		&#xD;
			} else if (opCode == &quot;getMon&quot;) {&#xD;
				dstField.integerSigned = srcField.datetime.getMonth();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.datetime.getMonth();&quot;; 		&#xD;
			} else if (opCode == &quot;getSec&quot;) {&#xD;
				dstField.integerSigned = srcField.datetime.getSecond();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.datetime.getSecond();&quot;; 		&#xD;
			} else if (opCode == &quot;getTz&quot;) {&#xD;
				dstField.integerSigned = srcField.datetime.getTimezone();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.datetime.getTimezone();&quot;; 		&#xD;
			} else if (opCode == &quot;getYear&quot;) {&#xD;
				dstField.integerSigned = srcField.datetime.getYear();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.datetime.getYear();&quot;; 		&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else if (src2 == &quot;datetime&quot;) {&#xD;
			if (opCode == &quot;compare&quot;) {&#xD;
				dstField.integerSigned = srcField.datetime.compare(srcField2.datetime);&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.datetime.compare(srcField2.datetime);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}&#xD;
		} else {				&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		} &#xD;
	} else if (src == &quot;datetimetz&quot;) { &#xD;
		if (src2 == &quot;-&quot;)&#xD;
		{&#xD;
			if (opCode == &quot;getDay&quot;) {&#xD;
				dstField.integerSigned = srcField.datetimetz.getDay();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.datetimetz.getDay();&quot;; 		&#xD;
			} else if (opCode == &quot;getHour&quot;) {&#xD;
				dstField.integerSigned = srcField.datetimetz.getHour();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.datetimetz.getHour();&quot;; 		&#xD;
			} else if (opCode == &quot;getMs&quot;) {&#xD;
				dstField.integerSigned = srcField.datetimetz.getMillisecond();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.datetimetz.getMillisecond();&quot;; 		&#xD;
			} else if (opCode == &quot;getMin&quot;) {&#xD;
				dstField.integerSigned = srcField.datetimetz.getMinute();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.datetimetz.getMinute();&quot;; 		&#xD;
			} else if (opCode == &quot;getMon&quot;) {&#xD;
				dstField.integerSigned = srcField.datetimetz.getMonth();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.datetimetz.getMonth();&quot;; 		&#xD;
			} else if (opCode == &quot;getSec&quot;) {&#xD;
				dstField.integerSigned = srcField.datetimetz.getSecond();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.datetimetz.getSecond();&quot;; 		&#xD;
			} else if (opCode == &quot;getTz&quot;) {&#xD;
				dstField.integerSigned = srcField.datetimetz.getTimezone();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.datetimetz.getTimezone();&quot;; 		&#xD;
			} else if (opCode == &quot;getYear&quot;) {&#xD;
				dstField.integerSigned = srcField.datetimetz.getYear();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.datetimetz.getYear();&quot;; 		&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else if (src2 == &quot;datetimetz&quot;) {&#xD;
			if (opCode == &quot;compare&quot;) {&#xD;
				dstField.integerSigned = srcField.datetimetz.compare(srcField2.datetimetz);&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.datetimetz.compare(srcField2.datetimetz);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}&#xD;
		} else {				&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		} &#xD;
	} else if (src == &quot;time&quot;) { &#xD;
		if (src2 == &quot;-&quot;)&#xD;
		{&#xD;
			if (opCode == &quot;getDay&quot;) {&#xD;
				dstField.integerSigned = srcField.time.getDay();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.time.getDay();&quot;; 		&#xD;
			} else if (opCode == &quot;getHour&quot;) {&#xD;
				dstField.integerSigned = srcField.time.getHour();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.time.getHour();&quot;; 		&#xD;
			} else if (opCode == &quot;getMs&quot;) {&#xD;
				dstField.integerSigned = srcField.time.getMillisecond();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.time.getMillisecond();&quot;; 		&#xD;
			} else if (opCode == &quot;getMin&quot;) {&#xD;
				dstField.integerSigned = srcField.time.getMinute();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.time.getMinute();&quot;; 		&#xD;
			} else if (opCode == &quot;getMon&quot;) {&#xD;
				dstField.integerSigned = srcField.time.getMonth();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.time.getMonth();&quot;; 		&#xD;
			} else if (opCode == &quot;getSec&quot;) {&#xD;
				dstField.integerSigned = srcField.time.getSecond();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.time.getSecond();&quot;; 		&#xD;
			} else if (opCode == &quot;getTz&quot;) {&#xD;
				dstField.integerSigned = srcField.time.getTimezone();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.time.getTimezone();&quot;; 		&#xD;
			} else if (opCode == &quot;getYear&quot;) {&#xD;
				dstField.integerSigned = srcField.time.getYear();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.time.getYear();&quot;; 		&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}				&#xD;
		} else if (src2 == &quot;time&quot;) {&#xD;
			if (opCode == &quot;compare&quot;) {&#xD;
				dstField.integerSigned = srcField.time.compare(srcField2.time);&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.time.compare(srcField2.time);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}&#xD;
		} else {				&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		} &#xD;
	} else {&#xD;
		result += &quot;|ERROR:Invalid src value: '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;intFixed&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Datetime Script&quot;;&#xD;
} else if (dst == &quot;text&quot;) {&#xD;
	if (src == &quot;date&quot;) 	&#xD;
	{ &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
//			if (opCode == &quot;toString&quot;) {&#xD;
//				dstField.text20 = srcField.date;&#xD;
//				result += &quot;|INFO:dstField.text20 = srcField.date;&quot;; &#xD;
//			} else &#xD;
			if (opCode == &quot;toXml&quot;) {&#xD;
				dstField.text20 = srcField.date.toXMLFormat();&#xD;
				result += &quot;|INFO:dstField.text20 = srcField.date.toXMLFormat();&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		}&#xD;
	} else if (src == &quot;datetime&quot;) 	&#xD;
	{ &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
//			if (opCode == &quot;toString&quot;) {&#xD;
//				dstField.text20 = srcField.datetime;&#xD;
//				result += &quot;|INFO:dstField.text20 = srcField.datetime;&quot;; &#xD;
//			} else &#xD;
			if (opCode == &quot;toXml&quot;) {&#xD;
				dstField.text20 = srcField.datetime.toXMLFormat();&#xD;
				result += &quot;|INFO:dstField.text20 = srcField.datetime.toXMLFormat();&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		}	&#xD;
	} else if (src == &quot;datetimetz&quot;) 	&#xD;
	{ &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
//			if (opCode == &quot;toString&quot;) {&#xD;
//				dstField.text20 = srcField.datetimetz;&#xD;
//				result += &quot;|INFO:dstField.text20 = srcField.datetimetz;&quot;; &#xD;
//			} else &#xD;
			if (opCode == &quot;toXml&quot;) {&#xD;
				dstField.text20 = srcField.datetimetz.toXMLFormat();&#xD;
				result += &quot;|INFO:dstField.text20 = srcField.datetimetz.toXMLFormat();&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		}	&#xD;
	} else if (src == &quot;time&quot;) 	&#xD;
	{ &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
//			if (opCode == &quot;toString&quot;) {&#xD;
//				dstField.text20 = srcField.time;&#xD;
//				result += &quot;|INFO:dstField.text20 = srcField.time;&quot;; &#xD;
//			} else &#xD;
			if (opCode == &quot;toXml&quot;) {&#xD;
				dstField.text20 = srcField.time.toXMLFormat();&#xD;
				result += &quot;|INFO:dstField.text20 = srcField.time.toXMLFormat();&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
			}&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
		}&#xD;
	} else {&#xD;
		result += &quot;|ERROR:Invalid src value: '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Datetime Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;duration&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Datetime Script&quot;;&#xD;
} else if (dst == &quot;id&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Datetime Script&quot;;&#xD;
} else if (dst == &quot;uri&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Datetime Script&quot;;&#xD;
} else {&#xD;
	result += &quot;|ERROR:Invalid dst value: '&quot; + dst + &quot;'&quot;;&#xD;
} &#xD;
&#xD;
/////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Leave:Datetime Script&quot;;&#xD;
&#xD;
&#xD;
</xpdl2:Script>
              </xpdl2:TaskScript>
            </xpdl2:Task>
          </xpdl2:Implementation>
          <xpdl2:ExtendedAttributes>
            <xpdl2:ExtendedAttribute Name=""/>
          </xpdl2:ExtendedAttributes>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="64.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="161.0">
              <xpdl2:Coordinates XCoordinate="474.0" YCoordinate="695.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
          <xpdl2:Extensions/>
          <xpdExt:ActivityResourcePatterns>
            <xpdExt:AllocationStrategy xpdExt:Strategy="SYSTEM_DETERMINED"/>
          </xpdExt:ActivityResourcePatterns>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMp6ImnNEeCvfK09LgLLfw" Name="ipeScriptUtilScript" xpdExt:Visibility="Private" xpdExt:DisplayName="ipeScriptUtil Script" iProcessExt:StepIndex="10">
          <xpdl2:Implementation>
            <xpdl2:Task>
              <xpdl2:TaskScript>
                <xpdl2:Script ScriptGrammar="JavaScript">/////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Enter:ipeScriptUtil(&quot;+opScript+&quot;) Script (dst = '&quot;+dst+&quot;' type)&quot;;&#xD;
var scr = &quot;&quot;;&#xD;
if (opScript == &quot;ipeScript&quot;) {&#xD;
	scr = &quot;IpeScriptUtil&quot;;&#xD;
} else if (opScript == &quot;scriptUtl&quot;) {&#xD;
    scr = &quot;ScriptUtil&quot;;&#xD;
} else {&#xD;
    scr = &quot;INVALID SCRIPT NAME!!!&quot;;&#xD;
}&#xD;
/////////////////////////////////////////////////////////////&#xD;
// Process the dst parameter&#xD;
if (dst == &quot;attach&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
} else if (dst == &quot;bool&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
} else if (dst == &quot;date&quot;) {&#xD;
    if (src == &quot;text&quot; &amp;&amp; src2 == &quot;-&quot;) {&#xD;
		if (opCode == &quot;date&quot;) {&#xD;
			var ix = srcField.text20.indexOf(&quot;:&quot;);&#xD;
			var day=0,month=0,year=0;&#xD;
			if (ix > 0)&#xD;
			{&#xD;
				day = Number(srcField.text20.substring(0,ix));&#xD;
				srcField.text20 = srcField.text20.substring(ix+1, srcField.text20.length);&#xD;
				ix = srcField.text20.indexOf(&quot;:&quot;);&#xD;
				if (ix > 0)&#xD;
				{&#xD;
					month = Number(srcField.text20.substring(0,ix));&#xD;
					year  = Number(srcField.text20.substring(ix+1, srcField.text20.length));&#xD;
				&#xD;
					if (opScript == &quot;ipeScript&quot;) {&#xD;
						dstField.date = IpeScriptUtil.DATE(day, month, year);&#xD;
					} else {&#xD;
						dstField.date =    ScriptUtil.DATE(day, month, year);&#xD;
					}&#xD;
				&#xD;
					result += &quot;|INFO:dstField.date = &quot;+scr+&quot;.DATE(&quot;+day+&quot;, &quot;+month+&quot;, &quot;+year+&quot;);&quot;;&#xD;
				}&#xD;
			}&#xD;
			else&#xD;
			{&#xD;
				result += &quot;|ERROR:Invalid seperator for indexes&quot;;&#xD;
			} &#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
		}&#xD;
   } else if (src == &quot;date&quot; &amp;&amp; src2 == &quot;text&quot;) {&#xD;
		if (opCode == &quot;calcdate&quot;) {&#xD;
			var ix = srcField2.text20.indexOf(&quot;:&quot;);&#xD;
			var day=0,week=0,month=0,year=0;&#xD;
			if (ix > 0)&#xD;
			{&#xD;
				day = Number(srcField2.text20.substring(0,ix));&#xD;
				srcField2.text20 = srcField2.text20.substring(ix+1, srcField2.text20.length);&#xD;
				ix = srcField2.text20.indexOf(&quot;:&quot;);&#xD;
				if (ix > 0)&#xD;
				{&#xD;
					week = Number(srcField2.text20.substring(0,ix));&#xD;
					srcField2.text20 = srcField2.text20.substring(ix+1, srcField2.text20.length);&#xD;
					ix = srcField2.text20.indexOf(&quot;:&quot;);&#xD;
					if (ix > 0)&#xD;
					{&#xD;
						month = Number(srcField2.text20.substring(0,ix));&#xD;
						year  = Number(srcField2.text20.substring(ix+1, srcField2.text20.length));&#xD;
				&#xD;
						if (opScript == &quot;ipeScript&quot;) {&#xD;
							dstField.date = IpeScriptUtil.CALCDATE(srcField.date, day, week, month, year);&#xD;
						} else {&#xD;
							dstField.date =    ScriptUtil.CALCDATE(srcField.date, day, week, month, year);&#xD;
						}&#xD;
				&#xD;
						result += &quot;|INFO:dstField.date = &quot;+scr+&quot;.DATE(&quot;+srcField.date+&quot;, &quot;+day+&quot;, &quot;+week+&quot;, &quot;+month+&quot;, &quot;+year+&quot;);&quot;;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			else&#xD;
			{&#xD;
				result += &quot;|ERROR:Invalid seperator for indexes&quot;;&#xD;
			} &#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
		}&#xD;
   } else if (src == &quot;date&quot; &amp;&amp; src2 == &quot;duration&quot;) {&#xD;
		if (opCode == &quot;addWT&quot;) {&#xD;
			dstField.date = ScriptUtil.addWorkingTime(srcField.date,srcField2.duration,&quot;SYSTEM&quot;);&#xD;
			result += &quot;|INFO:dstField.date = ScriptUtil.addWorkingTime(srcField.date,srcField2.duration,\&quot;SYSTEM\&quot;);&quot;;&#xD;
		} else if (opCode == &quot;addWTBC&quot;) {&#xD;
			// Bad calendar name!&#xD;
			dstField.date = ScriptUtil.addWorkingTime(srcField.date,srcField2.duration,&quot;SSTM&quot;);&#xD;
			result += &quot;|INFO:dstField.date = ScriptUtil.addWorkingTime(srcField.date,srcField2.duration,\&quot;SSTM\&quot;);&quot;;&#xD;
		} else if (opCode == &quot;subWT&quot;) {&#xD;
			dstField.date = ScriptUtil.subtractWorkingTime(srcField.date,srcField2.duration,&quot;SYSTEM&quot;);&#xD;
			result += &quot;|INFO:dstField.date = ScriptUtil.subtractWorkingTime(srcField.date,srcField2.duration,\&quot;SYSTEM\&quot;);&quot;;&#xD;
		} else if (opCode == &quot;subWTBC&quot;) {&#xD;
			dstField.date = ScriptUtil.subtractWorkingTime(srcField.date,srcField2.duration,&quot;SSTM&quot;);&#xD;
			result += &quot;|INFO:dstField.date = ScriptUtil.subtractWorkingTime(srcField.date,srcField2.duration,\&quot;SSTM\&quot;);&quot;;&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
		}&#xD;
	} else {&#xD;
			result += &quot;|ERROR:Invalid parameter combination: src/src2 type '&quot; +src+&quot;/&quot;+src2+&quot;' with dst type '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;time&quot;) {&#xD;
    if (src == &quot;time&quot; &amp;&amp; src2 == &quot;text&quot;) {&#xD;
		if (opCode == &quot;calctime&quot;) {&#xD;
			var ix = srcField2.text20.indexOf(&quot;:&quot;);&#xD;
			var hours=0,mins=0;&#xD;
			if (ix > 0)&#xD;
			{&#xD;
				hours = Number(srcField2.text20.substring(0,ix));&#xD;
				mins = Number(srcField2.text20.substring(ix+1, srcField2.text20.length));&#xD;
				&#xD;
				if (opScript == &quot;ipeScript&quot;) {&#xD;
					dstField.time = IpeScriptUtil.CALCTIME(srcField.time, hours, mins);&#xD;
				} else {&#xD;
					dstField.time =    ScriptUtil.CALCTIME(srcField.time, hours, mins);&#xD;
				}&#xD;
				&#xD;
				result += &quot;|INFO:dstField.time = &quot;+scr+&quot;.CALCTIME(&quot;+srcField.time+&quot;, &quot;+hours+&quot;, &quot;+mins+&quot;); Result=[&quot;+dstField.time+&quot;]&quot;;&#xD;
			}&#xD;
			else&#xD;
			{&#xD;
				result += &quot;|ERROR:Invalid seperator for indexes&quot;;&#xD;
			} &#xD;
	} else {&#xD;
			result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
		}&#xD;
   } else if (src == &quot;time&quot; &amp;&amp; src2 == &quot;duration&quot;) {&#xD;
		if (opCode == &quot;addWT&quot;) {&#xD;
			dstField.time = ScriptUtil.addWorkingTime(srcField.time,srcField2.duration,&quot;SYSTEM&quot;);&#xD;
			result += &quot;|INFO:dstField.time = ScriptUtil.addWorkingTime(srcField.time,srcField2.duration,\&quot;SYSTEM\&quot;);&quot;;&#xD;
		} else if (opCode == &quot;addWTBC&quot;) {&#xD;
			// Bad calendar name!&#xD;
			dstField.time = ScriptUtil.addWorkingTime(srcField.time,srcField2.duration,&quot;SSTM&quot;);&#xD;
			result += &quot;|INFO:dstField.time = ScriptUtil.addWorkingTime(srcField.time,srcField2.duration,\&quot;SSTM\&quot;);&quot;;&#xD;
		} else if (opCode == &quot;subWT&quot;) {&#xD;
			dstField.time = ScriptUtil.subtractWorkingTime(srcField.time,srcField2.duration,&quot;SYSTEM&quot;);&#xD;
			result += &quot;|INFO:dstField.time = ScriptUtil.subtractWorkingTime(srcField.time,srcField2.duration,\&quot;SYSTEM\&quot;);&quot;;&#xD;
		} else if (opCode == &quot;subWTBC&quot;) {&#xD;
			dstField.time = ScriptUtil.subtractWorkingTime(srcField.time,srcField2.duration,&quot;SSTM&quot;);&#xD;
			result += &quot;|INFO:dstField.time = ScriptUtil.subtractWorkingTime(srcField.time,srcField2.duration,\&quot;SSTM\&quot;);&quot;;&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
		}&#xD;
	} else {&#xD;
			result += &quot;|ERROR:Invalid parameter combination: src/src2 type '&quot; +src+&quot;/&quot;+src2+&quot;' with dst type '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;datetime&quot;) {&#xD;
	 if (src == &quot;datetime&quot; &amp;&amp; src2 == &quot;duration&quot;) {&#xD;
		if (opCode == &quot;addWT&quot;) {&#xD;
			dstField.datetime = ScriptUtil.addWorkingTime(srcField.datetime,srcField2.duration,&quot;SYSTEM&quot;);&#xD;
			result += &quot;|INFO:dstField.datetime = ScriptUtil.addWorkingTime(srcField.datetime,srcField2.duration,\&quot;SYSTEM\&quot;);&quot;;&#xD;
		} else if (opCode == &quot;addWTBC&quot;) {&#xD;
			// Bad calendar name!&#xD;
			dstField.datetime = ScriptUtil.addWorkingTime(srcField.datetime,srcField2.duration,&quot;SSTM&quot;);&#xD;
			result += &quot;|INFO:dstField.datetime = ScriptUtil.addWorkingTime(srcField.datetime,srcField2.duration,\&quot;SSTM\&quot;);&quot;;&#xD;
		} else if (opCode == &quot;subWT&quot;) {&#xD;
			dstField.datetime = ScriptUtil.subtractWorkingTime(srcField.datetime,srcField2.duration,&quot;SYSTEM&quot;);&#xD;
			result += &quot;|INFO:dstField.datetime = ScriptUtil.subtractWorkingTime(srcField.datetime,srcField2.duration,\&quot;SYSTEM\&quot;);&quot;;&#xD;
		} else if (opCode == &quot;subWTBC&quot;) {&#xD;
			dstField.datetime = ScriptUtil.subtractWorkingTime(srcField.datetime,srcField2.duration,&quot;SSTM&quot;);&#xD;
			result += &quot;|INFO:dstField.datetime = ScriptUtil.subtractWorkingTime(srcField.datetime,srcField2.duration,\&quot;SSTM\&quot;);&quot;;&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
		}&#xD;
	} else {&#xD;
			result += &quot;|ERROR:Invalid parameter combination: src/src2 type '&quot; +src+&quot;/&quot;+src2+&quot;' with dst type '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;datetimetz&quot;) {&#xD;
	 if (src == &quot;datetimetz&quot; &amp;&amp; src2 == &quot;duration&quot;) {&#xD;
		if (opCode == &quot;addWT&quot;) {&#xD;
			dstField.datetimetz = ScriptUtil.addWorkingTime(srcField.datetimetz,srcField2.duration,&quot;SYSTEM&quot;);&#xD;
			result += &quot;|INFO:dstField.datetimetz = ScriptUtil.addWorkingTime(srcField.datetimetz,srcField2.duration,\&quot;SYSTEM\&quot;);&quot;;&#xD;
		} else if (opCode == &quot;addWTBC&quot;) {&#xD;
			// Bad calendar name!&#xD;
			dstField.datetimetz = ScriptUtil.addWorkingTime(srcField.datetimetz,srcField2.duration,&quot;SSTM&quot;);&#xD;
			result += &quot;|INFO:dstField.datetimetz = ScriptUtil.addWorkingTime(srcField.datdatetimetzetime,srcField2.duration,\&quot;SSTM\&quot;);&quot;;&#xD;
		} else if (opCode == &quot;subWT&quot;) {&#xD;
			dstField.datetimetz = ScriptUtil.subtractWorkingTime(srcField.datetimetz,srcField2.duration,&quot;SYSTEM&quot;);&#xD;
			result += &quot;|INFO:dstField.datetimetz = ScriptUtil.subtractWorkingTime(srcField.datetimetz,srcField2.duration,\&quot;SYSTEM\&quot;);&quot;;&#xD;
		} else if (opCode == &quot;subWTBC&quot;) {&#xD;
			dstField.datetimetz = ScriptUtil.subtractWorkingTime(srcField.datetimetz,srcField2.duration,&quot;SSTM&quot;);&#xD;
			result += &quot;|INFO:dstField.datetimetz = ScriptUtil.subtractWorkingTime(srcField.datetimetz,srcField2.duration,\&quot;SSTM\&quot;);&quot;;&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
		}&#xD;
	} else {&#xD;
			result += &quot;|ERROR:Invalid parameter combination: src/src2 type '&quot; +src+&quot;/&quot;+src2+&quot;' with dst type '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;decimalFloat&quot;) {	&#xD;
    if (src == &quot;text&quot; &amp;&amp; src2 == &quot;-&quot;) {&#xD;
		if (opCode == &quot;num&quot;) {&#xD;
			if (opScript == &quot;ipeScript&quot;) {&#xD;
				dstField.decimalFloat = IpeScriptUtil.NUM(srcField.text20);&#xD;
			} else {&#xD;
				dstField.decimalFloat =    ScriptUtil.NUM(srcField.text20);&#xD;
			}&#xD;
			result += &quot;|INFO:dstField.decimalFloat = &quot;+scr+&quot;.NUM(srcField.text20);&quot;; &#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
		}&#xD;
	} else {&#xD;
			result += &quot;|ERROR:Invalid parameter combination: src/src2 type '&quot; +src+&quot;/&quot;+src2+&quot;' with dst type '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;decimalFixed&quot;) {&#xD;
   if (src == &quot;duration&quot; &amp;&amp; src2 == &quot;-&quot;) {&#xD;
		if (opCode == &quot;getFractS&quot;) {&#xD;
			dstField.decimalFixed8Dot4 = ScriptUtil.getFractionalSecond(srcField.duration);&#xD;
			result += &quot;|INFO:dstField.decimalFixed8Dot4 = ScriptUtil.getFractionalSecond(srcField.duration);&quot;; &#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
		}&#xD;
	} else {&#xD;
			result += &quot;|ERROR:Invalid parameter combination: src/src2 type '&quot; +src+&quot;/&quot;+src2+&quot;' with dst type '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;intSigned&quot;) {&#xD;
	if (src == &quot;date&quot;) { &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;daynum&quot;) {&#xD;
				if (opScript == &quot;ipeScript&quot;) {&#xD;
					dstField.integerSigned = IpeScriptUtil.DAYNUM(srcField.date);&#xD;
				} else {&#xD;
					dstField.integerSigned =    ScriptUtil.DAYNUM(srcField.date);&#xD;
				}&#xD;
				result += &quot;|INFO:dstField.integerSigned = &quot;+scr+&quot;.DAYNUM(srcField.date);&quot;; &#xD;
			} else if (opCode == &quot;monthnum&quot;) {&#xD;
				if (opScript == &quot;ipeScript&quot;) {&#xD;
					dstField.integerSigned = IpeScriptUtil.MONTHNUM(srcField.date);&#xD;
				} else {&#xD;
					dstField.integerSigned =    ScriptUtil.MONTHNUM(srcField.date);&#xD;
				}&#xD;
				result += &quot;|INFO:dstField.integerSigned = &quot;+scr+&quot;.MONTHNUM(srcField.date);&quot;;&#xD;
 			} else if (opCode == &quot;weeknum&quot;) {&#xD;
				if (opScript == &quot;ipeScript&quot;) {&#xD;
					dstField.integerSigned = IpeScriptUtil.WEEKNUM(srcField.date);&#xD;
				} else {&#xD;
					dstField.integerSigned =    ScriptUtil.WEEKNUM(srcField.date);&#xD;
				}&#xD;
				result += &quot;|INFO:dstField.integerSigned = &quot;+scr+&quot;.WEEKNUM(srcField.date);&quot;; &#xD;
 			} else if (opCode == &quot;yearnum&quot;) {&#xD;
				if (opScript == &quot;ipeScript&quot;) {&#xD;
					dstField.integerSigned = IpeScriptUtil.YEARNUM(srcField.date);&#xD;
				} else {&#xD;
					dstField.integerSigned =    ScriptUtil.YEARNUM(srcField.date);&#xD;
				}&#xD;
				result += &quot;|INFO:dstField.integerSigned = &quot;+scr+&quot;.YEARNUM(srcField.date);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
			}&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid parameter combination: src/src2 type '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst type '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
		}&#xD;
	} else if (src == &quot;time&quot;) { &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;hournum&quot;) {&#xD;
				if (opScript == &quot;ipeScript&quot;) {&#xD;
					dstField.integerSigned = IpeScriptUtil.HOURNUM(srcField.time);&#xD;
				} else {&#xD;
					dstField.integerSigned =    ScriptUtil.HOURNUM(srcField.time);&#xD;
				}&#xD;
				result += &quot;|INFO:dstField.integerSigned = &quot;+scr+&quot;.HOURNUM(srcField.time);&quot;; &#xD;
			} else if (opCode == &quot;minsnum&quot;) {&#xD;
				if (opScript == &quot;ipeScript&quot;) {&#xD;
					dstField.integerSigned = IpeScriptUtil.MINSNUM(srcField.time);&#xD;
				} else {&#xD;
					dstField.integerSigned =    ScriptUtil.MINSNUM(srcField.time);&#xD;
				}&#xD;
				result += &quot;|INFO:dstField.integerSigned = &quot;+scr+&quot;.MINSNUM(srcField.time);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
			}&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid parameter combination: src/src2 type '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst type '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
		}&#xD;
	} else if (src == &quot;text&quot;) {&#xD;
		if (src2 == &quot;text&quot;) {&#xD;
			if (opCode == &quot;rsearch&quot;) {&#xD;
				if (opScript == &quot;ipeScript&quot;) {&#xD;
					dstField.integerSigned = IpeScriptUtil.RSEARCH(srcField.text20, srcField2.text20);&#xD;
				} else {&#xD;
					dstField.integerSigned =    ScriptUtil.RSEARCH(srcField.text20, srcField2.text20);&#xD;
				}&#xD;
				result += &quot;|INFO:dstField.integerSigned = &quot;+scr+&quot;.RSEARCH(srcField.text20, srcField2.text20);&quot;; &#xD;
			} else if (opCode == &quot;search&quot;) {&#xD;
				if (opScript == &quot;ipeScript&quot;) {&#xD;
					dstField.integerSigned = IpeScriptUtil.SEARCH(srcField.text20, srcField2.text20);&#xD;
				} else {&#xD;
					dstField.integerSigned =    ScriptUtil.SEARCH(srcField.text20, srcField2.text20);&#xD;
				}&#xD;
				result += &quot;|INFO:dstField.integerSigned = &quot;+scr+&quot;.SEARCH(srcField.text20, srcField2.text20);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
			}&#xD;
		} else if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;strlen&quot;) {&#xD;
				if (opScript == &quot;ipeScript&quot;) {&#xD;
					dstField.integerSigned = IpeScriptUtil.STRLEN(srcField.text20);&#xD;
				} else {&#xD;
					dstField.integerSigned =    ScriptUtil.STRLEN(srcField.text20);&#xD;
				}&#xD;
				result += &quot;|INFO:dstField.integerSigned = &quot;+scr+&quot;.STRLEN(srcField.text20));&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
			}&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid parameter combination: src/src2 type '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst type '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
		}&#xD;
   } else if (src == &quot;duration&quot; &amp;&amp; src2 == &quot;-&quot;) {&#xD;
		if (opCode == &quot;getFractS&quot;) {&#xD;
			dstField.integerSigned = ScriptUtil.getMilliseconds(srcField.duration);&#xD;
			result += &quot;|INFO:dstField.integerSigned = ScriptUtil.getMilliseconds(srcField.duration);&quot;; &#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
		}&#xD;
	} else {&#xD;
			result += &quot;|ERROR:Invalid parameter combination: src/src2 type '&quot; +src+&quot;/&quot;+src2+&quot;' with dst type '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;intFixed&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
} else if (dst == &quot;text&quot;) {&#xD;
	if (src == &quot;date&quot;) { &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;datestr&quot;) {&#xD;
				if (opScript == &quot;ipeScript&quot;) {&#xD;
					dstField.text20 = IpeScriptUtil.DATESTR(srcField.date);&#xD;
				} else {&#xD;
					dstField.text20 =    ScriptUtil.DATESTR(srcField.date);&#xD;
				}&#xD;
				result += &quot;|INFO:dstField.text20 = &quot;+scr+&quot;.DATESTR(srcField.date);&quot;; &#xD;
			} else if (opCode == &quot;daystr&quot;) {&#xD;
				if (opScript == &quot;ipeScript&quot;) {&#xD;
					dstField.text20 = IpeScriptUtil.DAYSTR(srcField.date);&#xD;
				} else {&#xD;
					dstField.text20 =    ScriptUtil.DAYSTR(srcField.date);&#xD;
				}&#xD;
				result += &quot;|INFO:dstField.text20 = &quot;+scr+&quot;.DAYSTR(srcField.date);&quot;;&#xD;
 			} else if (opCode == &quot;monthstr&quot;) {&#xD;
				if (opScript == &quot;ipeScript&quot;) {&#xD;
					dstField.text20 = IpeScriptUtil.MONTHSTR(srcField.date);&#xD;
				} else {&#xD;
					dstField.text20 =    ScriptUtil.MONTHSTR(srcField.date);&#xD;
				}&#xD;
				result += &quot;|INFO:dstField.text20 = &quot;+scr+&quot;.MONTHSTR(srcField.date);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
			}&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid parameter combination: src/src2 type '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst type '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
		}&#xD;
	} else if (src == &quot;time&quot;) { &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;timestr&quot;) {&#xD;
				if (opScript == &quot;ipeScript&quot;) {&#xD;
					dstField.text20 = IpeScriptUtil.TIMESTR(srcField.time);&#xD;
				} else {&#xD;
					dstField.text20 =    ScriptUtil.TIMESTR(srcField.time);&#xD;
				}&#xD;
				result += &quot;|INFO:dstField.text20 = &quot;+scr+&quot;.DATESTR(srcField.time);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
			}&#xD;
		} else if (src2 == &quot;text&quot;) {&#xD;
			if (opCode == &quot;calctime&quot;) {&#xD;
				var ix = srcField2.text20.indexOf(&quot;:&quot;);&#xD;
				var hours=0,mins=0;&#xD;
				if (ix > 0)&#xD;
				{&#xD;
					hours = Number(srcField2.text20.substring(0,ix));&#xD;
					mins = Number(srcField2.text20.substring(ix+1, srcField2.text20.length));&#xD;
					&#xD;
					if (opScript == &quot;ipeScript&quot;) {&#xD;
						dstField.time          = IpeScriptUtil.CALCTIME(srcField.time, hours, mins);&#xD;
						dstField.integerSigned = IpeScriptUtil.CALCTIMECARRYOVER(srcField.time, hours, mins);&#xD;
					} else {&#xD;
						dstField.time          = ScriptUtil.CALCTIME(srcField.time, hours, mins);&#xD;
						dstField.integerSigned = ScriptUtil.CALCTIMECARRYOVER(srcField.time, hours, mins);&#xD;
					}&#xD;
					dstField.text20 = dstField.time + &quot; + &quot; + dstField.integerSigned + &quot; days&quot;;&#xD;
					result += &quot;|INFO:dstField.time = &quot;+scr+&quot;.CALCTIME(&quot;+srcField.time+&quot;, &quot;+hours+&quot;, &quot;+mins+&quot;); Result=[&quot;+dstField.time+&quot;]; dstField.integerSigned = &quot;+scr+&quot;.CALCTIMECARRYOVER(&quot;+srcField.time+&quot;, &quot;+hours+&quot;, &quot;+mins+&quot;); Result=[&quot;+dstField.integerSigned+&quot;];&quot;;&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					result += &quot;|ERROR:Invalid seperator for indexes&quot;;&#xD;
				} &#xD;
			}&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid parameter combination: src/src2 type '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst type '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
		}&#xD;
	} else if (src == &quot;text&quot;) {&#xD;
		if (src2 == &quot;intSigned&quot;) {&#xD;
			if (opCode == &quot;strconvert&quot;) {&#xD;
				if (opScript == &quot;ipeScript&quot;) {&#xD;
					dstField.text20 = IpeScriptUtil.STRCONVERT(srcField.text20, srcField2.integerSigned);&#xD;
				} else {&#xD;
					dstField.text20 =    ScriptUtil.STRCONVERT(srcField.text20, srcField2.integerSigned);&#xD;
				}&#xD;
				result += &quot;|INFO:dstField.text20 = &quot;+scr+&quot;.STRCONVERT(srcField.date, srcField2.intSigned);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
			}&#xD;
		} else if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;specialchars&quot;) {&#xD;
				if (opScript == &quot;ipeScript&quot;) {&#xD;
					dstField.text20 = srcField.text20;&#xD;
				} else {&#xD;
					dstField.text20 = srcField.text20;&#xD;
				}&#xD;
				result += &quot;|INFO:dstField.text20 = &quot;+scr+&quot;.SPECIALCHARS(srcField.text20));&quot;; &#xD;
			} else if (opCode == &quot;strtolower&quot;) {&#xD;
				if (opScript == &quot;ipeScript&quot;) {&#xD;
					dstField.text20 = IpeScriptUtil.STRTOLOWER(srcField.text20);&#xD;
				} else {&#xD;
					dstField.text20 =    ScriptUtil.STRTOLOWER(srcField.text20);&#xD;
				}&#xD;
				result += &quot;|INFO:dstField.text20 = &quot;+scr+&quot;.STRTOLOWER(srcField.text20));&quot;; &#xD;
			} else if (opCode == &quot;strtoupper&quot;) {&#xD;
				if (opScript == &quot;ipeScript&quot;) {&#xD;
					dstField.text20 = IpeScriptUtil.STRTOUPPER(srcField.text20);&#xD;
				} else {&#xD;
					dstField.text20 =    ScriptUtil.STRTOUPPER(srcField.text20);&#xD;
				}&#xD;
				result += &quot;|INFO:dstField.text20 = &quot;+scr+&quot;.STRTOUPPER(srcField.text20));&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
			}&#xD;
		} else if (src2 == &quot;text&quot;) {&#xD;
			if (opCode == &quot;substr&quot;) {&#xD;
				var ix = srcField2.text20.indexOf(&quot;:&quot;);&#xD;
				var start=0,end=0;&#xD;
				if (ix > 0)&#xD;
				{&#xD;
					start = Number(srcField2.text20.substring(0,ix));&#xD;
					end   = Number(srcField2.text20.substring(ix+1, srcField2.text20.length));&#xD;
					if (opScript == &quot;ipeScript&quot;) {&#xD;
						dstField.text20 = IpeScriptUtil.SUBSTR(srcField.text20, start, end);&#xD;
					} else {&#xD;
						dstField.text20 =    ScriptUtil.SUBSTR(srcField.text20, start, end);&#xD;
					}&#xD;
					if (dstField.text20 == &quot;&quot;)&#xD;
					{&#xD;
						dstField.text20 = &quot;-&quot;;&#xD;
						result += &quot;|INFO:dstField.text20: converted blank value to '-'&quot;;&#xD;
					}&#xD;
					result += &quot;|INFO:dstField.text20 = &quot;+scr+&quot;.SUBSTR(srcField.text20, &quot;+start+&quot;, &quot;+end+&quot;);&quot;;&#xD;
				}&#xD;
				else&#xD;
				{&#xD;
					result += &quot;|ERROR:Invalid seperator for indexes&quot;;&#xD;
				} &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
			}&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid parameter combination: src/src2 type '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst type '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
		}&#xD;
	} else if (src == &quot;decimalFloat&quot;) {&#xD;
		if (src2 == &quot;intSigned&quot;) {&#xD;
			if (opCode == &quot;str&quot;) {&#xD;
				if (opScript == &quot;ipeScript&quot;) {&#xD;
					dstField.text20 = IpeScriptUtil.STR(srcField.decimalFloat, srcField2.integerSigned);&#xD;
				} else {&#xD;
					dstField.text20 =    ScriptUtil.STR(srcField.decimalFloat, srcField2.integerSigned);&#xD;
				}&#xD;
				result += &quot;|INFO:dstField.text20 = &quot;+scr+&quot;.STR(srcField.decimalFloat, srcField2.integerSigned);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
			}&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid parameter combination: src/src2 type '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst type '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
		}&#xD;
	} else {&#xD;
			result += &quot;|ERROR:Invalid parameter combination: src type '&quot; +src+ &quot;' with dst type '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;duration&quot;) {&#xD;
	if (src == &quot;datetime&quot;) {&#xD;
		if (src2 == &quot;datetime&quot;) {&#xD;
			if (opCode == &quot;subtract&quot;) {&#xD;
				dstField.duration = ScriptUtil.subtract(srcField.datetime, srcField2.datetime);&#xD;
				result += &quot;|INFO:dstField.duration = ScriptUtil.subtract(srcField.datetime, srcField2.datetime);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
			}&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid parameter combination: src/src2 type '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst type '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
		}&#xD;
	} else if (src == &quot;date&quot;) {&#xD;
		if (src2 == &quot;date&quot;) {&#xD;
			if (opCode == &quot;subtract&quot;) {&#xD;
				dstField.duration = ScriptUtil.subtract(srcField.date, srcField2.date);&#xD;
				result += &quot;|INFO:dstField.duration = ScriptUtil.subtract(srcField.date, srcField2.date);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
			}&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid parameter combination: src/src2 type '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst type '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
		}&#xD;
	} else if (src == &quot;time&quot;) {&#xD;
		if (src2 == &quot;time&quot;) {&#xD;
			if (opCode == &quot;subtract&quot;) {&#xD;
				dstField.duration = ScriptUtil.subtract(srcField.time, srcField2.time);&#xD;
				result += &quot;|INFO:dstField.duration = ScriptUtil.subtract(srcField.time, srcField2.time);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
			}&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid parameter combination: src/src2 type '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst type '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
		}&#xD;
	} else if (src == &quot;datetimetz&quot;) {&#xD;
		if (src2 == &quot;datetimetz&quot;) {&#xD;
			if (opCode == &quot;subtract&quot;) {&#xD;
				dstField.duration = ScriptUtil.subtract(srcField.datetimetz, srcField2.datetimetz);&#xD;
				result += &quot;|INFO:dstField.duration = ScriptUtil.subtract(srcField.datetimetz, srcField2.datetimetz);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
			}&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid parameter combination: src/src2 type '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst type '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
		}&#xD;
	} else {&#xD;
			result += &quot;|ERROR:Invalid parameter combination: src type '&quot; +src+ &quot;' with dst type '&quot;+ dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;id&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
} else if (dst == &quot;uri&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in ipeScriptUtil Script&quot;;&#xD;
} else {&#xD;
	result += &quot;|ERROR:Invalid dst value: '&quot; + dst + &quot;'&quot;;&#xD;
} &#xD;
&#xD;
&#xD;
/////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Leave:ipeScriptUtil Script&quot;;&#xD;
&#xD;
</xpdl2:Script>
              </xpdl2:TaskScript>
            </xpdl2:Task>
          </xpdl2:Implementation>
          <xpdl2:ExtendedAttributes>
            <xpdl2:ExtendedAttribute Name=""/>
          </xpdl2:ExtendedAttributes>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="64.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="150.0">
              <xpdl2:Coordinates XCoordinate="407.0" YCoordinate="855.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
          <xpdl2:Extensions/>
          <xpdExt:ActivityResourcePatterns>
            <xpdExt:AllocationStrategy xpdExt:Strategy="SYSTEM_DETERMINED"/>
          </xpdExt:ActivityResourcePatterns>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMp6I2nNEeCvfK09LgLLfw" Name="resultDoneGate" xpdExt:DisplayName="resultDoneGate" iProcessExt:StepIndex="11">
          <xpdl2:Route GatewayType="Exclusive" MarkerVisible="true" ExclusiveType="Data"/>
          <xpdl2:TransitionRestrictions>
            <xpdl2:TransitionRestriction>
              <xpdl2:Join Type="Exclusive" ExclusiveType="Data"/>
            </xpdl2:TransitionRestriction>
          </xpdl2:TransitionRestrictions>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="61.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="83.0">
              <xpdl2:Coordinates XCoordinate="977.0" YCoordinate="540.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMp6JGnNEeCvfK09LgLLfw" xpdExt:Visibility="Private" iProcessExt:StepIndex="12">
          <xpdl2:Event>
            <xpdl2:IntermediateEvent Target="_pMp6IWnNEeCvfK09LgLLfw" Trigger="Error">
              <xpdl2:ResultError ErrorCode=""/>
            </xpdl2:IntermediateEvent>
          </xpdl2:Event>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="31.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="31.0">
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:NodeGraphicsInfo>
            <xpdl2:NodeGraphicsInfo ToolId="XPD.BorderEventPosition">
              <xpdl2:Coordinates XCoordinate="18.666666666666668" YCoordinate="0.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMp6JWnNEeCvfK09LgLLfw" xpdExt:Visibility="Private" iProcessExt:StepIndex="13">
          <xpdl2:Event>
            <xpdl2:IntermediateEvent Target="_pMp6JmnNEeCvfK09LgLLfw" Trigger="Error">
              <xpdl2:ResultError ErrorCode=""/>
            </xpdl2:IntermediateEvent>
          </xpdl2:Event>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="31.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="31.0">
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:NodeGraphicsInfo>
            <xpdl2:NodeGraphicsInfo ToolId="XPD.BorderEventPosition">
              <xpdl2:Coordinates XCoordinate="19.675925925925927" YCoordinate="0.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMp6JmnNEeCvfK09LgLLfw" Name="AssignScript" xpdExt:Visibility="Private" xpdExt:DisplayName="Assign Script" iProcessExt:StepIndex="14">
          <xpdl2:Implementation>
            <xpdl2:Task>
              <xpdl2:TaskScript>
                <xpdl2:Script ScriptGrammar="JavaScript"> /////////////////////////////////////////////////////////////&#xD;
 //&#xD;
 // In order to test that Studio generates error markers on invalid assignments all posibilities are tested in a copy of this script that&#xD;
 // has the &quot;//!&quot; removed from the start of any lines that begin with &quot;//!&quot;. The result is then copied to the &quot;Assign Script - Full Copy for check Validation Markers&quot; task&#xD;
 // where the error markers can be checked if the supressScriptValidation extended attribute is renamed (e.g. add a character to the end of the name), then it will&#xD;
 // no longer supress the errors and they can be checked.&#xD;
 //&#xD;
 /////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Enter:Assign Script (dst = '&quot;+dst+&quot;' type)&quot;;&#xD;
&#xD;
&#xD;
 /////////////////////////////////////////////////////////////&#xD;
 // Process the dst parameter&#xD;
if (dst == &quot;bool&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
		if (src == &quot;boolt&quot;)			{ dstField.bool = true; 								result += &quot;|INFO:dstField.bool = true;&quot;; } else&#xD;
		if (src == &quot;boolf&quot;)			{ dstField.bool = false;		 						result += &quot;|INFO:dstField.bool = false;&quot;; } else&#xD;
//!//	if (src == &quot;string&quot;)		{ dstField.bool = &quot;Hello World!&quot;; 						result += &quot;|INFO:dstField.bool = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
//!//	if (src == &quot;number&quot;)		{ dstField.bool = 123;			 						result += &quot;|INFO:dstField.bool = 123;&quot;; } else&#xD;
//!//	if (src == &quot;bigint&quot;)		{ dstField.bool = ScriptUtil.createBigInteger(123);		result += &quot;|INFO:dstField.bool = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
		if (src == &quot;bool&quot;) 			{ dstField.bool = srcField.bool; 						result += &quot;|INFO:dstField.bool = srcField.bool;&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.bool = srcField.date; 						result += &quot;|INFO:dstField.bool = srcField.date;&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.bool = srcField.time; 						result += &quot;|INFO:dstField.bool = srcField.time;&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.bool = srcField.datetime; 					result += &quot;|INFO:dstField.bool = srcField.datetime;&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.bool = srcField.datetimetz; 					result += &quot;|INFO:dstField.bool = srcField.datetimetz;&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.bool = srcField.decimalFloat; 				result += &quot;|INFO:dstField.bool = srcField.decimalFloat;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.bool = srcField.decimalFixed8Dot4; 			result += &quot;|INFO:dstField.bool = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.bool = srcField.integerSigned; 				result += &quot;|INFO:dstField.bool = srcField.integerSigned;&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.bool = srcField.integerFixed5; 				result += &quot;|INFO:dstField.bool = srcField.integerFixed5;&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.bool = srcField.text20; 						result += &quot;|INFO:dstField.bool = srcField.text20;&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.bool = srcField.duration; 					result += &quot;|INFO:dstField.bool = srcField.duration;&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.bool = srcField.id; 							result += &quot;|INFO:dstField.bool = srcField.id;&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.bool = srcField.uri; 						result += &quot;|INFO:dstField.bool = srcField.uri;&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.bool = srcField.boolList; 						result += &quot;|INFO:dstField.bool = srcField.boolList;&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.bool = srcField.dateList; 						result += &quot;|INFO:dstField.bool = srcField.dateList;&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.bool = srcField.timeList; 						result += &quot;|INFO:dstField.bool = srcField.timeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.bool = srcField.datetimeList; 					result += &quot;|INFO:dstField.bool = srcField.datetimeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.bool = srcField.datetimetzList; 					result += &quot;|INFO:dstField.bool = srcField.datetimetzList;&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.bool = srcField.decimalFloatList; 				result += &quot;|INFO:dstField.bool = srcField.decimalFloatList;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.bool = srcField.decimalFixed8Dot4List; 			result += &quot;|INFO:dstField.bool = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.bool = srcField.integerSignedList; 				result += &quot;|INFO:dstField.bool = srcField.integerSignedList;&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.bool = srcField.integerFixed5List; 				result += &quot;|INFO:dstField.bool = srcField.integerFixed5List;&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.bool = srcField.text20List; 						result += &quot;|INFO:dstField.bool = srcField.text20List;&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.bool = srcField.durationList; 					result += &quot;|INFO:dstField.bool = srcField.durationList;&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.bool = srcField.idList; 							result += &quot;|INFO:dstField.bool = srcField.idList;&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.bool = srcField.uriList; 						result += &quot;|INFO:dstField.bool = srcField.uriList;&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;' (with direct assignment)&quot;; }&#xD;
	} else if (opCode == &quot;create&quot;) 	{&#xD;
		if (src == &quot;bool&quot;) 			{ dstField.bool = ScriptUtil.createBoolean(srcField.bool); 				result += &quot;|INFO:dstField.bool = ScriptUtil.createBoolean(srcField.bool);&quot;; } else&#xD;
		if (src == &quot;decimalFloat&quot;) 	{ dstField.bool = ScriptUtil.createBoolean(srcField.decimalFloat); 		result += &quot;|INFO:dstField.bool = ScriptUtil.createBoolean(srcField.decimalFloat);&quot;; } else&#xD;
		if (src == &quot;decimalFixed&quot;) 	{ dstField.bool = ScriptUtil.createBoolean(srcField.decimalFixed8Dot4); result += &quot;|INFO:dstField.bool = ScriptUtil.createBoolean(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
		if (src == &quot;intSigned&quot;) 	{ dstField.bool = ScriptUtil.createBoolean(srcField.integerSigned); 	result += &quot;|INFO:dstField.bool = ScriptUtil.createBoolean(srcField.integerSigned);&quot;; } else&#xD;
		if (src == &quot;intFixed&quot;) 		{ dstField.bool = ScriptUtil.createBoolean(srcField.integerFixed5); 	result += &quot;|INFO:dstField.bool = ScriptUtil.createBoolean(srcField.integerFixed5);&quot;; } else&#xD;
		if (src == &quot;text&quot;) 			{ dstField.bool = ScriptUtil.createBoolean(srcField.text20); 			result += &quot;|INFO:dstField.bool = ScriptUtil.createBoolean(srcField.text20);&quot;; } else&#xD;
									{ 																		result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;' (with createXXX() method)&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}&#xD;
} else if (dst == &quot;date&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
//!//	if (src == &quot;boolt&quot;)			{ dstField.date = true; 								result += &quot;|INFO:dstField.date = true;&quot;; } else&#xD;
//!//	if (src == &quot;boolf&quot;)			{ dstField.date = false;		 						result += &quot;|INFO:dstField.date = false;&quot;; } else&#xD;
//!//	if (src == &quot;string&quot;)		{ dstField.date = &quot;Hello World!&quot;; 						result += &quot;|INFO:dstField.date = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
//!//	if (src == &quot;number&quot;)		{ dstField.date = 123;			 						result += &quot;|INFO:dstField.date = 123;&quot;; } else&#xD;
//!//	if (src == &quot;bigint&quot;)		{ dstField.date = ScriptUtil.createBigInteger(123);		result += &quot;|INFO:dstField.date = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.date = srcField.bool; 						result += &quot;|INFO:dstField.date = srcField.bool;&quot;; } else&#xD;
		if (src == &quot;date&quot;) 			{ dstField.date = srcField.date; 						result += &quot;|INFO:dstField.date = srcField.date;&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.date = srcField.time; 						result += &quot;|INFO:dstField.date = srcField.time;&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.date = srcField.datetime; 					result += &quot;|INFO:dstField.date = srcField.datetime;&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.date = srcField.datetimetz; 					result += &quot;|INFO:dstField.date = srcField.datetimetz;&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.date = srcField.decimalFloat; 				result += &quot;|INFO:dstField.date = srcField.decimalFloat;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.date = srcField.decimalFixed8Dot4; 			result += &quot;|INFO:dstField.date = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.date = srcField.integerSigned; 				result += &quot;|INFO:dstField.date = srcField.integerSigned;&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.date = srcField.integerFixed5; 				result += &quot;|INFO:dstField.date = srcField.integerFixed5;&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.date = srcField.text20; 						result += &quot;|INFO:dstField.date = srcField.text20;&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.date = srcField.duration; 					result += &quot;|INFO:dstField.date = srcField.duration;&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.date = srcField.id; 							result += &quot;|INFO:dstField.date = srcField.id;&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.date = srcField.uri; 						result += &quot;|INFO:dstField.date = srcField.uri;&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.date = srcField.boolList; 				result += &quot;|INFO:dstField.date = srcField.boolList;&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.date = srcField.dateList; 				result += &quot;|INFO:dstField.date = srcField.dateList;&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.date = srcField.timeList; 				result += &quot;|INFO:dstField.date = srcField.timeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.date = srcField.datetimeList; 			result += &quot;|INFO:dstField.date = srcField.datetimeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.date = srcField.datetimetzList; 			result += &quot;|INFO:dstField.date = srcField.datetimetzList;&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.date = srcField.decimalFloatList; 		result += &quot;|INFO:dstField.date = srcField.decimalFloatList;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.date = srcField.decimalFixed8Dot4List; 	result += &quot;|INFO:dstField.date = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.date = srcField.integerSignedList; 		result += &quot;|INFO:dstField.date = srcField.integerSignedList;&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.date = srcField.integerFixed5List; 		result += &quot;|INFO:dstField.date = srcField.integerFixed5List;&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.date = srcField.text20List; 				result += &quot;|INFO:dstField.date = srcField.text20List;&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.date = srcField.durationList; 			result += &quot;|INFO:dstField.date = srcField.durationList;&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.date = srcField.idList; 					result += &quot;|INFO:dstField.date = srcField.idList;&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.date = srcField.uriList; 				result += &quot;|INFO:dstField.date = srcField.uriList;&quot;; } else&#xD;
										{ 													result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;create&quot;) {&#xD;
		if (src == &quot;-&quot;) 			{ dstField.date = DateTimeUtil.createDate(); 							result += &quot;|INFO:dstField.date = DateTimeUtil.createDate();&quot;; } else&#xD;
		if (src == &quot;intSigned&quot;)		{ dstField.date = DateTimeUtil.createDate(srcField.integerSigned/10000,(srcField.integerSigned/100)%100,srcField.integerSigned%100); 				&#xD;
					 		     result += &quot;|INFO:dstField.date = DateTimeUtil.createDate(srcField.integerSigned/10000,(srcField.integerSigned/100)%100,srcField.integerSigned%100);&quot;; } else&#xD;
		if (src == &quot;date&quot;) 			{ dstField.date = DateTimeUtil.createDate(srcField.date); 				result += &quot;|INFO:dstField.date = DateTimeUtil.createDate(srcField.date);&quot;; } else&#xD;
		if (src == &quot;datetime&quot;) 		{ dstField.date = DateTimeUtil.createDate(srcField.datetime); 			result += &quot;|INFO:dstField.date = DateTimeUtil.createDate(srcField.datetime);&quot;; } else&#xD;
		if (src == &quot;datetimetz&quot;) 	{ dstField.date = DateTimeUtil.createDate(srcField.datetimetz,srcField2.bool); 		result += &quot;|INFO:dstField.date = DateTimeUtil.createDate(srcField.datetimetz,srcField2.bool);&quot;; } else	&#xD;
		if (src == &quot;text&quot;) 			{ dstField.date = DateTimeUtil.createDate(srcField.text20); 			result += &quot;|INFO:dstField.date = DateTimeUtil.createDate(srcField.text20);&quot;; } else&#xD;
									{ 																		result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;time&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
//!//	if (src == &quot;boolt&quot;)			{ dstField.time = true; 								result += &quot;|INFO:dstField.time = true;&quot;; } else&#xD;
//!//	if (src == &quot;boolf&quot;)			{ dstField.time = false;		 						result += &quot;|INFO:dstField.time = false;&quot;; } else&#xD;
//!//	if (src == &quot;string&quot;)		{ dstField.time = &quot;Hello World!&quot;; 						result += &quot;|INFO:dstField.time = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
//!//	if (src == &quot;number&quot;)		{ dstField.time = 123;			 						result += &quot;|INFO:dstField.time = 123;&quot;; } else&#xD;
//!//	if (src == &quot;bigint&quot;)		{ dstField.time = ScriptUtil.createBigInteger(123);		result += &quot;|INFO:dstField.time = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.time = srcField.bool; 						result += &quot;|INFO:dstField.time = srcField.bool;&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.time = srcField.date; 						result += &quot;|INFO:dstField.time = srcField.date;&quot;; } else&#xD;
		if (src == &quot;time&quot;) 			{ dstField.time = srcField.time; 						result += &quot;|INFO:dstField.time = srcField.time;&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.time = srcField.datetime; 					result += &quot;|INFO:dstField.time = srcField.datetime;&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.time = srcField.datetimetz; 					result += &quot;|INFO:dstField.time = srcField.datetimetz;&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.time = srcField.decimalFloat; 				result += &quot;|INFO:dstField.time = srcField.decimalFloat;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.time = srcField.decimalFixed8Dot4; 			result += &quot;|INFO:dstField.time = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;)	 	{ dstField.time = srcField.integerSigned; 				result += &quot;|INFO:dstField.time = srcField.integerSigned;&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.time = srcField.integerFixed5; 				result += &quot;|INFO:dstField.time = srcField.integerFixed5;&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.time = srcField.text20; 						result += &quot;|INFO:dstField.time = srcField.text20;&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.time = srcField.duration; 					result += &quot;|INFO:dstField.time = srcField.duration;&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.time = srcField.id; 							result += &quot;|INFO:dstField.time = srcField.id;&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.time = srcField.uri; 						result += &quot;|INFO:dstField.time = srcField.uri;&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.time = srcField.boolList; 				result += &quot;|INFO:dstField.time = srcField.boolList;&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.time = srcField.dateList; 				result += &quot;|INFO:dstField.time = srcField.dateList;&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.time = srcField.timeList; 				result += &quot;|INFO:dstField.time = srcField.timeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.time = srcField.datetimeList; 			result += &quot;|INFO:dstField.time = srcField.datetimeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.time = srcField.datetimetzList; 			result += &quot;|INFO:dstField.time = srcField.datetimetzList;&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.time = srcField.decimalFloatList; 		result += &quot;|INFO:dstField.time = srcField.decimalFloatList;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.time = srcField.decimalFixed8Dot4List; 	result += &quot;|INFO:dstField.time = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;)	 	{ dstField.time = srcField.integerSignedList; 		result += &quot;|INFO:dstField.time = srcField.integerSignedList;&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.time = srcField.integerFixed5List; 		result += &quot;|INFO:dstField.time = srcField.integerFixed5List;&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.time = srcField.text20List; 				result += &quot;|INFO:dstField.time = srcField.text20List;&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.time = srcField.durationList; 			result += &quot;|INFO:dstField.time = srcField.durationList;&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.time = srcField.idList; 					result += &quot;|INFO:dstField.time = srcField.idList;&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.time = srcField.uriList; 				result += &quot;|INFO:dstField.time = srcField.uriList;&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;create&quot;) {&#xD;
		if (src == &quot;time&quot;) 			{ dstField.time = DateTimeUtil.createTime(srcField.time); 				result += &quot;|INFO:dstField.time = DateTimeUtil.createTime(srcField.time);&quot;; } else&#xD;
		if (src == &quot;datetime&quot;) 		{ dstField.time = DateTimeUtil.createTime(srcField.datetime); 			result += &quot;|INFO:dstField.time = DateTimeUtil.createTime(srcField.datetime);&quot;; } else&#xD;
		if (src == &quot;datetimetz&quot;) 	{ dstField.time = DateTimeUtil.createTime(srcField.datetimetz); 		result += &quot;|INFO:dstField.time = DateTimeUtil.createTime(srcField.datetimetz);&quot;; } else	&#xD;
		if (src == &quot;intSigned&quot;) {&#xD;
			if (src2 == &quot;intSigned&quot;) {&#xD;
				// src = HHMMSS, src2 = sss&#xD;
				dstField.time = DateTimeUtil.createTime(srcField.integerSigned/10000,(srcField.integerSigned/100)%100,srcField.integerSigned%100,srcField2.integerSigned); 		result += &quot;|INFO:dstField.time = DateTimeUtil.createTime(srcField.integerSigned/10000,(srcField.integerSigned/100)%100,srcField.integerSigned%100,srcField2.integerSigned);&quot;;&#xD;
			} else if (src2 == &quot;decimalFixed&quot;) {&#xD;
				// src = HHMMSS, src2 =0.ssssss&#xD;
				dstField.time = DateTimeUtil.createTime(srcField.integerSigned/10000,(srcField.integerSigned/100)%100,srcField.integerSigned%100,srcField2.decimalFixed8Dot4); 		result += &quot;|INFO:dstField.time = DateTimeUtil.createTime(srcField.integerSigned/10000,(srcField.integerSigned/100)%100,srcField.integerSigned%100,srcField2.decimalFixed8Dot4);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src/src:'&quot; + src + &quot;/&quot; + src2 + &quot;'&quot;; &#xD;
			}&#xD;
		} else 			&#xD;
		if (src == &quot;text&quot;) 			{ dstField.time = DateTimeUtil.createTime(srcField.text20); 			result += &quot;|INFO:dstField.time = DateTimeUtil.createTime(srcField.text20);&quot;; } else&#xD;
		if (src == &quot;-&quot;) 				{ dstField.time = DateTimeUtil.createTime(); 							result += &quot;|INFO:dstField.time = DateTimeUtil.createTime();&quot;; } else&#xD;
									{ 																		result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;datetime&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
//!//	if (src == &quot;boolt&quot;)			{ dstField.datetime = true; 							result += &quot;|INFO:dstField.datetime = true;&quot;; } else&#xD;
//!//	if (src == &quot;boolf&quot;)			{ dstField.datetime = false;		 					result += &quot;|INFO:dstField.datetime = false;&quot;; } else&#xD;
//!//	if (src == &quot;string&quot;)		{ dstField.datetime = &quot;Hello World!&quot;; 					result += &quot;|INFO:dstField.datetime = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
//!//	if (src == &quot;number&quot;)		{ dstField.datetime = 123;			 					result += &quot;|INFO:dstField.datetime = 123;&quot;; } else&#xD;
//!//	if (src == &quot;bigint&quot;)		{ dstField.datetime = ScriptUtil.createBigInteger(123);	result += &quot;|INFO:dstField.datetime = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.datetime = srcField.bool; 					result += &quot;|INFO:dstField.datetime = srcField.bool;&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.datetime = srcField.date; 					result += &quot;|INFO:dstField.datetime = srcField.date;&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.datetime = srcField.time; 					result += &quot;|INFO:dstField.datetime = srcField.time;&quot;; } else&#xD;
		if (src == &quot;datetime&quot;) 		{ dstField.datetime = srcField.datetime; 				result += &quot;|INFO:dstField.datetime = srcField.datetime;&quot;; } else&#xD;
		if (src == &quot;datetimetz&quot;) 	{ dstField.datetime = srcField.datetimetz; 				result += &quot;|INFO:dstField.datetime = srcField.datetimetz;&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.datetime = srcField.decimalFloat; 			result += &quot;|INFO:dstField.datetime = srcField.decimalFloat;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.datetime = srcField.decimalFixed8Dot4;		result += &quot;|INFO:dstField.datetime = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.datetime = srcField.integerSigned; 			result += &quot;|INFO:dstField.datetime = srcField.integerSigned;&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.datetime = srcField.integerFixed5; 			result += &quot;|INFO:dstField.datetime = srcField.integerFixed5;&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.datetime = srcField.text20; 					result += &quot;|INFO:dstField.datetime = srcField.text20;&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.datetime = srcField.duration; 				result += &quot;|INFO:dstField.datetime = srcField.duration;&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.datetime = srcField.id; 						result += &quot;|INFO:dstField.datetime = srcField.id;&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.datetime = srcField.uri; 					result += &quot;|INFO:dstField.datetime = srcField.uri;&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.datetime = srcField.boolList; 					result += &quot;|INFO:dstField.datetime = srcField.boolList;&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.datetime = srcField.dateList; 					result += &quot;|INFO:dstField.datetime = srcField.dateList;&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.datetime = srcField.timeList; 					result += &quot;|INFO:dstField.datetime = srcField.timeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.datetime = srcField.datetimeList; 				result += &quot;|INFO:dstField.datetime = srcField.datetimeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.datetime = srcField.datetimetzList; 				result += &quot;|INFO:dstField.datetime = srcField.datetimetzList;&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.datetime = srcField.decimalFloatList; 			result += &quot;|INFO:dstField.datetime = srcField.decimalFloatList;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.datetime = srcField.decimalFixed8Dot4List;		result += &quot;|INFO:dstField.datetime = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.datetime = srcField.integerSignedList; 			result += &quot;|INFO:dstField.datetime = srcField.integerSignedList;&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.datetime = srcField.integerFixed5List; 			result += &quot;|INFO:dstField.datetime = srcField.integerFixed5List;&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.datetime = srcField.text20List; 					result += &quot;|INFO:dstField.datetime = srcField.text20List;&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.datetime = srcField.durationList; 				result += &quot;|INFO:dstField.datetime = srcField.durationList;&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.datetime = srcField.idList; 						result += &quot;|INFO:dstField.datetime = srcField.idList;&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.datetime = srcField.uriList; 					result += &quot;|INFO:dstField.datetime = srcField.uriList;&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;create&quot;) {&#xD;
		if (src == &quot;date&quot;) {&#xD;
			if (src2 == &quot;time&quot;) {&#xD;
				dstField.datetime = DateTimeUtil.createDatetime(srcField.date, srcField2.time); 				result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime(srcField.date, srcField2.time);&quot;;&#xD;
			} else if (src2 == &quot;-&quot;) {&#xD;
				dstField.datetime = DateTimeUtil.createDatetime(srcField.date); 				result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime(srcField.date);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src/src:'&quot; + src + &quot;/&quot; + src2 + &quot;'&quot;; &#xD;
			}			&#xD;
		} else			&#xD;
		if (src == &quot;time&quot;) 			{ dstField.datetime = DateTimeUtil.createDatetime(srcField.time); 				result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime(srcField.time);&quot;; } else&#xD;
		if (src == &quot;datetime&quot;) 		{ dstField.datetime = DateTimeUtil.createDatetime(srcField.datetime); 			result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime(srcField.datetime);&quot;; } else&#xD;
		if (src == &quot;datetimetz&quot;) 	{ dstField.datetime = DateTimeUtil.createDatetime(srcField.datetimetz, srcField2.bool); 		result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime(srcField.datetimetz, srcField2.bool);&quot;; } else	&#xD;
		if (src == &quot;intSigned&quot; &amp;&amp; src2 == &quot;intSigned&quot;) 	&#xD;
									{// src  = YYYYMMDD&#xD;
									//	src2 = HHMMSSsss &#xD;
									dstField.datetime = DateTimeUtil.createDatetime(srcField.integerSigned/10000, 		//Year&#xD;
																					 (srcField.integerSigned/100)%100,		//Month&#xD;
																					 srcField.integerSigned%100,			//Day&#xD;
																					 srcField2.integerSigned/10000000,		//Hour&#xD;
																					 (srcField2.integerSigned/100000)%100,	//Minute&#xD;
																					 (srcField2.integerSigned/1000)%100,	//Second&#xD;
																					 srcField2.integerSigned%1000);			//Milliseconds&#xD;
									  result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime(srcField.integerSigned/10000,(srcField.integerSigned/100)%100,srcField.integerSigned%100,srcField2.integerSigned/10000000,(srcField2.integerSigned/100000)%100,(srcField2.integerSigned/1000)%100,srcField2.integerSigned%1000);&quot;; } else&#xD;
		if (src == &quot;intFixed&quot; &amp;&amp; src2 == &quot;text&quot;) 		{ &#xD;
			var str = srcField2.text20; //MMDDHHMMSS.ssssss&#xD;
			var mon = Number(str.substr(0,2));&#xD;
			var day = Number(str.substr(2,2));&#xD;
			var hour= Number(str.substr(4,2));&#xD;
			var min = Number(str.substr(6,2));&#xD;
			var sec = Number(str.substr(8,2));&#xD;
			var mil = ScriptUtil.createBigDecimal(&quot;0.&quot; + str.substr(10));			&#xD;
			dstField.datetime = DateTimeUtil.createDatetime(srcField.integerFixed5,mon,day,hour,min,sec,mil); 		result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime(srcField.integerFixed5,mon,day,hour,min,sec,mil);&quot;; } else&#xD;
		if (src == &quot;text&quot;) 			{ dstField.datetime = DateTimeUtil.createDatetime(srcField.text20); 			result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime(srcField.text20);&quot;; } else&#xD;
		if (src == &quot;-&quot;) 				{ dstField.datetime = DateTimeUtil.createDatetime(); 							result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime();&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;datetimetz&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
//!//	if (src == &quot;boolt&quot;)			{ dstField.datetimetz = true; 							result += &quot;|INFO:dstField.datetimetz = true;&quot;; } else&#xD;
//!//	if (src == &quot;boolf&quot;)			{ dstField.datetimetz = false;		 					result += &quot;|INFO:dstField.datetimetz = false;&quot;; } else&#xD;
//!//	if (src == &quot;string&quot;)		{ dstField.datetimetz = &quot;Hello World!&quot;; 				result += &quot;|INFO:dstField.datetimetz = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
//!//	if (src == &quot;number&quot;)		{ dstField.datetimetz = 123;			 				result += &quot;|INFO:dstField.datetimetz = 123;&quot;; } else&#xD;
//!//	if (src == &quot;bigint&quot;)		{ dstField.datetimetz = ScriptUtil.createBigInteger(123);result += &quot;|INFO:dstField.datetimetz = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.datetimetz = srcField.bool; 					result += &quot;|INFO:dstField.datetimetz = srcField.bool;&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.datetimetz = srcField.date; 					result += &quot;|INFO:dstField.datetimetz = srcField.date;&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.datetimetz = srcField.time; 					result += &quot;|INFO:dstField.datetimetz = srcField.time;&quot;; } else&#xD;
		if (src == &quot;datetime&quot;) 		{ dstField.datetimetz = srcField.datetime; 				result += &quot;|INFO:dstField.datetimetz = srcField.datetime;&quot;; } else&#xD;
		if (src == &quot;datetimetz&quot;) 	{ dstField.datetimetz = srcField.datetimetz; 			result += &quot;|INFO:dstField.datetimetz = srcField.datetimetz;&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.datetimetz = srcField.decimalFloat; 			result += &quot;|INFO:dstField.datetimetz = srcField.decimalFloat;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.datetimetz = srcField.decimalFixed8Dot4;		result += &quot;|INFO:dstField.datetimetz = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.datetimetz = srcField.integerSigned; 		result += &quot;|INFO:dstField.datetimetz = srcField.integerSigned;&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.datetimetz = srcField.integerFixed5; 		result += &quot;|INFO:dstField.datetimetz = srcField.integerFixed5;&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.datetimetz = srcField.text20; 				result += &quot;|INFO:dstField.datetimetz = srcField.text20;&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.datetimetz = srcField.duration; 				result += &quot;|INFO:dstField.datetimetz = srcField.duration;&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.datetimetz = srcField.id; 					result += &quot;|INFO:dstField.datetimetz = srcField.id;&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.datetimetz = srcField.uri; 					result += &quot;|INFO:dstField.datetimetz = srcField.uri;&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.datetimetz = srcField.boolList; 					result += &quot;|INFO:dstField.datetimetz = srcField.boolList;&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.datetimetz = srcField.dateList; 					result += &quot;|INFO:dstField.datetimetz = srcField.dateList;&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.datetimetz = srcField.timeList; 					result += &quot;|INFO:dstField.datetimetz = srcField.timeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.datetimetz = srcField.datetimeList; 				result += &quot;|INFO:dstField.datetimetz = srcField.datetimeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.datetimetz = srcField.datetimetzList; 			result += &quot;|INFO:dstField.datetimetz = srcField.datetimetzList;&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.datetimetz = srcField.decimalFloatList; 			result += &quot;|INFO:dstField.datetimetz = srcField.decimalFloatList;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.datetimetz = srcField.decimalFixed8Dot4List;		result += &quot;|INFO:dstField.datetimetz = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.datetimetz = srcField.integerSignedList; 		result += &quot;|INFO:dstField.datetimetz = srcField.integerSignedList;&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.datetimetz = srcField.integerFixed5List; 		result += &quot;|INFO:dstField.datetimetz = srcField.integerFixed5List;&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.datetimetz = srcField.text20List; 				result += &quot;|INFO:dstField.datetimetz = srcField.text20List;&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.datetimetz = srcField.durationList; 				result += &quot;|INFO:dstField.datetimetz = srcField.durationList;&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.datetimetz = srcField.idList; 					result += &quot;|INFO:dstField.datetimetz = srcField.idList;&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.datetimetz = srcField.uriList; 					result += &quot;|INFO:dstField.datetimetz = srcField.uriList;&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;create&quot;) {&#xD;
		if (src == &quot;date&quot;) 			{ dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.date,srcField2.time,0);result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.date,srcField2.time,0);&quot;; } else&#xD;
		if (src == &quot;datetime&quot; &amp;&amp; src2 == &quot;intSigned&quot;)&#xD;
							 		{ dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.datetime,srcField2.integerSigned);result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.datetime,srcField2.integerSigned);&quot;; } else&#xD;
		if (src == &quot;datetimetz&quot;) 	{ dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.datetimetz); 		result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.datetimetz);&quot;; } else	&#xD;
		if (src == &quot;intSigned&quot; &amp;&amp; src2 == &quot;intSigned&quot;) 	{ &#xD;
				// src [+/-]&lt;offset>YYYYMMDD&#xD;
				// src2 HHMMSSsss&#xD;
				var offset = Math.floor(srcField.integerSigned/100000000);&#xD;
				// floor() function rounds down towards -Infinity, so -5.5 goes to -6, whereas we want -5&#xD;
				if (offset &lt; 0)&#xD;
				{&#xD;
					offset++;&#xD;
				}&#xD;
				offset *= 60;&#xD;
				var date = Math.abs(srcField.integerSigned)%100000000;&#xD;
				dstField.datetimetz = DateTimeUtil.createDatetimetz(date/10000, 						//Year&#xD;
															 (date/100)%100,						//Month&#xD;
															 date%100,								//Day&#xD;
															 srcField2.integerSigned/10000000,		//Hour&#xD;
															 (srcField2.integerSigned/100000)%100,	//Minute&#xD;
															 (srcField2.integerSigned/1000)%100,	//Second&#xD;
															 srcField2.integerSigned%1000,			//Milliseconds&#xD;
															 offset);&#xD;
									  result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime(srcField.integerSigned/10000,(srcField.integerSigned/100)%100,srcField.integerSigned%100,srcField2.integerSigned/10000000,(srcField2.integerSigned/100000)%100,(srcField2.integerSigned/1000)%100,srcField2.integerSigned%1000);&quot;; } else&#xD;
		if (src == &quot;intFixed&quot; &amp;&amp; src2 == &quot;text&quot;) 		{ &#xD;
			// src = BigDecimal YYYY&#xD;
			var str = srcField2.text20; //MMDDHHMMSSssssss&#xD;
			var mon = Number(str.substr(0,2));&#xD;
			var day = Number(str.substr(2,2));&#xD;
			var hour= Number(str.substr(4,2));&#xD;
			var min = Number(str.substr(6,2));&#xD;
			var sec = Number(str.substr(8,2));&#xD;
			var mil = ScriptUtil.createBigDecimal(&quot;0.&quot; + str.substr(10));			&#xD;
			dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.integerFixed5,mon,day,hour,min,sec,mil,0); 	result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetime(srcField.integerFixed5,mon,day,hour,min,sec,mil,0);&quot;; } else&#xD;
		if (src == &quot;text&quot;) 			{ dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.text20); 			result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.text20);&quot;; } else&#xD;
		if (src == &quot;-&quot;) 			{ dstField.datetimetz = DateTimeUtil.createDatetimetz();				 			result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetimetz();&quot;; } else&#xD;
									{ 																					result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;create+300&quot;) {&#xD;
		if (src == &quot;date&quot;) 			{ dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.date,srcField2.time,300);result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.date,srcField2.time,300);&quot;; } else&#xD;
		if (src == &quot;intFixed&quot; &amp;&amp; src2 == &quot;text&quot;) 		{ &#xD;
			var str = srcField2.text20; //MMDDHHMMSSssssss&#xD;
			var mon = Number(str.substr(0,2));&#xD;
			var day = Number(str.substr(2,2));&#xD;
			var hour= Number(str.substr(4,2));&#xD;
			var min = Number(str.substr(6,2));&#xD;
			var sec = Number(str.substr(8,2));&#xD;
			var mil = ScriptUtil.createBigDecimal(&quot;0.&quot; + str.substr(10));			&#xD;
			dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.integerFixed5,mon,day,hour,min,sec,mil,300); 	result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetimetz(srcField.integerFixed5,mon,day,hour,min,sec,mil,300);&quot;; } else&#xD;
									{ 																					result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;create-300&quot;) {&#xD;
		if (src == &quot;date&quot;) 			{ dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.date,srcField2.time,-300);result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.date,srcField2.time,-300);&quot;; } else&#xD;
		if (src == &quot;intFixed&quot; &amp;&amp; src2 == &quot;text&quot;) 		{ &#xD;
			var str = srcField2.text20; //MMDDHHMMSSssssss&#xD;
			var mon = Number(str.substr(0,2));&#xD;
			var day = Number(str.substr(2,2));&#xD;
			var hour= Number(str.substr(4,2));&#xD;
			var min = Number(str.substr(6,2));&#xD;
			var sec = Number(str.substr(8,2));&#xD;
			var mil = ScriptUtil.createBigDecimal(&quot;0.&quot; + str.substr(10));			&#xD;
			dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.integerFixed5,mon,day,hour,min,sec,mil,-300); 	result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetimetz(srcField.integerFixed5,mon,day,hour,min,sec,mil,-300);&quot;; } else&#xD;
									{ 																					result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;decimalFloat&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
//!//	if (src == &quot;boolt&quot;)			{ dstField.decimalFloat = true; 						result += &quot;|INFO:dstField.decimalFloat = true;&quot;; } else&#xD;
//!//	if (src == &quot;boolf&quot;)			{ dstField.decimalFloat = false;		 				result += &quot;|INFO:dstField.decimalFloat = false;&quot;; } else&#xD;
//!//	if (src == &quot;string&quot;)		{ dstField.decimalFloat = &quot;Hello World!&quot;; 				result += &quot;|INFO:dstField.decimalFloat = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
		if (src == &quot;number&quot;)		{ dstField.decimalFloat = 123;			 				result += &quot;|INFO:dstField.decimalFloat = 123;&quot;; } else&#xD;
//!//	if (src == &quot;bigint&quot;)		{ dstField.decimalFloat = ScriptUtil.createBigInteger(123);result += &quot;|INFO:dstField.decimalFloat = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.decimalFloat = srcField.bool; 				result += &quot;|INFO:dstField.decimalFloat = srcField.bool;&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.decimalFloat = srcField.date; 				result += &quot;|INFO:dstField.decimalFloat = srcField.date;&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.decimalFloat = srcField.time; 				result += &quot;|INFO:dstField.decimalFloat = srcField.time;&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.decimalFloat = srcField.datetime; 			result += &quot;|INFO:dstField.decimalFloat = srcField.datetime;&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.decimalFloat = srcField.datetimetz; 			result += &quot;|INFO:dstField.decimalFloat = srcField.datetimetz;&quot;; } else	&#xD;
		if (src == &quot;decimalFloat&quot;) 	{ dstField.decimalFloat = srcField.decimalFloat;		result += &quot;|INFO:dstField.decimalFloat = srcField.decimalFloat;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.decimalFloat = srcField.decimalFixed8Dot4;	result += &quot;|INFO:dstField.decimalFloat = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
		if (src == &quot;intSigned&quot;) 	{ dstField.decimalFloat = srcField.integerSigned;		result += &quot;|INFO:dstField.decimalFloat = srcField.integerSigned;&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.decimalFloat = srcField.integerFixed5;		result += &quot;|INFO:dstField.decimalFloat = srcField.integerFixed5;&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.decimalFloat = srcField.text20; 				result += &quot;|INFO:dstField.decimalFloat = srcField.text20;&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.decimalFloat = srcField.duration; 			result += &quot;|INFO:dstField.decimalFloat = srcField.duration;&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.decimalFloat = srcField.id; 					result += &quot;|INFO:dstField.decimalFloat = srcField.id;&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.decimalFloat = srcField.uri; 				result += &quot;|INFO:dstField.decimalFloat = srcField.uri;&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.decimalFloat = srcField.boolList; 				result += &quot;|INFO:dstField.decimalFloat = srcField.boolList;&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.decimalFloat = srcField.dateList; 				result += &quot;|INFO:dstField.decimalFloat = srcField.dateList;&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.decimalFloat = srcField.timeList; 				result += &quot;|INFO:dstField.decimalFloat = srcField.timeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.decimalFloat = srcField.datetimeList; 			result += &quot;|INFO:dstField.decimalFloat = srcField.datetimeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.decimalFloat = srcField.datetimetzList; 			result += &quot;|INFO:dstField.decimalFloat = srcField.datetimetzList;&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.decimalFloat = srcField.decimalFloatList;		result += &quot;|INFO:dstField.decimalFloat = srcField.decimalFloatList;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.decimalFloat = srcField.decimalFixed8Dot4List;	result += &quot;|INFO:dstField.decimalFloat = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.decimalFloat = srcField.integerSignedList;		result += &quot;|INFO:dstField.decimalFloat = srcField.integerSignedList;&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.decimalFloat = srcField.integerFixed5List;		result += &quot;|INFO:dstField.decimalFloat = srcField.integerFixed5List;&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.decimalFloat = srcField.text20List; 				result += &quot;|INFO:dstField.decimalFloat = srcField.text20List;&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.decimalFloat = srcField.durationList; 			result += &quot;|INFO:dstField.decimalFloat = srcField.durationList;&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.decimalFloat = srcField.idList; 					result += &quot;|INFO:dstField.decimalFloat = srcField.idList;&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.decimalFloat = srcField.uriList; 				result += &quot;|INFO:dstField.decimalFloat = srcField.uriList;&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;decimalFixed&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
//!//	if (src == &quot;boolt&quot;)			{ dstField.decimalFixed8Dot4 = true; 					result += &quot;|INFO:dstField.decimalFixed8Dot4 = true;&quot;; } else&#xD;
//!//	if (src == &quot;boolf&quot;)			{ dstField.decimalFixed8Dot4 = false;		 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = false;&quot;; } else&#xD;
//!//	if (src == &quot;string&quot;)		{ dstField.decimalFixed8Dot4 = &quot;Hello World!&quot;; 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
//!//	if (src == &quot;number&quot;)		{ dstField.decimalFixed8Dot4 = 123;			 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = 123;&quot;; } else&#xD;
//!//	if (src == &quot;bigint&quot;)		{ dstField.decimalFixed8Dot4 = ScriptUtil.createBigInteger(123);result += &quot;|INFO:dstField.decimalFixed8Dot4 = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.bool; 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.bool;&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.date; 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.date;&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.time; 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.time;&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.decimalFixed8Dot4 = srcField.datetime; 		result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.datetime;&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.decimalFixed8Dot4 = srcField.datetimetz; 	result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.datetimetz;&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.decimalFixed8Dot4 = srcField.decimalFloat; 	result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFloat;&quot;; } else&#xD;
		if (src == &quot;decimalFixed&quot;) 	{ dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4;result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.decimalFixed8Dot4 = srcField.integerSigned; 	result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.integerSigned;&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.decimalFixed8Dot4 = srcField.integerFixed5; 	result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.integerFixed5;&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.text20; 		result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.text20;&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.decimalFixed8Dot4 = srcField.duration; 		result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.duration;&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.id; 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.id;&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.uri; 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.uri;&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.boolList; 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.boolList;&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.dateList; 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.dateList;&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.timeList; 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.timeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.decimalFixed8Dot4 = srcField.datetimeList; 		result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.datetimeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.decimalFixed8Dot4 = srcField.datetimetzList; 	result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.datetimetzList;&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.decimalFixed8Dot4 = srcField.decimalFloatList; 	result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFloatList;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4List;result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.decimalFixed8Dot4 = srcField.integerSignedList; 	result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.integerSignedList;&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.decimalFixed8Dot4 = srcField.integerFixed5List; 	result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.integerFixed5List;&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.text20List; 		result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.text20List;&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.decimalFixed8Dot4 = srcField.durationList; 		result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.durationList;&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.idList; 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.idList;&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.uriList; 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.uriList;&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;create&quot;) {&#xD;
		if (src == &quot;bool&quot;) 			{ dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.bool); 				result += &quot;|INFO:dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.bool);&quot;; } else&#xD;
		if (src == &quot;decimalFloat&quot;) 	{ dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.decimalFloat); 		result += &quot;|INFO:dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.decimalFloat);&quot;; } else&#xD;
		if (src == &quot;decimalFixed&quot;) 	{ dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
		if (src == &quot;intSigned&quot;) 	{ dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.integerSigned); 	result += &quot;|INFO:dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.integerSigned);&quot;; } else&#xD;
		if (src == &quot;intFixed&quot;) 		{ dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.integerFixed5); 	result += &quot;|INFO:dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.integerFixed5);&quot;; } else&#xD;
		if (src == &quot;text&quot;) 			{ dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.text20); 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.text20);&quot;; } else&#xD;
									{ 																						result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;intSigned&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
//!//	if (src == &quot;boolt&quot;)			{ dstField.integerSigned = true; 						result += &quot;|INFO:dstField.integerSigned = true;&quot;; } else&#xD;
//!//	if (src == &quot;boolf&quot;)			{ dstField.integerSigned = false;		 				result += &quot;|INFO:dstField.integerSigned = false;&quot;; } else&#xD;
//!//	if (src == &quot;string&quot;)		{ dstField.integerSigned = &quot;Hello World!&quot;; 				result += &quot;|INFO:dstField.integerSigned = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
		if (src == &quot;number&quot;)		{ dstField.integerSigned = 123;			 				result += &quot;|INFO:dstField.integerSigned = 123;&quot;; } else&#xD;
//!//	if (src == &quot;bigint&quot;)		{ dstField.integerSigned = ScriptUtil.createBigInteger(123);result += &quot;|INFO:dstField.integerSigned = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.integerSigned = srcField.bool; 				result += &quot;|INFO:dstField.integerSigned = srcField.bool;&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.integerSigned = srcField.date; 				result += &quot;|INFO:dstField.integerSigned = srcField.date;&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.integerSigned = srcField.time; 				result += &quot;|INFO:dstField.integerSigned = srcField.time;&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.integerSigned = srcField.datetime; 			result += &quot;|INFO:dstField.integerSigned = srcField.datetime;&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.integerSigned = srcField.datetimetz; 		result += &quot;|INFO:dstField.integerSigned = srcField.datetimetz;&quot;; } else	&#xD;
		if (src == &quot;decimalFloat&quot;) 	{ dstField.integerSigned = srcField.decimalFloat; 		result += &quot;|INFO:dstField.integerSigned = srcField.decimalFloat;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.integerSigned = srcField.decimalFixed8Dot4; 	result += &quot;|INFO:dstField.integerSigned = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
		if (src == &quot;intSigned&quot;) 	{ dstField.integerSigned = srcField.integerSigned; 		result += &quot;|INFO:dstField.integerSigned = srcField.integerSigned;&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.integerSigned = srcField.integerFixed5; 		result += &quot;|INFO:dstField.integerSigned = srcField.integerFixed5;&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.integerSigned = srcField.text20; 			result += &quot;|INFO:dstField.integerSigned = srcField.text20;&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.integerSigned = srcField.duration; 			result += &quot;|INFO:dstField.integerSigned = srcField.duration;&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.integerSigned = srcField.id; 				result += &quot;|INFO:dstField.integerSigned = srcField.id;&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.integerSigned = srcField.uri; 				result += &quot;|INFO:dstField.integerSigned = srcField.uri;&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.integerSigned = srcField.boolList; 				result += &quot;|INFO:dstField.integerSigned = srcField.boolList;&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.integerSigned = srcField.dateList; 				result += &quot;|INFO:dstField.integerSigned = srcField.dateList;&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.integerSigned = srcField.timeList; 				result += &quot;|INFO:dstField.integerSigned = srcField.timeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.integerSigned = srcField.datetimeList; 			result += &quot;|INFO:dstField.integerSigned = srcField.datetimeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.integerSigned = srcField.datetimetzList; 		result += &quot;|INFO:dstField.integerSigned = srcField.datetimetzList;&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.integerSigned = srcField.decimalFloatList; 		result += &quot;|INFO:dstField.integerSigned = srcField.decimalFloatList;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.integerSigned = srcField.decimalFixed8Dot4List; 	result += &quot;|INFO:dstField.integerSigned = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.integerSigned = srcField.integerSignedList; 		result += &quot;|INFO:dstField.integerSigned = srcField.integerSignedList;&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.integerSigned = srcField.integerFixed5List; 		result += &quot;|INFO:dstField.integerSigned = srcField.integerFixed5List;&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.integerSigned = srcField.text20List; 			result += &quot;|INFO:dstField.integerSigned = srcField.text20List;&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.integerSigned = srcField.durationList; 			result += &quot;|INFO:dstField.integerSigned = srcField.durationList;&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.integerSigned = srcField.idList; 				result += &quot;|INFO:dstField.integerSigned = srcField.idList;&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.integerSigned = srcField.uriList; 				result += &quot;|INFO:dstField.integerSigned = srcField.uriList;&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;intFixed&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
//!//	if (src == &quot;boolt&quot;)			{ dstField.integerFixed5 = true; 						result += &quot;|INFO:dstField.integerFixed5 = true;&quot;; } else&#xD;
//!//	if (src == &quot;boolf&quot;)			{ dstField.integerFixed5 = false;		 				result += &quot;|INFO:dstField.integerFixed5 = false;&quot;; } else&#xD;
//!//	if (src == &quot;string&quot;)		{ dstField.integerFixed5 = &quot;Hello World!&quot;; 				result += &quot;|INFO:dstField.integerFixed5 = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
//!//	if (src == &quot;number&quot;)		{ dstField.integerFixed5 = 123;			 				result += &quot;|INFO:dstField.integerFixed5 = 123;&quot;; } else&#xD;
		if (src == &quot;bigint&quot;)		{ dstField.integerFixed5 = ScriptUtil.createBigInteger(123);result += &quot;|INFO:dstField.integerFixed5 = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.integerFixed5 = srcField.bool; 				result += &quot;|INFO:dstField.integerFixed5 = srcField.bool;&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.integerFixed5 = srcField.date; 				result += &quot;|INFO:dstField.integerFixed5 = srcField.date;&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.integerFixed5 = srcField.time; 				result += &quot;|INFO:dstField.integerFixed5 = srcField.time;&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.integerFixed5 = srcField.datetime; 			result += &quot;|INFO:dstField.integerFixed5 = srcField.datetime;&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.integerFixed5 = srcField.datetimetz; 		result += &quot;|INFO:dstField.integerFixed5 = srcField.datetimetz;&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.integerFixed5 = srcField.decimalFloat; 		result += &quot;|INFO:dstField.integerFixed5 = srcField.decimalFloat;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.integerFixed5 = srcField.decimalFixed8Dot4; 	result += &quot;|INFO:dstField.integerFixed5 = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.integerFixed5 = srcField.integerSigned; 		result += &quot;|INFO:dstField.integerFixed5 = srcField.integerSigned;&quot;; } else&#xD;
		if (src == &quot;intFixed&quot;) 		{ dstField.integerFixed5 = srcField.integerFixed5; 		result += &quot;|INFO:dstField.integerFixed5 = srcField.integerFixed5;&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.integerFixed5 = srcField.text20; 			result += &quot;|INFO:dstField.integerFixed5 = srcField.text20;&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.integerFixed5 = srcField.duration; 			result += &quot;|INFO:dstField.integerFixed5 = srcField.duration;&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.integerFixed5 = srcField.id; 				result += &quot;|INFO:dstField.integerFixed5 = srcField.id;&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.integerFixed5 = srcField.uri; 				result += &quot;|INFO:dstField.integerFixed5 = srcField.uri;&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.integerFixed5 = srcField.boolList; 				result += &quot;|INFO:dstField.integerFixed5 = srcField.boolList;&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.integerFixed5 = srcField.dateList; 				result += &quot;|INFO:dstField.integerFixed5 = srcField.dateList;&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.integerFixed5 = srcField.timeList; 				result += &quot;|INFO:dstField.integerFixed5 = srcField.timeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.integerFixed5 = srcField.datetimeList; 			result += &quot;|INFO:dstField.integerFixed5 = srcField.datetimeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.integerFixed5 = srcField.datetimetzList; 		result += &quot;|INFO:dstField.integerFixed5 = srcField.datetimetzList;&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.integerFixed5 = srcField.decimalFloatList; 		result += &quot;|INFO:dstField.integerFixed5 = srcField.decimalFloatList;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.integerFixed5 = srcField.decimalFixed8Dot4List; 	result += &quot;|INFO:dstField.integerFixed5 = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.integerFixed5 = srcField.integerSignedList; 		result += &quot;|INFO:dstField.integerFixed5 = srcField.integerSignedList;&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.integerFixed5 = srcField.integerFixed5List; 		result += &quot;|INFO:dstField.integerFixed5 = srcField.integerFixed5List;&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.integerFixed5 = srcField.text20List; 			result += &quot;|INFO:dstField.integerFixed5 = srcField.text20List;&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.integerFixed5 = srcField.durationList; 			result += &quot;|INFO:dstField.integerFixed5 = srcField.durationList;&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.integerFixed5 = srcField.idList; 				result += &quot;|INFO:dstField.integerFixed5 = srcField.idList;&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.integerFixed5 = srcField.uriList; 				result += &quot;|INFO:dstField.integerFixed5 = srcField.uriList;&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;create&quot;) {&#xD;
		if (src == &quot;bool&quot;) 			{ dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.bool); 				result += &quot;|INFO:dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.bool);&quot;; } else&#xD;
		if (src == &quot;decimalFloat&quot;) 	{ dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.decimalFloat); 		result += &quot;|INFO:dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.decimalFloat);&quot;; } else&#xD;
		if (src == &quot;decimalFixed&quot;) 	{ dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.decimalFixed8Dot4); result += &quot;|INFO:dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
		if (src == &quot;intSigned&quot;) 	{ dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.integerSigned); 	result += &quot;|INFO:dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.integerSigned);&quot;; } else&#xD;
		if (src == &quot;intFixed&quot;) 		{ dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.integerFixed5); 	result += &quot;|INFO:dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.integerFixed5);&quot;; } else&#xD;
		if (src == &quot;text&quot;) 			{ dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.text20); 			result += &quot;|INFO:dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.text20);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;text&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
		if (src == &quot;boolt&quot;)			{ dstField.text20 = true; 								result += &quot;|INFO:dstField.text20 = true;&quot;; } else&#xD;
		if (src == &quot;boolf&quot;)			{ dstField.text20 = false;		 						result += &quot;|INFO:dstField.text20 = false;&quot;; } else&#xD;
		if (src == &quot;string&quot;)		{ dstField.text20 = &quot;Hello World!&quot;; 					result += &quot;|INFO:dstField.text20 = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
		if (src == &quot;number&quot;)		{ dstField.text20 = 123;			 					result += &quot;|INFO:dstField.text20 = 123;&quot;; } else&#xD;
		if (src == &quot;bigint&quot;)		{ dstField.text20 = ScriptUtil.createBigInteger(123);	result += &quot;|INFO:dstField.text20 = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
		if (src == &quot;bool&quot;) 			{ dstField.text20 = srcField.bool; 						result += &quot;|INFO:dstField.text20 = srcField.bool;&quot;; } else&#xD;
		if (src == &quot;date&quot;) 			{ dstField.text20 = srcField.date; 						result += &quot;|INFO:dstField.text20 = srcField.date;&quot;; } else&#xD;
		if (src == &quot;time&quot;) 			{ dstField.text20 = srcField.time; 						result += &quot;|INFO:dstField.text20 = srcField.time;&quot;; } else&#xD;
		if (src == &quot;datetime&quot;) 		{ dstField.text20 = srcField.datetime; 					result += &quot;|INFO:dstField.text20 = srcField.datetime;&quot;; } else&#xD;
		if (src == &quot;datetimetz&quot;) 	{ dstField.text20 = srcField.datetimetz; 				result += &quot;|INFO:dstField.text20 = srcField.datetimetz;&quot;; } else	&#xD;
		if (src == &quot;decimalFloat&quot;) 	{ dstField.text20 = srcField.decimalFloat; 				result += &quot;|INFO:dstField.text20 = srcField.decimalFloat;&quot;; } else&#xD;
		if (src == &quot;decimalFixed&quot;) 	{ dstField.text20 = srcField.decimalFixed8Dot4; 		result += &quot;|INFO:dstField.text20 = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
		if (src == &quot;intSigned&quot;) 	{ dstField.text20 = srcField.integerSigned; 			result += &quot;|INFO:dstField.text20 = srcField.integerSigned;&quot;; } else&#xD;
		if (src == &quot;intFixed&quot;) 		{ dstField.text20 = srcField.integerFixed5; 			result += &quot;|INFO:dstField.text20 = srcField.integerFixed5;&quot;; } else&#xD;
		if (src == &quot;text&quot;) 			{ dstField.text20 = srcField.text20; 					result += &quot;|INFO:dstField.text20 = srcField.text20;&quot;; } else&#xD;
		if (src == &quot;duration&quot;) 		{ dstField.text20 = srcField.duration; 					result += &quot;|INFO:dstField.text20 = srcField.duration;&quot;; } else&#xD;
		if (src == &quot;id&quot;) 			{ dstField.text20 = srcField.id; 						result += &quot;|INFO:dstField.text20 = srcField.id;&quot;; } else&#xD;
		if (src == &quot;uri&quot;) 			{ dstField.text20 = srcField.uri; 						result += &quot;|INFO:dstField.text20 = srcField.uri;&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.text20 = srcField.boolList; 						result += &quot;|INFO:dstField.text20 = srcField.boolList;&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.text20 = srcField.dateList; 						result += &quot;|INFO:dstField.text20 = srcField.dateList;&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.text20 = srcField.timeList; 						result += &quot;|INFO:dstField.text20 = srcField.timeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.text20 = srcField.datetimeList; 					result += &quot;|INFO:dstField.text20 = srcField.datetimeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.text20 = srcField.datetimetzList; 				result += &quot;|INFO:dstField.text20 = srcField.datetimetzList;&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.text20 = srcField.decimalFloatList; 				result += &quot;|INFO:dstField.text20 = srcField.decimalFloatList;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.text20 = srcField.decimalFixed8Dot4List; 		result += &quot;|INFO:dstField.text20 = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.text20 = srcField.integerSignedList; 			result += &quot;|INFO:dstField.text20 = srcField.integerSignedList;&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.text20 = srcField.integerFixed5List; 			result += &quot;|INFO:dstField.text20 = srcField.integerFixed5List;&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.text20 = srcField.text20List; 					result += &quot;|INFO:dstField.text20 = srcField.text20List;&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.text20 = srcField.durationList; 					result += &quot;|INFO:dstField.text20 = srcField.durationList;&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.text20 = srcField.idList; 						result += &quot;|INFO:dstField.text20 = srcField.idList;&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.text20 = srcField.uriList; 						result += &quot;|INFO:dstField.text20 = srcField.uriList;&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;duration&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
//!//	if (src == &quot;boolt&quot;)			{ dstField.duration = true; 							result += &quot;|INFO:dstField.duration = true;&quot;; } else&#xD;
//!//	if (src == &quot;boolf&quot;)			{ dstField.duration = false;		 					result += &quot;|INFO:dstField.duration = false;&quot;; } else&#xD;
//!//	if (src == &quot;string&quot;)		{ dstField.duration = &quot;Hello World!&quot;; 					result += &quot;|INFO:dstField.duration = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
//!//	if (src == &quot;number&quot;)		{ dstField.duration = 123;			 					result += &quot;|INFO:dstField.duration = 123;&quot;; } else&#xD;
//!//	if (src == &quot;bigint&quot;)		{ dstField.duration = ScriptUtil.createBigInteger(123);	result += &quot;|INFO:dstField.duration = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.duration = srcField.bool; 					result += &quot;|INFO:dstField.duration = srcField.bool;&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.duration = srcField.date; 					result += &quot;|INFO:dstField.duration = srcField.date;&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.duration = srcField.time; 					result += &quot;|INFO:dstField.duration = srcField.time;&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.duration = srcField.datetime; 				result += &quot;|INFO:dstField.duration = srcField.datetime;&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.duration = srcField.datetimetz; 				result += &quot;|INFO:dstField.duration = srcField.datetimetz;&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.duration = srcField.decimalFloat; 			result += &quot;|INFO:dstField.duration = srcField.decimalFloat;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.duration = srcField.decimalFixed8Dot4; 		result += &quot;|INFO:dstField.duration = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.duration = srcField.integerSigned; 			result += &quot;|INFO:dstField.duration = srcField.integerSigned;&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.duration = srcField.integerFixed5; 			result += &quot;|INFO:dstField.duration = srcField.integerFixed5;&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.duration = srcField.text20; 					result += &quot;|INFO:dstField.duration = srcField.text20;&quot;; } else&#xD;
		if (src == &quot;duration&quot;) 		{ dstField.duration = srcField.duration; 				result += &quot;|INFO:dstField.duration = srcField.duration;&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.duration = srcField.id; 						result += &quot;|INFO:dstField.duration = srcField.id;&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.duration = srcField.uri; 					result += &quot;|INFO:dstField.duration = srcField.uri;&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.duration = srcField.boolList; 					result += &quot;|INFO:dstField.duration = srcField.boolList;&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.duration = srcField.dateList; 					result += &quot;|INFO:dstField.duration = srcField.dateList;&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.duration = srcField.timeList; 					result += &quot;|INFO:dstField.duration = srcField.timeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.duration = srcField.datetimeList; 				result += &quot;|INFO:dstField.duration = srcField.datetimeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.duration = srcField.datetimetzList; 				result += &quot;|INFO:dstField.duration = srcField.datetimetzList;&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.duration = srcField.decimalFloatList; 			result += &quot;|INFO:dstField.duration = srcField.decimalFloatList;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.duration = srcField.decimalFixed8Dot4List; 		result += &quot;|INFO:dstField.duration = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.duration = srcField.integerSignedList; 			result += &quot;|INFO:dstField.duration = srcField.integerSignedList;&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.duration = srcField.integerFixed5List; 			result += &quot;|INFO:dstField.duration = srcField.integerFixed5List;&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.duration = srcField.text20List; 					result += &quot;|INFO:dstField.duration = srcField.text20List;&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.duration = srcField.durationList; 				result += &quot;|INFO:dstField.duration = srcField.durationList;&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.duration = srcField.idList; 						result += &quot;|INFO:dstField.duration = srcField.idList;&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.duration = srcField.uriList; 					result += &quot;|INFO:dstField.duration = srcField.uriList;&quot;; } else&#xD;
								{ 															result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;create&quot;) {&#xD;
		if (src == &quot;decimalFloat&quot;) 	{ dstField.duration = DateTimeUtil.createDuration(srcField.decimalFloat); 		result += &quot;|INFO:dstField.duration = DateTimeUtil.createDuration(srcField.decimalFloat);&quot;; } else&#xD;
		if (src == &quot;decimalFixed&quot;) 	{ dstField.duration = DateTimeUtil.createDuration(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.duration = DateTimeUtil.createDuration(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
		if (src == &quot;intSigned&quot;) 	{ dstField.duration = DateTimeUtil.createDuration(srcField.integerSigned); 		result += &quot;|INFO:dstField.duration = DateTimeUtil.createDuration(srcField.integerSigned);&quot;; } else&#xD;
		if (src == &quot;intFixed&quot;) 		{ dstField.duration = DateTimeUtil.createDuration(srcField.integerFixed5.multiply(ScriptUtil.createBigInteger(&quot;1000&quot;))); 		result += &quot;|INFO:dstField.duration = DateTimeUtil.createDuration(srcField.integerFixed5);&quot;; } else&#xD;
		if (src == &quot;text&quot;) 			{ dstField.duration = DateTimeUtil.createDuration(srcField.text20); 			result += &quot;|INFO:dstField.duration = DateTimeUtil.createDuration(srcField.text20);&quot;; } else&#xD;
		if (src == &quot;duration&quot;) 		{ dstField.duration = DateTimeUtil.createDuration(srcField.duration); 			result += &quot;|INFO:dstField.duration = DateTimeUtil.createDuration(srcField.duration);&quot;; } else&#xD;
								{ 																					result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;createx&quot;) {&#xD;
		if (src == &quot;text&quot;) { &#xD;
			var str  = srcField.text20; //+YYYMMMDDDhhhmmmsss or -YYYMMMDDDhhhmmmsss&#xD;
			var pos  = (str.substr(0,1) == &quot;+&quot;);&#xD;
			var year = Number(str.substr(1,3));&#xD;
			var mon  = Number(str.substr(4,3));&#xD;
			var day  = Number(str.substr(7,3));&#xD;
			var hour = Number(str.substr(10,3));&#xD;
			var min  = Number(str.substr(13,3));&#xD;
			var sec  = Number(str.substr(17,3));&#xD;
			dstField.duration = DateTimeUtil.createDuration(pos,year,mon,day,hour,min,sec); 			&#xD;
			result += &quot;|INFO:dstField.duration = DateTimeUtil.createDuration(pos,year,mon,day,hour,min,sec); [&quot;+pos+&quot;,&quot;+year+&quot;,&quot;+mon+&quot;,&quot;+mon+&quot;,&quot;+day+&quot;,&quot;+hour+&quot;,&quot;+min+&quot;,&quot;+sec+&quot;]&quot;; &#xD;
		} else if (src == &quot;decimalFixed&quot; &amp;&amp; src2 == &quot;text&quot;) { &#xD;
			var str  = srcField2.text20; //+YYYMMMDDDhhhmmm or -YYYMMMDDDhhhmmm (and SSSS.ssss in srcField)&#xD;
			var pos  = (str.substr(0,1) == &quot;+&quot;);&#xD;
			var year = Number(str.substr(1,3));&#xD;
			var mon  = Number(str.substr(4,3));&#xD;
			var day  = Number(str.substr(7,3));&#xD;
			var hour = Number(str.substr(10,3));&#xD;
			var min  = Number(str.substr(13,3));&#xD;
			dstField.duration = DateTimeUtil.createDuration(pos,year,mon,day,hour,min,srcField.decimalFixed8Dot4); 			&#xD;
			result += &quot;|INFO:dstField.duration = DateTimeUtil.createDuration(pos,year,mon,day,hour,min,srcField.decimalFixed8Dot4); [&quot;+pos+&quot;,&quot;+year+&quot;,&quot;+mon+&quot;,&quot;+mon+&quot;,&quot;+day+&quot;,&quot;+hour+&quot;,&quot;+min+&quot;,&quot;+srcField.decimalFixed8Dot4+&quot;]&quot;; &#xD;
		} else {&#xD;
			result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
		}&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;id&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
//!//	if (src == &quot;boolt&quot;)			{ dstField.id = true; 									result += &quot;|INFO:dstField.id = true;&quot;; } else&#xD;
//!//	if (src == &quot;boolf&quot;)			{ dstField.id = false;		 							result += &quot;|INFO:dstField.id = false;&quot;; } else&#xD;
		if (src == &quot;string&quot;)		{ dstField.id = &quot;Hello World!&quot;; 						result += &quot;|INFO:dstField.id = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
//!//	if (src == &quot;number&quot;)		{ dstField.id = 123;			 						result += &quot;|INFO:dstField.id = 123;&quot;; } else&#xD;
//!//	if (src == &quot;bigint&quot;)		{ dstField.id = ScriptUtil.createBigInteger(123);		result += &quot;|INFO:dstField.id = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.id = srcField.bool; 							result += &quot;|INFO:dstField.id = srcField.bool;&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.id = srcField.date; 							result += &quot;|INFO:dstField.id = srcField.date;&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.id = srcField.time; 							result += &quot;|INFO:dstField.id = srcField.time;&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.id = srcField.datetime; 						result += &quot;|INFO:dstField.id = srcField.datetime;&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.id = srcField.datetimetz; 					result += &quot;|INFO:dstField.id = srcField.datetimetz;&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.id = srcField.decimalFloat; 					result += &quot;|INFO:dstField.id = srcField.decimalFloat;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.id = srcField.decimalFixed8Dot4; 			result += &quot;|INFO:dstField.id = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.id = srcField.integerSigned; 				result += &quot;|INFO:dstField.id = srcField.integerSigned;&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.id = srcField.integerFixed5; 				result += &quot;|INFO:dstField.id = srcField.integerFixed5;&quot;; } else&#xD;
		if (src == &quot;text&quot;) 			{ dstField.id = srcField.text20; 						result += &quot;|INFO:dstField.id = srcField.text20;&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.id = srcField.duration; 						result += &quot;|INFO:dstField.id = srcField.duration;&quot;; } else&#xD;
		if (src == &quot;id&quot;) 			{ dstField.id = srcField.id; 							result += &quot;|INFO:dstField.id = srcField.id;&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.id = srcField.uri; 							result += &quot;|INFO:dstField.id = srcField.uri;&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.id = srcField.boolList; 							result += &quot;|INFO:dstField.id = srcField.boolList;&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.id = srcField.dateList; 							result += &quot;|INFO:dstField.id = srcField.dateList;&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.id = srcField.timeList; 							result += &quot;|INFO:dstField.id = srcField.timeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.id = srcField.datetimeList; 						result += &quot;|INFO:dstField.id = srcField.datetimeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.id = srcField.datetimetzList; 					result += &quot;|INFO:dstField.id = srcField.datetimetzList;&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.id = srcField.decimalFloatList; 					result += &quot;|INFO:dstField.id = srcField.decimalFloatList;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.id = srcField.decimalFixed8Dot4List; 			result += &quot;|INFO:dstField.id = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.id = srcField.integerSignedList; 				result += &quot;|INFO:dstField.id = srcField.integerSignedList;&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.id = srcField.integerFixed5List; 				result += &quot;|INFO:dstField.id = srcField.integerFixed5List;&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.id = srcField.text20List; 						result += &quot;|INFO:dstField.id = srcField.text20List;&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.id = srcField.durationList; 						result += &quot;|INFO:dstField.id = srcField.durationList;&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.id = srcField.idList; 							result += &quot;|INFO:dstField.id = srcField.idList;&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.id = srcField.uriList; 							result += &quot;|INFO:dstField.id = srcField.uriList;&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;uri&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
//!//	if (src == &quot;boolt&quot;)			{ dstField.uri = true; 									result += &quot;|INFO:dstField.uri = true;&quot;; } else&#xD;
//!//	if (src == &quot;boolf&quot;)			{ dstField.uri = false;		 							result += &quot;|INFO:dstField.bouriol = false;&quot;; } else&#xD;
		if (src == &quot;string&quot;)		{ dstField.uri = &quot;Hello World!&quot;; 						result += &quot;|INFO:dstField.uri = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
//!//	if (src == &quot;number&quot;)		{ dstField.uri = 123;			 						result += &quot;|INFO:dstField.uri = 123;&quot;; } else&#xD;
//!//	if (src == &quot;bigint&quot;)		{ dstField.uri = ScriptUtil.createBigInteger(123);		result += &quot;|INFO:dstField.uri = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.uri = srcField.bool; 						result += &quot;|INFO:dstField.uri = srcField.bool;&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.uri = srcField.date; 						result += &quot;|INFO:dstField.uri = srcField.date;&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.uri = srcField.time; 						result += &quot;|INFO:dstField.uri = srcField.time;&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.uri = srcField.datetime; 					result += &quot;|INFO:dstField.uri = srcField.datetime;&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.uri = srcField.datetimetz; 					result += &quot;|INFO:dstField.uri = srcField.datetimetz;&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.uri = srcField.decimalFloat; 				result += &quot;|INFO:dstField.uri = srcField.decimalFloat;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.uri = srcField.decimalFixed8Dot4; 			result += &quot;|INFO:dstField.uri = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.uri = srcField.integerSigned; 				result += &quot;|INFO:dstField.uri = srcField.integerSigned;&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.uri = srcField.integerFixed5; 				result += &quot;|INFO:dstField.uri = srcField.integerFixed5;&quot;; } else&#xD;
		if (src == &quot;text&quot;) 			{ dstField.uri = srcField.text20; 						result += &quot;|INFO:dstField.uri = srcField.text20;&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.uri = srcField.duration; 					result += &quot;|INFO:dstField.uri = srcField.duration;&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.uri = srcField.id; 							result += &quot;|INFO:dstField.uri = srcField.id;&quot;; } else&#xD;
		if (src == &quot;uri&quot;) 			{ dstField.uri = srcField.uri; 							result += &quot;|INFO:dstField.uri = srcField.uri;&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.uri = srcField.boolList; 						result += &quot;|INFO:dstField.uri = srcField.boolList;&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.uri = srcField.dateList; 						result += &quot;|INFO:dstField.uri = srcField.dateList;&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.uri = srcField.timeList; 						result += &quot;|INFO:dstField.uri = srcField.timeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.uri = srcField.datetimeList; 					result += &quot;|INFO:dstField.uri = srcField.datetimeList;&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.uri = srcField.datetimetzList; 					result += &quot;|INFO:dstField.uri = srcField.datetimetzList;&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.uri = srcField.decimalFloatList; 				result += &quot;|INFO:dstField.uri = srcField.decimalFloatList;&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.uri = srcField.decimalFixed8Dot4List; 			result += &quot;|INFO:dstField.uri = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.uri = srcField.integerSignedList; 				result += &quot;|INFO:dstField.uri = srcField.integerSignedList;&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.uri = srcField.integerFixed5List; 				result += &quot;|INFO:dstField.uri = srcField.integerFixed5List;&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.uri = srcField.text20List; 						result += &quot;|INFO:dstField.uri = srcField.text20List;&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.uri = srcField.durationList; 					result += &quot;|INFO:dstField.uri = srcField.durationList;&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.uri = srcField.idList; 							result += &quot;|INFO:dstField.uri = srcField.idList;&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.uri = srcField.uriList; 							result += &quot;|INFO:dstField.uri = srcField.uriList;&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;boolList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
		if (src == &quot;boolt&quot;)			{ dstField.boolList.add(true); 							result += &quot;|INFO:dstField.boolList.add(true);&quot;; } else&#xD;
		if (src == &quot;boolf&quot;)			{ dstField.boolList.add(false);		 					result += &quot;|INFO:dstField.boolList.add(false);&quot;; } else&#xD;
//!//	if (src == &quot;string&quot;)		{ dstField.boolList.add(&quot;Hello World!&quot;); 				result += &quot;|INFO:dstField.boolList.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
//!//	if (src == &quot;number&quot;)		{ dstField.boolList.add(123);			 				result += &quot;|INFO:dstField.boolList.add(123);&quot;; } else&#xD;
//!//	if (src == &quot;bigint&quot;)		{ dstField.boolList.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.boolList.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
		if (src == &quot;bool&quot;) 			{ dstField.boolList.add(srcField.bool); 				result += &quot;|INFO:dstField.boolList.add(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.boolList.add(srcField.date); 				result += &quot;|INFO:dstField.boolList.add(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.boolList.add(srcField.time); 				result += &quot;|INFO:dstField.boolList.add(srcField.time);&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.boolList.add(srcField.datetime); 			result += &quot;|INFO:dstField.boolList.add(srcField.datetime);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.boolList.add(srcField.datetimetz); 			result += &quot;|INFO:dstField.boolList.add(srcField.datetimetz);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.boolList.add(srcField.decimalFloat); 		result += &quot;|INFO:dstField.boolList.add(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.boolList.add(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.boolList.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.boolList.add(srcField.integerSigned); 		result += &quot;|INFO:dstField.boolList.add(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.boolList.add(srcField.integerFixed5); 		result += &quot;|INFO:dstField.boolList.add(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.boolList.add(srcField.text20); 				result += &quot;|INFO:dstField.boolList.add(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.boolList.add(srcField.duration); 			result += &quot;|INFO:dstField.boolList.add(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.boolList.add(srcField.id); 					result += &quot;|INFO:dstField.boolList.add(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.boolList.add(srcField.uri); 					result += &quot;|INFO:dstField.boolList.add(srcField.uri);&quot;; } else&#xD;
&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.boolList.add(srcField.boolList); 				result += &quot;|INFO:dstField.boolList.add(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.boolList.add(srcField.dateList); 				result += &quot;|INFO:dstField.boolList.add(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.boolList.add(srcField.timeList); 				result += &quot;|INFO:dstField.boolList.add(srcField.timeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.boolList.add(srcField.datetimeList); 			result += &quot;|INFO:dstField.boolList.add(srcField.datetimeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.boolList.add(srcField.datetimetzList); 			result += &quot;|INFO:dstField.boolList.add(srcField.datetimetzList);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.boolList.add(srcField.decimalFloatList); 		result += &quot;|INFO:dstField.boolList.add(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.boolList.add(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.boolList.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.boolList.add(srcField.integerSignedList); 		result += &quot;|INFO:dstField.boolList.add(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.boolList.add(srcField.integerFixed5List); 		result += &quot;|INFO:dstField.boolList.add(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.boolList.add(srcField.text20List); 				result += &quot;|INFO:dstField.boolList.add(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.boolList.add(srcField.durationList); 			result += &quot;|INFO:dstField.boolList.add(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.boolList.add(srcField.idList); 					result += &quot;|INFO:dstField.boolList.add(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.boolList.add(srcField.uriList); 					result += &quot;|INFO:dstField.boolList.add(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;' (with direct assignment)&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) 	{&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.boolList.addAll(srcField.bool); 				result += &quot;|INFO:dstField.boolList.addAll(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.boolList.addAll(srcField.date); 				result += &quot;|INFO:dstField.boolList.addAll(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.boolList.addAll(srcField.time); 				result += &quot;|INFO:dstField.boolList.addAll(srcField.time);&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.boolList.addAll(srcField.datetime); 			result += &quot;|INFO:dstField.boolList.addAll(srcField.datetime);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.boolList.addAll(srcField.datetimetz); 		result += &quot;|INFO:dstField.boolList.addAll(srcField.datetimetz);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.boolList.addAll(srcField.decimalFloat); 		result += &quot;|INFO:dstField.boolList.addAll(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.boolList.addAll(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.boolList.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.boolList.addAll(srcField.integerSigned); 	result += &quot;|INFO:dstField.boolList.addAll(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.boolList.addAll(srcField.integerFixed5); 	result += &quot;|INFO:dstField.boolList.addAll(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.boolList.addAll(srcField.text20); 			result += &quot;|INFO:dstField.boolList.addAll(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.boolList.addAll(srcField.duration); 			result += &quot;|INFO:dstField.boolList.addAll(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.boolList.addAll(srcField.id); 				result += &quot;|INFO:dstField.boolList.addAll(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.boolList.addAll(srcField.uri); 				result += &quot;|INFO:dstField.boolList.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
&#xD;
		if (src == &quot;boolList&quot;) 			{ dstField.boolList.addAll(srcField.boolList); 				result += &quot;|INFO:dstField.boolList.addAll(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.boolList.addAll(srcField.dateList); 				result += &quot;|INFO:dstField.boolList.addAll(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.boolList.addAll(srcField.timeList); 				result += &quot;|INFO:dstField.boolList.addAll(srcField.timeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.boolList.addAll(srcField.datetimeList); 			result += &quot;|INFO:dstField.boolList.addAll(srcField.datetimeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.boolList.addAll(srcField.datetimetzList); 			result += &quot;|INFO:dstField.boolList.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.boolList.addAll(srcField.decimalFloatList); 		result += &quot;|INFO:dstField.boolList.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.boolList.addAll(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.boolList.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.boolList.addAll(srcField.integerSignedList); 		result += &quot;|INFO:dstField.boolList.addAll(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.boolList.addAll(srcField.integerFixed5List); 		result += &quot;|INFO:dstField.boolList.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.boolList.addAll(srcField.text20List); 				result += &quot;|INFO:dstField.boolList.addAll(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.boolList.addAll(srcField.durationList); 			result += &quot;|INFO:dstField.boolList.addAll(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.boolList.addAll(srcField.idList); 					result += &quot;|INFO:dstField.boolList.addAll(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.boolList.addAll(srcField.uriList); 					result += &quot;|INFO:dstField.boolList.addAll(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;' (with direct assignment)&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}&#xD;
} else if (dst == &quot;dateList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
//!//	if (src == &quot;boolt&quot;)			{ dstField.dateList.add(true); 							result += &quot;|INFO:dstField.dateList.add(true);&quot;; } else&#xD;
//!//	if (src == &quot;boolf&quot;)			{ dstField.dateList.add(false);		 					result += &quot;|INFO:dstField.dateList.add(false);&quot;; } else&#xD;
//!//	if (src == &quot;string&quot;)		{ dstField.dateList.add(&quot;Hello World!&quot;); 				result += &quot;|INFO:dstField.dateList.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
//!//	if (src == &quot;number&quot;)		{ dstField.dateList.add(123);			 				result += &quot;|INFO:dstField.dateList.add(123);&quot;; } else&#xD;
//!//	if (src == &quot;bigint&quot;)		{ dstField.dateList.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.dateList.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.dateList.add(srcField.bool); 				result += &quot;|INFO:dstField.dateList.add(srcField.bool);&quot;; } else&#xD;
		if (src == &quot;date&quot;) 			{ dstField.dateList.add(srcField.date); 				result += &quot;|INFO:dstField.dateList.add(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.dateList.add(srcField.time); 				result += &quot;|INFO:dstField.dateList.add(srcField.time);&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.dateList.add(srcField.datetime); 			result += &quot;|INFO:dstField.dateList.add(srcField.datetime);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.dateList.add(srcField.datetimetz); 			result += &quot;|INFO:dstField.dateList.add(srcField.datetimetz);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.dateList.add(srcField.decimalFloat); 		result += &quot;|INFO:dstField.dateList.add(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.dateList.add(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.dateList.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.dateList.add(srcField.integerSigned); 		result += &quot;|INFO:dstField.dateList.add(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.dateList.add(srcField.integerFixed5); 		result += &quot;|INFO:dstField.dateList.add(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.dateList.add(srcField.text20); 				result += &quot;|INFO:dstField.dateList.add(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.dateList.add(srcField.duration); 			result += &quot;|INFO:dstField.dateList.add(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.dateList.add(srcField.id); 					result += &quot;|INFO:dstField.dateList.add(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.dateList.add(srcField.uri); 					result += &quot;|INFO:dstField.dateList.add(srcField.uri);&quot;; } else&#xD;
&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.dateList.add(srcField.boolList); 				result += &quot;|INFO:dstField.dateList.add(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.dateList.add(srcField.dateList); 				result += &quot;|INFO:dstField.dateList.add(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.dateList.add(srcField.timeList); 				result += &quot;|INFO:dstField.dateList.add(srcField.timeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.dateList.add(srcField.datetimeList); 			result += &quot;|INFO:dstField.dateList.add(srcField.datetimeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.dateList.add(srcField.datetimetzList); 			result += &quot;|INFO:dstField.dateList.add(srcField.datetimetzList);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.dateList.add(srcField.decimalFloatList); 		result += &quot;|INFO:dstField.dateList.add(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.dateList.add(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.dateList.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.dateList.add(srcField.integerSignedList); 		result += &quot;|INFO:dstField.dateList.add(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.dateList.add(srcField.integerFixed5List); 		result += &quot;|INFO:dstField.dateList.add(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.dateList.add(srcField.text20List); 				result += &quot;|INFO:dstField.dateList.add(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.dateList.add(srcField.durationList); 			result += &quot;|INFO:dstField.dateList.add(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.dateList.add(srcField.idList); 					result += &quot;|INFO:dstField.dateList.add(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.dateList.add(srcField.uriList); 					result += &quot;|INFO:dstField.dateList.add(srcField.uriList);&quot;; } else&#xD;
												{ 											result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.dateList.addAll(srcField.bool); 				result += &quot;|INFO:dstField.dateList.addAll(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.dateList.addAll(srcField.date); 				result += &quot;|INFO:dstField.dateList.addAll(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.dateList.addAll(srcField.time); 				result += &quot;|INFO:dstField.dateList.addAll(srcField.time);&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.dateList.addAll(srcField.datetime); 			result += &quot;|INFO:dstField.dateList.addAll(srcField.datetime);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.dateList.addAll(srcField.datetimetz); 			result += &quot;|INFO:dstField.dateList.addAll(srcField.datetimetz);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.dateList.addAll(srcField.decimalFloat); 		result += &quot;|INFO:dstField.dateList.addAll(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.dateList.addAll(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.dateList.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.dateList.addAll(srcField.integerSigned); 		result += &quot;|INFO:dstField.dateList.addAll(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.dateList.addAll(srcField.integerFixed5); 		result += &quot;|INFO:dstField.dateList.addAll(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.dateList.addAll(srcField.text20); 				result += &quot;|INFO:dstField.dateList.addAll(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.dateList.addAll(srcField.duration); 			result += &quot;|INFO:dstField.dateList.addAll(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.dateList.addAll(srcField.id); 					result += &quot;|INFO:dstField.dateList.addAll(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.dateList.addAll(srcField.uri); 					result += &quot;|INFO:dstField.dateList.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.dateList.addAll(srcField.boolList); 				result += &quot;|INFO:dstField.dateList.addAll(srcField.boolList);&quot;; } else&#xD;
		if (src == &quot;dateList&quot;) 			{ dstField.dateList.addAll(srcField.dateList); 				result += &quot;|INFO:dstField.dateList.addAll(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.dateList.addAll(srcField.timeList); 				result += &quot;|INFO:dstField.dateList.addAll(srcField.timeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.dateList.addAll(srcField.datetimeList); 			result += &quot;|INFO:dstField.dateList.addAll(srcField.datetimeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.dateList.addAll(srcField.datetimetzList); 			result += &quot;|INFO:dstField.dateList.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.dateList.addAll(srcField.decimalFloatList); 		result += &quot;|INFO:dstField.dateList.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.dateList.addAll(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.dateList.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.dateList.addAll(srcField.integerSignedList); 		result += &quot;|INFO:dstField.dateList.addAll(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.dateList.addAll(srcField.integerFixed5List); 		result += &quot;|INFO:dstField.dateList.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.dateList.addAll(srcField.text20List); 				result += &quot;|INFO:dstField.dateList.addAll(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.dateList.addAll(srcField.durationList); 			result += &quot;|INFO:dstField.dateList.addAll(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.dateList.addAll(srcField.idList); 					result += &quot;|INFO:dstField.dateList.addAll(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.dateList.addAll(srcField.uriList); 					result += &quot;|INFO:dstField.dateList.addAll(srcField.uriList);&quot;; } else&#xD;
												{ 											result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;timeList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
//!//	if (src == &quot;boolt&quot;)			{ dstField.timeList.add(true); 							result += &quot;|INFO:dstField.timeList.add(true);&quot;; } else&#xD;
//!//	if (src == &quot;boolf&quot;)			{ dstField.timeList.add(false);		 					result += &quot;|INFO:dstField.timeList.add(false);&quot;; } else&#xD;
//!//	if (src == &quot;string&quot;)		{ dstField.timeList.add(&quot;Hello World!&quot;); 				result += &quot;|INFO:dstField.timeList.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
//!//	if (src == &quot;number&quot;)		{ dstField.timeList.add(123);			 				result += &quot;|INFO:dstField.timeList.add(123);&quot;; } else&#xD;
//!//	if (src == &quot;bigint&quot;)		{ dstField.timeList.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.timeList.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.timeList.add(srcField.bool); 				result += &quot;|INFO:dstField.timeList.add(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.timeList.add(srcField.date); 				result += &quot;|INFO:dstField.timeList.add(srcField.date);&quot;; } else&#xD;
		if (src == &quot;time&quot;) 			{ dstField.timeList.add(srcField.time); 				result += &quot;|INFO:dstField.timeList.add(srcField.time);&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.timeList.add(srcField.datetime); 			result += &quot;|INFO:dstField.timeList.add(srcField.datetime);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.timeList.add(srcField.datetimetz); 			result += &quot;|INFO:dstField.timeList.add(srcField.datetimetz);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.timeList.add(srcField.decimalFloat); 		result += &quot;|INFO:dstField.timeList.add(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.timeList.add(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.timeList.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;)	 	{ dstField.timeList.add(srcField.integerSigned); 		result += &quot;|INFO:dstField.timeList.add(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.timeList.add(srcField.integerFixed5); 		result += &quot;|INFO:dstField.timeList.add(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.timeList.add(srcField.text20); 				result += &quot;|INFO:dstField.timeList.add(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.timeList.add(srcField.duration); 			result += &quot;|INFO:dstField.timeList.add(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.timeList.add(srcField.id); 					result += &quot;|INFO:dstField.timeList.add(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.timeList.add(srcField.uri); 					result += &quot;|INFO:dstField.timeList.add(srcField.uri);&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.timeList.add(srcField.boolList); 				result += &quot;|INFO:dstField.timeList.add(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.timeList.add(srcField.dateList); 				result += &quot;|INFO:dstField.timeList.add(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.timeList.add(srcField.timeList); 				result += &quot;|INFO:dstField.timeList.add(srcField.timeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.timeList.add(srcField.datetimeList); 			result += &quot;|INFO:dstField.timeList.add(srcField.datetimeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.timeList.add(srcField.datetimetzList); 			result += &quot;|INFO:dstField.timeList.add(srcField.datetimetzList);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.timeList.add(srcField.decimalFloatList); 		result += &quot;|INFO:dstField.timeList.add(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.timeList.add(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.timeList.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;)	 	{ dstField.timeList.add(srcField.integerSignedList); 		result += &quot;|INFO:dstField.timeList.add(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.timeList.add(srcField.integerFixed5List); 		result += &quot;|INFO:dstField.timeList.add(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.timeList.add(srcField.text20List); 				result += &quot;|INFO:dstField.timeList.add(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.timeList.add(srcField.durationList); 			result += &quot;|INFO:dstField.timeList.add(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.timeList.add(srcField.idList); 					result += &quot;|INFO:dstField.timeList.add(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.timeList.add(srcField.uriList); 					result += &quot;|INFO:dstField.timeList.add(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.timeList.addAll(srcField.bool); 				result += &quot;|INFO:dstField.timeList.addAll(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.timeList.addAll(srcField.date); 				result += &quot;|INFO:dstField.timeList.addAll(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.timeList.addAll(srcField.time); 				result += &quot;|INFO:dstField.timeList.addAll(srcField.time);&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.timeList.addAll(srcField.datetime); 			result += &quot;|INFO:dstField.timeList.addAll(srcField.datetime);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.timeList.addAll(srcField.datetimetz); 			result += &quot;|INFO:dstField.timeList.addAll(srcField.datetimetz);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.timeList.addAll(srcField.decimalFloat); 		result += &quot;|INFO:dstField.timeList.addAll(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.timeList.addAll(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.timeList.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;)	 	{ dstField.timeList.addAll(srcField.integerSigned); 		result += &quot;|INFO:dstField.timeList.addAll(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.timeList.addAll(srcField.integerFixed5); 		result += &quot;|INFO:dstField.timeList.addAll(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.timeList.addAll(srcField.text20); 				result += &quot;|INFO:dstField.timeList.addAll(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.timeList.addAll(srcField.duration); 			result += &quot;|INFO:dstField.timeList.addAll(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.timeList.addAll(srcField.id); 					result += &quot;|INFO:dstField.timeList.addAll(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.timeList.addAll(srcField.uri); 					result += &quot;|INFO:dstField.timeList.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.timeList.addAll(srcField.boolList); 				result += &quot;|INFO:dstField.timeList.addAll(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.timeList.addAll(srcField.dateList); 				result += &quot;|INFO:dstField.timeList.addAll(srcField.dateList);&quot;; } else&#xD;
		if (src == &quot;timeList&quot;) 			{ dstField.timeList.addAll(srcField.timeList); 				result += &quot;|INFO:dstField.timeList.addAll(srcField.timeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.timeList.addAll(srcField.datetimeList); 			result += &quot;|INFO:dstField.timeList.addAll(srcField.datetimeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.timeList.addAll(srcField.datetimetzList); 			result += &quot;|INFO:dstField.timeList.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.timeList.addAll(srcField.decimalFloatList); 		result += &quot;|INFO:dstField.timeList.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.timeList.addAll(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.timeList.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;)	 	{ dstField.timeList.addAll(srcField.integerSignedList); 		result += &quot;|INFO:dstField.timeList.addAll(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.timeList.addAll(srcField.integerFixed5List); 		result += &quot;|INFO:dstField.timeList.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.timeList.addAll(srcField.text20List); 				result += &quot;|INFO:dstField.timeList.addAll(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.timeList.addAll(srcField.durationList); 			result += &quot;|INFO:dstField.timeList.addAll(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.timeList.addAll(srcField.idList); 					result += &quot;|INFO:dstField.timeList.addAll(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.timeList.addAll(srcField.uriList); 					result += &quot;|INFO:dstField.timeList.addAll(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;datetimeList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
//!//	if (src == &quot;boolt&quot;)			{ dstField.datetimeList.add(true); 						result += &quot;|INFO:dstField.datetimeList.add(true);&quot;; } else&#xD;
//!//	if (src == &quot;boolf&quot;)			{ dstField.datetimeList.add(false);		 				result += &quot;|INFO:dstField.datetimeList.add(false);&quot;; } else&#xD;
//!//	if (src == &quot;string&quot;)		{ dstField.datetimeList.add(&quot;Hello World!&quot;); 			result += &quot;|INFO:dstField.datetimeList.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
//!//	if (src == &quot;number&quot;)		{ dstField.datetimeList.add(123);			 			result += &quot;|INFO:dstField.datetimeList.add(123);&quot;; } else&#xD;
//!//	if (src == &quot;bigint&quot;)		{ dstField.datetimeList.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.datetimeList.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.datetimeList.add(srcField.bool); 			result += &quot;|INFO:dstField.datetimeList.add(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.datetimeList.add(srcField.date); 			result += &quot;|INFO:dstField.datetimeList.add(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.datetimeList.add(srcField.time); 			result += &quot;|INFO:dstField.datetimeList.add(srcField.time);&quot;; } else&#xD;
		if (src == &quot;datetime&quot;) 		{ dstField.datetimeList.add(srcField.datetime); 		result += &quot;|INFO:dstField.datetimeList.add(srcField.datetime);&quot;; } else&#xD;
		if (src == &quot;datetimetz&quot;) 	{ dstField.datetimeList.add(srcField.datetimetz); 		result += &quot;|INFO:dstField.datetimeList.add(srcField.datetimetz);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.datetimeList.add(srcField.decimalFloat); 	result += &quot;|INFO:dstField.datetimeList.add(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.datetimeList.add(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.datetimeList.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.datetimeList.add(srcField.integerSigned); 	result += &quot;|INFO:dstField.datetimeList.add(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.datetimeList.add(srcField.integerFixed5); 	result += &quot;|INFO:dstField.datetimeList.add(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.datetimeList.add(srcField.text20); 			result += &quot;|INFO:dstField.datetimeList.add(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.datetimeList.add(srcField.duration); 		result += &quot;|INFO:dstField.datetimeList.add(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.datetimeList.add(srcField.id); 				result += &quot;|INFO:dstField.datetimeList.add(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.datetimeList.add(srcField.uri); 				result += &quot;|INFO:dstField.datetimeList.add(srcField.uri);&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.datetimeList.add(srcField.boolList); 			result += &quot;|INFO:dstField.datetimeList.add(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.datetimeList.add(srcField.dateList); 			result += &quot;|INFO:dstField.datetimeList.add(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.datetimeList.add(srcField.timeList); 			result += &quot;|INFO:dstField.datetimeList.add(srcField.timeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.datetimeList.add(srcField.datetimeList); 		result += &quot;|INFO:dstField.datetimeList.add(srcField.datetimeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.datetimeList.add(srcField.datetimetzList); 		result += &quot;|INFO:dstField.datetimeList.add(srcField.datetimetzList);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.datetimeList.add(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.datetimeList.add(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.datetimeList.add(srcField.decimalFixed8Dot4List);	result += &quot;|INFO:dstField.datetimeList.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.datetimeList.add(srcField.integerSignedList); 	result += &quot;|INFO:dstField.datetimeList.add(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.datetimeList.add(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.datetimeList.add(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.datetimeList.add(srcField.text20List); 			result += &quot;|INFO:dstField.datetimeList.add(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.datetimeList.add(srcField.durationList); 		result += &quot;|INFO:dstField.datetimeList.add(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.datetimeList.add(srcField.idList); 				result += &quot;|INFO:dstField.datetimeList.add(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.datetimeList.add(srcField.uriList); 				result += &quot;|INFO:dstField.datetimeList.add(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.datetimeList.addAll(srcField.bool); 			result += &quot;|INFO:dstField.datetimeList.addAll(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.datetimeList.addAll(srcField.date); 			result += &quot;|INFO:dstField.datetimeList.addAll(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.datetimeList.addAll(srcField.time); 			result += &quot;|INFO:dstField.datetimeList.addAll(srcField.time);&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.datetimeList.addAll(srcField.datetime); 		result += &quot;|INFO:dstField.datetimeList.addAll(srcField.datetime);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.datetimeList.addAll(srcField.datetimetz); 		result += &quot;|INFO:dstField.datetimeList.addAll(srcField.datetimetz);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.datetimeList.addAll(srcField.decimalFloat); 	result += &quot;|INFO:dstField.datetimeList.addAll(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.datetimeList.addAll(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.datetimeList.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.datetimeList.addAll(srcField.integerSigned); 	result += &quot;|INFO:dstField.datetimeList.addAll(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.datetimeList.addAll(srcField.integerFixed5); 	result += &quot;|INFO:dstField.datetimeList.addAll(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.datetimeList.addAll(srcField.text20); 			result += &quot;|INFO:dstField.datetimeList.addAll(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.datetimeList.addAll(srcField.duration); 		result += &quot;|INFO:dstField.datetimeList.addAll(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.datetimeList.addAll(srcField.id); 				result += &quot;|INFO:dstField.datetimeList.addAll(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.datetimeList.addAll(srcField.uri); 				result += &quot;|INFO:dstField.datetimeList.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.datetimeList.addAll(srcField.boolList); 			result += &quot;|INFO:dstField.datetimeList.addAll(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.datetimeList.addAll(srcField.dateList); 			result += &quot;|INFO:dstField.datetimeList.addAll(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.datetimeList.addAll(srcField.timeList); 			result += &quot;|INFO:dstField.datetimeList.addAll(srcField.timeList);&quot;; } else&#xD;
		if (src == &quot;datetimeList&quot;) 		{ dstField.datetimeList.addAll(srcField.datetimeList); 		result += &quot;|INFO:dstField.datetimeList.addAll(srcField.datetimeList);&quot;; } else&#xD;
		if (src == &quot;datetimetzList&quot;) 	{ dstField.datetimeList.addAll(srcField.datetimetzList); 		result += &quot;|INFO:dstField.datetimeList.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.datetimeList.addAll(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.datetimeList.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.datetimeList.addAll(srcField.decimalFixed8Dot4List);	result += &quot;|INFO:dstField.datetimeList.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.datetimeList.addAll(srcField.integerSignedList); 	result += &quot;|INFO:dstField.datetimeList.addAll(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.datetimeList.addAll(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.datetimeList.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.datetimeList.addAll(srcField.text20List); 			result += &quot;|INFO:dstField.datetimeList.addAll(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.datetimeList.addAll(srcField.durationList); 		result += &quot;|INFO:dstField.datetimeList.addAll(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.datetimeList.addAll(srcField.idList); 				result += &quot;|INFO:dstField.datetimeList.addAll(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.datetimeList.addAll(srcField.uriList); 				result += &quot;|INFO:dstField.datetimeList.addAll(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;datetimetzList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
//!//	if (src == &quot;boolt&quot;)			{ dstField.datetimetzList.add(true); 					result += &quot;|INFO:dstField.datetimetzList.add(true);&quot;; } else&#xD;
//!//	if (src == &quot;boolf&quot;)			{ dstField.datetimetzList.add(false);		 			result += &quot;|INFO:dstField.datetimetzList.add(false);&quot;; } else&#xD;
//!//	if (src == &quot;string&quot;)		{ dstField.datetimetzList.add(&quot;Hello World!&quot;); 			result += &quot;|INFO:dstField.datetimetzList.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
//!//	if (src == &quot;number&quot;)		{ dstField.datetimetzList.add(123);			 			result += &quot;|INFO:dstField.datetimetzList.add(123);&quot;; } else&#xD;
//!//	if (src == &quot;bigint&quot;)		{ dstField.datetimetzList.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.datetimetzList.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.datetimetzList.add(srcField.bool); 			result += &quot;|INFO:dstField.datetimetzList.add(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.datetimetzList.add(srcField.date); 			result += &quot;|INFO:dstField.datetimetzList.add(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.datetimetzList.add(srcField.time); 			result += &quot;|INFO:dstField.datetimetzList.add(srcField.time);&quot;; } else&#xD;
		if (src == &quot;datetime&quot;) 		{ dstField.datetimetzList.add(srcField.datetime); 		result += &quot;|INFO:dstField.datetimetzList.add(srcField.datetime);&quot;; } else&#xD;
		if (src == &quot;datetimetz&quot;) 	{ dstField.datetimetzList.add(srcField.datetimetz); 	result += &quot;|INFO:dstField.datetimetzList.add(srcField.datetimetz);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.datetimetzList.add(srcField.decimalFloat); 	result += &quot;|INFO:dstField.datetimetzList.add(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.datetimetzList.add(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.datetimetzList.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.datetimetzList.add(srcField.integerSigned); 	result += &quot;|INFO:dstField.datetimetzList.add(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.datetimetzList.add(srcField.integerFixed5); 	result += &quot;|INFO:dstField.datetimetzList.add(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.datetimetzList.add(srcField.text20); 		result += &quot;|INFO:dstField.datetimetzList.add(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.datetimetzList.add(srcField.duration); 		result += &quot;|INFO:dstField.datetimetzList.add(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.datetimetzList.add(srcField.id); 			result += &quot;|INFO:dstField.datetimetzList.add(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.datetimetzList.add(srcField.uri); 			result += &quot;|INFO:dstField.datetimetzList.add(srcField.uri);&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.datetimetzList.add(srcField.boolList); 			result += &quot;|INFO:dstField.datetimetzList.add(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.datetimetzList.add(srcField.dateList); 			result += &quot;|INFO:dstField.datetimetzList.add(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.datetimetzList.add(srcField.timeList); 			result += &quot;|INFO:dstField.datetimetzList.add(srcField.timeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.datetimetzList.add(srcField.datetimeList); 		result += &quot;|INFO:dstField.datetimetzList.add(srcField.datetimeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.datetimetzList.add(srcField.datetimetzList); 	result += &quot;|INFO:dstField.datetimetzList.add(srcField.datetimetzList);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.datetimetzList.add(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.datetimetzList.add(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.datetimetzList.add(srcField.decimalFixed8Dot4List);	result += &quot;|INFO:dstField.datetimetzList.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.datetimetzList.add(srcField.integerSignedList); 	result += &quot;|INFO:dstField.datetimetzList.add(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.datetimetzList.add(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.datetimetzList.add(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.datetimetzList.add(srcField.text20List); 		result += &quot;|INFO:dstField.datetimetzList.add(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.datetimetzList.add(srcField.durationList); 		result += &quot;|INFO:dstField.datetimetzList.add(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.datetimetzList.add(srcField.idList); 			result += &quot;|INFO:dstField.datetimetzList.add(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.datetimetzList.add(srcField.uriList); 			result += &quot;|INFO:dstField.datetimetzList.add(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.datetimetzList.addAll(srcField.bool); 			result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.datetimetzList.addAll(srcField.date); 			result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.datetimetzList.addAll(srcField.time); 			result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.time);&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.datetimetzList.addAll(srcField.datetime); 		result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.datetime);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.datetimetzList.addAll(srcField.datetimetz); 	result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.datetimetz);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.datetimetzList.addAll(srcField.decimalFloat); 	result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.datetimetzList.addAll(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.datetimetzList.addAll(srcField.integerSigned); 	result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.datetimetzList.addAll(srcField.integerFixed5); 	result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.datetimetzList.addAll(srcField.text20); 		result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.datetimetzList.addAll(srcField.duration); 		result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.datetimetzList.addAll(srcField.id); 			result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.datetimetzList.addAll(srcField.uri); 			result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.datetimetzList.addAll(srcField.boolList); 			result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.datetimetzList.addAll(srcField.dateList); 			result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.datetimetzList.addAll(srcField.timeList); 			result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.timeList);&quot;; } else&#xD;
		if (src == &quot;datetimeList&quot;) 		{ dstField.datetimetzList.addAll(srcField.datetimeList); 		result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.datetimeList);&quot;; } else&#xD;
		if (src == &quot;datetimetzList&quot;) 	{ dstField.datetimetzList.addAll(srcField.datetimetzList); 	result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.datetimetzList.addAll(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.datetimetzList.addAll(srcField.decimalFixed8Dot4List);	result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.datetimetzList.addAll(srcField.integerSignedList); 	result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.datetimetzList.addAll(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.datetimetzList.addAll(srcField.text20List); 		result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.datetimetzList.addAll(srcField.durationList); 		result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.datetimetzList.addAll(srcField.idList); 			result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.datetimetzList.addAll(srcField.uriList); 			result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;decimalFloatList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
//!//	if (src == &quot;boolt&quot;)			{ dstField.decimalFloatList.add(true); 					result += &quot;|INFO:dstField.decimalFloatList.add(true);&quot;; } else&#xD;
//!//	if (src == &quot;boolf&quot;)			{ dstField.decimalFloatList.add(false);		 			result += &quot;|INFO:dstField.decimalFloatList.add(false);&quot;; } else&#xD;
//!//	if (src == &quot;string&quot;)		{ dstField.decimalFloatList.add(&quot;Hello World!&quot;); 		result += &quot;|INFO:dstField.decimalFloatList.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
		if (src == &quot;number&quot;)		{ dstField.decimalFloatList.add(123);			 		result += &quot;|INFO:dstField.decimalFloatList.add(123);&quot;; } else&#xD;
//!//	if (src == &quot;bigint&quot;)		{ dstField.decimalFloatList.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.decimalFloatList.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.decimalFloatList.add(srcField.bool); 		result += &quot;|INFO:dstField.decimalFloatList.add(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.decimalFloatList.add(srcField.date); 		result += &quot;|INFO:dstField.decimalFloatList.add(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.decimalFloatList.add(srcField.time); 		result += &quot;|INFO:dstField.decimalFloatList.add(srcField.time);&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.decimalFloatList.add(srcField.datetime); 	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.datetime);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.decimalFloatList.add(srcField.datetimetz); 	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.datetimetz);&quot;; } else	&#xD;
		if (src == &quot;decimalFloat&quot;) 	{ dstField.decimalFloatList.add(srcField.decimalFloat);	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.decimalFloatList.add(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
		if (src == &quot;intSigned&quot;) 	{ dstField.decimalFloatList.add(srcField.integerSigned);	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.decimalFloatList.add(srcField.integerFixed5);	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.decimalFloatList.add(srcField.text20); 			result += &quot;|INFO:dstField.decimalFloatList.add(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.decimalFloatList.add(srcField.duration); 	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.decimalFloatList.add(srcField.id); 			result += &quot;|INFO:dstField.decimalFloatList.add(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.decimalFloatList.add(srcField.uri); 			result += &quot;|INFO:dstField.decimalFloatList.add(srcField.uri);&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.decimalFloatList.add(srcField.boolList); 		result += &quot;|INFO:dstField.decimalFloatList.add(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.decimalFloatList.add(srcField.dateList); 		result += &quot;|INFO:dstField.decimalFloatList.add(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.decimalFloatList.add(srcField.timeList); 		result += &quot;|INFO:dstField.decimalFloatList.add(srcField.timeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.decimalFloatList.add(srcField.datetimeList); 	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.datetimeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.decimalFloatList.add(srcField.datetimetzList); 	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.datetimetzList);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.decimalFloatList.add(srcField.decimalFloatList);	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.decimalFloatList.add(srcField.decimalFixed8Dot4List);	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.decimalFloatList.add(srcField.integerSignedList);	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.decimalFloatList.add(srcField.integerFixed5List);	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.decimalFloatList.add(srcField.text20List); 			result += &quot;|INFO:dstField.decimalFloatList.add(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.decimalFloatList.add(srcField.durationList); 	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.decimalFloatList.add(srcField.idList); 			result += &quot;|INFO:dstField.decimalFloatList.add(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.decimalFloatList.add(srcField.uriList); 			result += &quot;|INFO:dstField.decimalFloatList.add(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.decimalFloatList.addAll(srcField.bool); 		result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.decimalFloatList.addAll(srcField.date); 		result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.decimalFloatList.addAll(srcField.time); 		result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.time);&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.decimalFloatList.addAll(srcField.datetime); 	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.datetime);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.decimalFloatList.addAll(srcField.datetimetz); 	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.datetimetz);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.decimalFloatList.addAll(srcField.decimalFloat);	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.decimalFloatList.addAll(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.decimalFloatList.addAll(srcField.integerSigned);	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.decimalFloatList.addAll(srcField.integerFixed5);	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.decimalFloatList.addAll(srcField.text20); 			result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.decimalFloatList.addAll(srcField.duration); 	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.decimalFloatList.addAll(srcField.id); 			result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.decimalFloatList.addAll(srcField.uri); 			result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.decimalFloatList.addAll(srcField.boolList); 		result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.decimalFloatList.addAll(srcField.dateList); 		result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.decimalFloatList.addAll(srcField.timeList); 		result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.timeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.decimalFloatList.addAll(srcField.datetimeList); 	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.datetimeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.decimalFloatList.addAll(srcField.datetimetzList); 	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
		if (src == &quot;decimalFloatList&quot;) 	{ dstField.decimalFloatList.addAll(srcField.decimalFloatList);	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.decimalFloatList.addAll(srcField.decimalFixed8Dot4List);	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
		if (src == &quot;intSignedList&quot;) 	{ dstField.decimalFloatList.addAll(srcField.integerSignedList);	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.decimalFloatList.addAll(srcField.integerFixed5List);	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.decimalFloatList.addAll(srcField.text20List); 			result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.decimalFloatList.addAll(srcField.durationList); 	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.decimalFloatList.addAll(srcField.idList); 			result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.decimalFloatList.addAll(srcField.uriList); 			result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;decimalFixedList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
//!//	if (src == &quot;boolt&quot;)			{ dstField.decimalFixed8Dot4List.add(true); 			result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(true);&quot;; } else&#xD;
//!//	if (src == &quot;boolf&quot;)			{ dstField.decimalFixed8Dot4List.add(false);		 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(false);&quot;; } else&#xD;
//!//	if (src == &quot;string&quot;)		{ dstField.decimalFixed8Dot4List.add(&quot;Hello World!&quot;); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
//!//	if (src == &quot;number&quot;)		{ dstField.decimalFixed8Dot4List.add(123);			 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(123);&quot;; } else&#xD;
//!//	if (src == &quot;bigint&quot;)		{ dstField.decimalFixed8Dot4List.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.bool); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.date); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.time); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.time);&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.decimalFixed8Dot4List.add(srcField.datetime); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.datetime);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.decimalFixed8Dot4List.add(srcField.datetimetz); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.datetimetz);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.decimalFixed8Dot4List.add(srcField.decimalFloat); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.decimalFloat);&quot;; } else&#xD;
		if (src == &quot;decimalFixed&quot;) 	{ dstField.decimalFixed8Dot4List.add(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.decimalFixed8Dot4List.add(srcField.integerSigned); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.decimalFixed8Dot4List.add(srcField.integerFixed5); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.text20); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.decimalFixed8Dot4List.add(srcField.duration); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.id); 		result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.uri); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.uri);&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.boolList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.dateList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.timeList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.timeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.decimalFixed8Dot4List.add(srcField.datetimeList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.datetimeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.decimalFixed8Dot4List.add(srcField.datetimetzList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.datetimetzList);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.decimalFixed8Dot4List.add(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.decimalFixed8Dot4List.add(srcField.decimalFixed8Dot4List);	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.decimalFixed8Dot4List.add(srcField.integerSignedList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.decimalFixed8Dot4List.add(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.text20List); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.decimalFixed8Dot4List.add(srcField.durationList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.idList); 		result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.uriList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.bool); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.date); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.time); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.time);&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.decimalFixed8Dot4List.addAll(srcField.datetime); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.datetime);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.decimalFixed8Dot4List.addAll(srcField.datetimetz); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.datetimetz);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.decimalFixed8Dot4List.addAll(srcField.decimalFloat); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.decimalFixed8Dot4List.addAll(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.decimalFixed8Dot4List.addAll(srcField.integerSigned); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.decimalFixed8Dot4List.addAll(srcField.integerFixed5); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.text20); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.decimalFixed8Dot4List.addAll(srcField.duration); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.id); 		result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.uri); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.boolList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.dateList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.timeList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.timeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.decimalFixed8Dot4List.addAll(srcField.datetimeList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.datetimeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.decimalFixed8Dot4List.addAll(srcField.datetimetzList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.decimalFixed8Dot4List.addAll(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
		if (src == &quot;decimalFixedList&quot;) 	{ dstField.decimalFixed8Dot4List.addAll(srcField.decimalFixed8Dot4List);	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.decimalFixed8Dot4List.addAll(srcField.integerSignedList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.decimalFixed8Dot4List.addAll(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.text20List); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.decimalFixed8Dot4List.addAll(srcField.durationList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.idList); 		result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.uriList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;intSignedList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
//!//	if (src == &quot;boolt&quot;)			{ dstField.integerSignedList.add(true); 				result += &quot;|INFO:dstField.integerSignedList.add(true);&quot;; } else&#xD;
//!//	if (src == &quot;boolf&quot;)			{ dstField.integerSignedList.add(false);		 		result += &quot;|INFO:dstField.integerSignedList.add(false);&quot;; } else&#xD;
//!//	if (src == &quot;string&quot;)		{ dstField.integerSignedList.add(&quot;Hello World!&quot;); 		result += &quot;|INFO:dstField.integerSignedList.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
		if (src == &quot;number&quot;)		{ dstField.integerSignedList.add(123);			 		result += &quot;|INFO:dstField.integerSignedList.add(123);&quot;; } else&#xD;
//!//	if (src == &quot;bigint&quot;)		{ dstField.integerSignedList.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.integerSignedList.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.integerSignedList.add(srcField.bool); 		result += &quot;|INFO:dstField.integerSignedList.add(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.integerSignedList.add(srcField.date); 		result += &quot;|INFO:dstField.integerSignedList.add(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.integerSignedList.add(srcField.time); 		result += &quot;|INFO:dstField.integerSignedList.add(srcField.time);&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.integerSignedList.add(srcField.datetime); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.datetime);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.integerSignedList.add(srcField.datetimetz); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.datetimetz);&quot;; } else	&#xD;
		if (src == &quot;decimalFloat&quot;) 	{ dstField.integerSignedList.add(srcField.decimalFloat); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.integerSignedList.add(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
		if (src == &quot;intSigned&quot;) 	{ dstField.integerSignedList.add(srcField.integerSigned); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.integerSignedList.add(srcField.integerFixed5); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.integerSignedList.add(srcField.text20); 		result += &quot;|INFO:dstField.integerSignedList.add(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.integerSignedList.add(srcField.duration); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.integerSignedList.add(srcField.id); 			result += &quot;|INFO:dstField.integerSignedList.add(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.integerSignedList.add(srcField.uri); 		result += &quot;|INFO:dstField.integerSignedList.add(srcField.uri);&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.integerSignedList.add(srcField.boolList); 		result += &quot;|INFO:dstField.integerSignedList.add(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.integerSignedList.add(srcField.dateList); 		result += &quot;|INFO:dstField.integerSignedList.add(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.integerSignedList.add(srcField.timeList); 		result += &quot;|INFO:dstField.integerSignedList.add(srcField.timeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.integerSignedList.add(srcField.datetimeList); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.datetimeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.integerSignedList.add(srcField.datetimetzList); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.datetimetzList);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.integerSignedList.add(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.integerSignedList.add(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.integerSignedList.add(srcField.integerSignedList); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.integerSignedList.add(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.integerSignedList.add(srcField.text20List); 		result += &quot;|INFO:dstField.integerSignedList.add(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.integerSignedList.add(srcField.durationList); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.integerSignedList.add(srcField.idList); 			result += &quot;|INFO:dstField.integerSignedList.add(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.integerSignedList.add(srcField.uriList); 		result += &quot;|INFO:dstField.integerSignedList.add(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.integerSignedList.addAll(srcField.bool); 		result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.integerSignedList.addAll(srcField.date); 		result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.integerSignedList.addAll(srcField.time); 		result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.time);&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.integerSignedList.addAll(srcField.datetime); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.datetime);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.integerSignedList.addAll(srcField.datetimetz); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.datetimetz);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.integerSignedList.addAll(srcField.decimalFloat); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.integerSignedList.addAll(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.integerSignedList.addAll(srcField.integerSigned); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.integerSignedList.addAll(srcField.integerFixed5); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.integerSignedList.addAll(srcField.text20); 		result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.integerSignedList.addAll(srcField.duration); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.integerSignedList.addAll(srcField.id); 			result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.integerSignedList.addAll(srcField.uri); 		result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.integerSignedList.addAll(srcField.boolList); 		result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.integerSignedList.addAll(srcField.dateList); 		result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.integerSignedList.addAll(srcField.timeList); 		result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.timeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.integerSignedList.addAll(srcField.datetimeList); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.datetimeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.integerSignedList.addAll(srcField.datetimetzList); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
		if (src == &quot;decimalFloatList&quot;) 	{ dstField.integerSignedList.addAll(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.integerSignedList.addAll(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
		if (src == &quot;intSignedList&quot;) 	{ dstField.integerSignedList.addAll(srcField.integerSignedList); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.integerSignedList.addAll(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.integerSignedList.addAll(srcField.text20List); 		result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.integerSignedList.addAll(srcField.durationList); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.integerSignedList.addAll(srcField.idList); 			result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.integerSignedList.addAll(srcField.uriList); 		result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;intFixedList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
//!//	if (src == &quot;boolt&quot;)			{ dstField.integerFixed5List.add(true); 				result += &quot;|INFO:dstField.integerFixed5List.add(true);&quot;; } else&#xD;
//!//	if (src == &quot;boolf&quot;)			{ dstField.integerFixed5List.add(false);		 		result += &quot;|INFO:dstField.integerFixed5List.add(false);&quot;; } else&#xD;
//!//	if (src == &quot;string&quot;)		{ dstField.integerFixed5List.add(&quot;Hello World!&quot;); 		result += &quot;|INFO:dstField.integerFixed5List.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
//!//	if (src == &quot;number&quot;)		{ dstField.integerFixed5List.add(123);			 		result += &quot;|INFO:dstField.integerFixed5List.add(123);&quot;; } else&#xD;
		if (src == &quot;bigint&quot;)		{ dstField.integerFixed5List.add(ScriptUtil.createBigInteger(123));result += &quot;|INFO:dstField.integerFixed5List.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.integerFixed5List.add(srcField.bool); 		result += &quot;|INFO:dstField.integerFixed5List.add(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.integerFixed5List.add(srcField.date); 		result += &quot;|INFO:dstField.integerFixed5List.add(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.integerFixed5List.add(srcField.time); 		result += &quot;|INFO:dstField.integerFixed5List.add(srcField.time);&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.integerFixed5List.add(srcField.datetime); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.datetime);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.integerFixed5List.add(srcField.datetimetz); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.datetimetz);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.integerFixed5List.add(srcField.decimalFloat); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.integerFixed5List.add(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.integerFixed5List.add(srcField.integerSigned); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.integerSigned);&quot;; } else&#xD;
		if (src == &quot;intFixed&quot;) 		{ dstField.integerFixed5List.add(srcField.integerFixed5); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.integerFixed5List.add(srcField.text20); 		result += &quot;|INFO:dstField.integerFixed5List.add(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.integerFixed5List.add(srcField.duration); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.integerFixed5List.add(srcField.id); 			result += &quot;|INFO:dstField.integerFixed5List.add(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.integerFixed5List.add(srcField.uri); 		result += &quot;|INFO:dstField.integerFixed5List.add(srcField.uri);&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.integerFixed5List.add(srcField.boolList); 		result += &quot;|INFO:dstField.integerFixed5List.add(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.integerFixed5List.add(srcField.dateList); 		result += &quot;|INFO:dstField.integerFixed5List.add(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.integerFixed5List.add(srcField.timeList); 		result += &quot;|INFO:dstField.integerFixed5List.add(srcField.timeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.integerFixed5List.add(srcField.datetimeList); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.datetimeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.integerFixed5List.add(srcField.datetimetzList); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.datetimetzList);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.integerFixed5List.add(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.integerFixed5List.add(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.integerFixed5List.add(srcField.integerSignedList); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.integerFixed5List.add(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.integerFixed5List.add(srcField.text20List); 		result += &quot;|INFO:dstField.integerFixed5List.add(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.integerFixed5List.add(srcField.durationList); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.integerFixed5List.add(srcField.idList); 			result += &quot;|INFO:dstField.integerFixed5List.add(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.integerFixed5List.add(srcField.uriList); 		result += &quot;|INFO:dstField.integerFixed5List.add(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.integerFixed5List.addAll(srcField.bool); 		result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.integerFixed5List.addAll(srcField.date); 		result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.integerFixed5List.addAll(srcField.time); 		result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.time);&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.integerFixed5List.addAll(srcField.datetime); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.datetime);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.integerFixed5List.addAll(srcField.datetimetz); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.datetimetz);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.integerFixed5List.addAll(srcField.decimalFloat); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.integerFixed5List.addAll(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.integerFixed5List.addAll(srcField.integerSigned); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.integerFixed5List.addAll(srcField.integerFixed5); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.integerFixed5List.addAll(srcField.text20); 		result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.integerFixed5List.addAll(srcField.duration); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.integerFixed5List.addAll(srcField.id); 			result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.integerFixed5List.addAll(srcField.uri); 		result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.integerFixed5List.addAll(srcField.boolList); 		result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.integerFixed5List.addAll(srcField.dateList); 		result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.integerFixed5List.addAll(srcField.timeList); 		result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.timeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.integerFixed5List.addAll(srcField.datetimeList); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.datetimeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.integerFixed5List.addAll(srcField.datetimetzList); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.integerFixed5List.addAll(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.integerFixed5List.addAll(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.integerFixed5List.addAll(srcField.integerSignedList); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.integerSignedList);&quot;; } else&#xD;
		if (src == &quot;intFixedList&quot;) 		{ dstField.integerFixed5List.addAll(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.integerFixed5List.addAll(srcField.text20List); 		result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.integerFixed5List.addAll(srcField.durationList); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.integerFixed5List.addAll(srcField.idList); 			result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.integerFixed5List.addAll(srcField.uriList); 		result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;textList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
		if (src == &quot;boolt&quot;)			{ dstField.text20List.add(true); 						result += &quot;|INFO:dstField.text20List.add(true);&quot;; } else&#xD;
		if (src == &quot;boolf&quot;)			{ dstField.text20List.add(false);		 				result += &quot;|INFO:dstField.text20List.add(false);&quot;; } else&#xD;
		if (src == &quot;string&quot;)		{ dstField.text20List.add(&quot;Hello World!&quot;); 				result += &quot;|INFO:dstField.text20List.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
		if (src == &quot;number&quot;)		{ dstField.text20List.add(123);			 				result += &quot;|INFO:dstField.text20List.add(123);&quot;; } else&#xD;
		if (src == &quot;bigint&quot;)		{ dstField.text20List.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.text20List.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
		if (src == &quot;bool&quot;) 			{ dstField.text20List.add(srcField.bool); 				result += &quot;|INFO:dstField.text20List.add(srcField.bool);&quot;; } else&#xD;
		if (src == &quot;date&quot;) 			{ dstField.text20List.add(srcField.date); 				result += &quot;|INFO:dstField.text20List.add(srcField.date);&quot;; } else&#xD;
		if (src == &quot;time&quot;) 			{ dstField.text20List.add(srcField.time); 				result += &quot;|INFO:dstField.text20List.add(srcField.time);&quot;; } else&#xD;
		if (src == &quot;datetime&quot;) 		{ dstField.text20List.add(srcField.datetime); 			result += &quot;|INFO:dstField.text20List.add(srcField.datetime);&quot;; } else&#xD;
		if (src == &quot;datetimetz&quot;) 	{ dstField.text20List.add(srcField.datetimetz); 		result += &quot;|INFO:dstField.text20List.add(srcField.datetimetz);&quot;; } else	&#xD;
		if (src == &quot;decimalFloat&quot;) 	{ dstField.text20List.add(srcField.decimalFloat); 		result += &quot;|INFO:dstField.text20List.add(srcField.decimalFloat);&quot;; } else&#xD;
		if (src == &quot;decimalFixed&quot;) 	{ dstField.text20List.add(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.text20List.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
		if (src == &quot;intSigned&quot;) 	{ dstField.text20List.add(srcField.integerSigned); 		result += &quot;|INFO:dstField.text20List.add(srcField.integerSigned);&quot;; } else&#xD;
		if (src == &quot;intFixed&quot;) 		{ dstField.text20List.add(srcField.integerFixed5); 		result += &quot;|INFO:dstField.text20List.add(srcField.integerFixed5);&quot;; } else&#xD;
		if (src == &quot;text&quot;) 			{ dstField.text20List.add(srcField.text20); 			result += &quot;|INFO:dstField.text20List.add(srcField.text20);&quot;; } else&#xD;
		if (src == &quot;duration&quot;) 		{ dstField.text20List.add(srcField.duration); 			result += &quot;|INFO:dstField.text20List.add(srcField.duration);&quot;; } else&#xD;
		if (src == &quot;id&quot;) 			{ dstField.text20List.add(srcField.id); 				result += &quot;|INFO:dstField.text20List.add(srcField.id);&quot;; } else&#xD;
		if (src == &quot;uri&quot;) 			{ dstField.text20List.add(srcField.uri); 				result += &quot;|INFO:dstField.text20List.add(srcField.uri);&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.text20List.add(srcField.boolList); 				result += &quot;|INFO:dstField.text20List.add(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.text20List.add(srcField.dateList); 				result += &quot;|INFO:dstField.text20List.add(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.text20List.add(srcField.timeList); 				result += &quot;|INFO:dstField.text20List.add(srcField.timeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.text20List.add(srcField.datetimeList); 			result += &quot;|INFO:dstField.text20List.add(srcField.datetimeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.text20List.add(srcField.datetimetzList); 		result += &quot;|INFO:dstField.text20List.add(srcField.datetimetzList);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.text20List.add(srcField.decimalFloatList); 		result += &quot;|INFO:dstField.text20List.add(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.text20List.add(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.text20List.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.text20List.add(srcField.integerSignedList); 		result += &quot;|INFO:dstField.text20List.add(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.text20List.add(srcField.integerFixed5List); 		result += &quot;|INFO:dstField.text20List.add(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.text20List.add(srcField.text20List); 			result += &quot;|INFO:dstField.text20List.add(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.text20List.add(srcField.durationList); 			result += &quot;|INFO:dstField.text20List.add(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.text20List.add(srcField.idList); 				result += &quot;|INFO:dstField.text20List.add(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.text20List.add(srcField.uriList); 				result += &quot;|INFO:dstField.text20List.add(srcField.uriList);&quot;; } else&#xD;
									{ 																result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.text20List.addAll(srcField.bool); 				result += &quot;|INFO:dstField.text20List.addAll(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.text20List.addAll(srcField.date); 				result += &quot;|INFO:dstField.text20List.addAll(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.text20List.addAll(srcField.time); 				result += &quot;|INFO:dstField.text20List.addAll(srcField.time);&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.text20List.addAll(srcField.datetime); 			result += &quot;|INFO:dstField.text20List.addAll(srcField.datetime);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.text20List.addAll(srcField.datetimetz); 			result += &quot;|INFO:dstField.text20List.addAll(srcField.datetimetz);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.text20List.addAll(srcField.decimalFloat); 		result += &quot;|INFO:dstField.text20List.addAll(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.text20List.addAll(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.text20List.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.text20List.addAll(srcField.integerSigned); 		result += &quot;|INFO:dstField.text20List.addAll(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.text20List.addAll(srcField.integerFixed5); 		result += &quot;|INFO:dstField.text20List.addAll(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.text20List.addAll(srcField.text20); 				result += &quot;|INFO:dstField.text20List.addAll(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.text20List.addAll(srcField.duration); 			result += &quot;|INFO:dstField.text20List.addAll(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.text20List.addAll(srcField.id); 					result += &quot;|INFO:dstField.text20List.addAll(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.text20List.addAll(srcField.uri); 				result += &quot;|INFO:dstField.text20List.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
		if (src == &quot;boolList&quot;) 			{ dstField.text20List.addAll(srcField.boolList); 				result += &quot;|INFO:dstField.text20List.addAll(srcField.boolList);&quot;; } else&#xD;
		if (src == &quot;dateList&quot;) 			{ dstField.text20List.addAll(srcField.dateList); 				result += &quot;|INFO:dstField.text20List.addAll(srcField.dateList);&quot;; } else&#xD;
		if (src == &quot;timeList&quot;) 			{ dstField.text20List.addAll(srcField.timeList); 				result += &quot;|INFO:dstField.text20List.addAll(srcField.timeList);&quot;; } else&#xD;
		if (src == &quot;datetimeList&quot;) 		{ dstField.text20List.addAll(srcField.datetimeList); 			result += &quot;|INFO:dstField.text20List.addAll(srcField.datetimeList);&quot;; } else&#xD;
		if (src == &quot;datetimetzList&quot;) 	{ dstField.text20List.addAll(srcField.datetimetzList); 		result += &quot;|INFO:dstField.text20List.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
		if (src == &quot;decimalFloatList&quot;) 	{ dstField.text20List.addAll(srcField.decimalFloatList); 		result += &quot;|INFO:dstField.text20List.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
		if (src == &quot;decimalFixedList&quot;) 	{ dstField.text20List.addAll(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.text20List.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
		if (src == &quot;intSignedList&quot;) 	{ dstField.text20List.addAll(srcField.integerSignedList); 		result += &quot;|INFO:dstField.text20List.addAll(srcField.integerSignedList);&quot;; } else&#xD;
		if (src == &quot;intFixedList&quot;) 		{ dstField.text20List.addAll(srcField.integerFixed5List); 		result += &quot;|INFO:dstField.text20List.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
		if (src == &quot;textList&quot;) 			{ dstField.text20List.addAll(srcField.text20List); 			result += &quot;|INFO:dstField.text20List.addAll(srcField.text20List);&quot;; } else&#xD;
		if (src == &quot;durationList&quot;) 		{ dstField.text20List.addAll(srcField.durationList); 			result += &quot;|INFO:dstField.text20List.addAll(srcField.durationList);&quot;; } else&#xD;
		if (src == &quot;idList&quot;) 			{ dstField.text20List.addAll(srcField.idList); 				result += &quot;|INFO:dstField.text20List.addAll(srcField.idList);&quot;; } else&#xD;
		if (src == &quot;uriList&quot;) 			{ dstField.text20List.addAll(srcField.uriList); 				result += &quot;|INFO:dstField.text20List.addAll(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;durationList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
//!//	if (src == &quot;boolt&quot;)			{ dstField.durationList.add(true); 						result += &quot;|INFO:dstField.durationList.add(true);&quot;; } else&#xD;
//!//	if (src == &quot;boolf&quot;)			{ dstField.durationList.add(false);		 				result += &quot;|INFO:dstField.durationList.add(false);&quot;; } else&#xD;
//!//	if (src == &quot;string&quot;)		{ dstField.durationList.add(&quot;Hello World!&quot;); 			result += &quot;|INFO:dstField.durationList.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
//!//	if (src == &quot;number&quot;)		{ dstField.durationList.add(123);			 			result += &quot;|INFO:dstField.durationList.add(123);&quot;; } else&#xD;
//!//	if (src == &quot;bigint&quot;)		{ dstField.durationList.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.durationList.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.durationList.add(srcField.bool); 			result += &quot;|INFO:dstField.durationList.add(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.durationList.add(srcField.date); 			result += &quot;|INFO:dstField.durationList.add(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.durationList.add(srcField.time); 			result += &quot;|INFO:dstField.durationList.add(srcField.time);&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.durationList.add(srcField.datetime); 		result += &quot;|INFO:dstField.durationList.add(srcField.datetime);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.durationList.add(srcField.datetimetz); 		result += &quot;|INFO:dstField.durationList.add(srcField.datetimetz);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.durationList.add(srcField.decimalFloat); 	result += &quot;|INFO:dstField.durationList.add(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.durationList.add(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.durationList.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.durationList.add(srcField.integerSigned); 	result += &quot;|INFO:dstField.durationList.add(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.durationList.add(srcField.integerFixed5); 	result += &quot;|INFO:dstField.durationList.add(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.durationList.add(srcField.text20); 			result += &quot;|INFO:dstField.durationList.add(srcField.text20);&quot;; } else&#xD;
		if (src == &quot;duration&quot;) 		{ dstField.durationList.add(srcField.duration); 		result += &quot;|INFO:dstField.durationList.add(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.durationList.add(srcField.id); 				result += &quot;|INFO:dstField.durationList.add(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.durationList.add(srcField.uri); 				result += &quot;|INFO:dstField.durationList.add(srcField.uri);&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.durationList.add(srcField.boolList); 			result += &quot;|INFO:dstField.durationList.add(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.durationList.add(srcField.dateList); 			result += &quot;|INFO:dstField.durationList.add(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.durationList.add(srcField.timeList); 			result += &quot;|INFO:dstField.durationList.add(srcField.timeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.durationList.add(srcField.datetimeList); 		result += &quot;|INFO:dstField.durationList.add(srcField.datetimeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.durationList.add(srcField.datetimetzList); 		result += &quot;|INFO:dstField.durationList.add(srcField.datetimetzList);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.durationList.add(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.durationList.add(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.durationList.add(srcField.decimalFixed8Dot4List);	result += &quot;|INFO:dstField.durationList.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.durationList.add(srcField.integerSignedList); 	result += &quot;|INFO:dstField.durationList.add(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.durationList.add(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.durationList.add(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.durationList.add(srcField.text20List); 			result += &quot;|INFO:dstField.durationList.add(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.durationList.add(srcField.durationList); 		result += &quot;|INFO:dstField.durationList.add(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.durationList.add(srcField.idList); 				result += &quot;|INFO:dstField.durationList.add(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.durationList.add(srcField.uriList); 				result += &quot;|INFO:dstField.durationList.add(srcField.uriList);&quot;; } else&#xD;
								{ 															result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.durationList.addAll(srcField.bool); 			result += &quot;|INFO:dstField.durationList.addAll(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.durationList.addAll(srcField.date); 			result += &quot;|INFO:dstField.durationList.addAll(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.durationList.addAll(srcField.time); 			result += &quot;|INFO:dstField.durationList.addAll(srcField.time);&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.durationList.addAll(srcField.datetime); 		result += &quot;|INFO:dstField.durationList.addAll(srcField.datetime);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.durationList.addAll(srcField.datetimetz); 		result += &quot;|INFO:dstField.durationList.addAll(srcField.datetimetz);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.durationList.addAll(srcField.decimalFloat); 	result += &quot;|INFO:dstField.durationList.addAll(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.durationList.addAll(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.durationList.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.durationList.addAll(srcField.integerSigned); 	result += &quot;|INFO:dstField.durationList.addAll(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.durationList.addAll(srcField.integerFixed5); 	result += &quot;|INFO:dstField.durationList.addAll(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.durationList.addAll(srcField.text20); 			result += &quot;|INFO:dstField.durationList.addAll(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.durationList.addAll(srcField.duration); 		result += &quot;|INFO:dstField.durationList.addAll(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.durationList.addAll(srcField.id); 				result += &quot;|INFO:dstField.durationList.addAll(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.durationList.addAll(srcField.uri); 				result += &quot;|INFO:dstField.durationList.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.durationList.addAll(srcField.boolList); 			result += &quot;|INFO:dstField.durationList.addAll(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.durationList.addAll(srcField.dateList); 			result += &quot;|INFO:dstField.durationList.addAll(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.durationList.addAll(srcField.timeList); 			result += &quot;|INFO:dstField.durationList.addAll(srcField.timeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.durationList.addAll(srcField.datetimeList); 		result += &quot;|INFO:dstField.durationList.addAll(srcField.datetimeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.durationList.addAll(srcField.datetimetzList); 		result += &quot;|INFO:dstField.durationList.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.durationList.addAll(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.durationList.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.durationList.addAll(srcField.decimalFixed8Dot4List);	result += &quot;|INFO:dstField.durationList.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.durationList.addAll(srcField.integerSignedList); 	result += &quot;|INFO:dstField.durationList.addAll(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.durationList.addAll(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.durationList.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.durationList.addAll(srcField.text20List); 			result += &quot;|INFO:dstField.durationList.addAll(srcField.text20List);&quot;; } else&#xD;
		if (src == &quot;durationList&quot;) 		{ dstField.durationList.addAll(srcField.durationList); 		result += &quot;|INFO:dstField.durationList.addAll(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.durationList.addAll(srcField.idList); 				result += &quot;|INFO:dstField.durationList.addAll(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.durationList.addAll(srcField.uriList); 				result += &quot;|INFO:dstField.durationList.addAll(srcField.uriList);&quot;; } else&#xD;
								{ 															result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;idList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
//!//	if (src == &quot;boolt&quot;)			{ dstField.idList.add(true); 							result += &quot;|INFO:dstField.idList.add(true);&quot;; } else&#xD;
//!//	if (src == &quot;boolf&quot;)			{ dstField.idList.add(false);		 					result += &quot;|INFO:dstField.idList.add(false);&quot;; } else&#xD;
//!//	if (src == &quot;string&quot;)		{ dstField.idList.add(&quot;Hello World!&quot;); 					result += &quot;|INFO:dstField.idList.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
//!//	if (src == &quot;number&quot;)		{ dstField.idList.add(123);			 					result += &quot;|INFO:dstField.idList.add(123);&quot;; } else&#xD;
//!//	if (src == &quot;bigint&quot;)		{ dstField.idList.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.idList.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.idList.add(srcField.bool); 					result += &quot;|INFO:dstField.idList.add(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.idList.add(srcField.date); 					result += &quot;|INFO:dstField.idList.add(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.idList.add(srcField.time); 					result += &quot;|INFO:dstField.idList.add(srcField.time);&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.idList.add(srcField.datetime); 				result += &quot;|INFO:dstField.idList.add(srcField.datetime);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.idList.add(srcField.datetimetz); 			result += &quot;|INFO:dstField.idList.add(srcField.datetimetz);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.idList.add(srcField.decimalFloat); 			result += &quot;|INFO:dstField.idList.add(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.idList.add(srcField.decimalFixed8Dot4); 		result += &quot;|INFO:dstField.idList.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.idList.add(srcField.integerSigned); 			result += &quot;|INFO:dstField.idList.add(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.idList.add(srcField.integerFixed5); 			result += &quot;|INFO:dstField.idList.add(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.idList.add(srcField.text20); 				result += &quot;|INFO:dstField.idList.add(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.idList.add(srcField.duration); 				result += &quot;|INFO:dstField.idList.add(srcField.duration);&quot;; } else&#xD;
		if (src == &quot;id&quot;) 			{ dstField.idList.add(srcField.id); 					result += &quot;|INFO:dstField.idList.add(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.idList.add(srcField.uri); 					result += &quot;|INFO:dstField.idList.add(srcField.uri);&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.idList.add(srcField.boolList); 					result += &quot;|INFO:dstField.idList.add(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.idList.add(srcField.dateList); 					result += &quot;|INFO:dstField.idList.add(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.idList.add(srcField.timeList); 					result += &quot;|INFO:dstField.idList.add(srcField.timeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.idList.add(srcField.datetimeList); 				result += &quot;|INFO:dstField.idList.add(srcField.datetimeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.idList.add(srcField.datetimetzList); 			result += &quot;|INFO:dstField.idList.add(srcField.datetimetzList);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.idList.add(srcField.decimalFloatList); 			result += &quot;|INFO:dstField.idList.add(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.idList.add(srcField.decimalFixed8Dot4List); 		result += &quot;|INFO:dstField.idList.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.idList.add(srcField.integerSignedList); 			result += &quot;|INFO:dstField.idList.add(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.idList.add(srcField.integerFixed5List); 			result += &quot;|INFO:dstField.idList.add(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.idList.add(srcField.text20List); 				result += &quot;|INFO:dstField.idList.add(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.idList.add(srcField.durationList); 				result += &quot;|INFO:dstField.idList.add(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.idList.add(srcField.idList); 					result += &quot;|INFO:dstField.idList.add(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.idList.add(srcField.uriList); 					result += &quot;|INFO:dstField.idList.add(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.idList.addAll(srcField.bool); 					result += &quot;|INFO:dstField.idList.addAll(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.idList.addAll(srcField.date); 					result += &quot;|INFO:dstField.idList.addAll(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.idList.addAll(srcField.time); 					result += &quot;|INFO:dstField.idList.addAll(srcField.time);&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.idList.addAll(srcField.datetime); 				result += &quot;|INFO:dstField.idList.addAll(srcField.datetime);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.idList.addAll(srcField.datetimetz); 			result += &quot;|INFO:dstField.idList.addAll(srcField.datetimetz);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.idList.addAll(srcField.decimalFloat); 			result += &quot;|INFO:dstField.idList.addAll(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.idList.addAll(srcField.decimalFixed8Dot4); 		result += &quot;|INFO:dstField.idList.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.idList.addAll(srcField.integerSigned); 			result += &quot;|INFO:dstField.idList.addAll(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.idList.addAll(srcField.integerFixed5); 			result += &quot;|INFO:dstField.idList.addAll(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.idList.addAll(srcField.text20); 				result += &quot;|INFO:dstField.idList.addAll(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.idList.addAll(srcField.duration); 				result += &quot;|INFO:dstField.idList.addAll(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.idList.addAll(srcField.id); 					result += &quot;|INFO:dstField.idList.addAll(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.idList.addAll(srcField.uri); 					result += &quot;|INFO:dstField.idList.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.idList.addAll(srcField.boolList); 					result += &quot;|INFO:dstField.idList.addAll(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.idList.addAll(srcField.dateList); 					result += &quot;|INFO:dstField.idList.addAll(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.idList.addAll(srcField.timeList); 					result += &quot;|INFO:dstField.idList.addAll(srcField.timeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.idList.addAll(srcField.datetimeList); 				result += &quot;|INFO:dstField.idList.addAll(srcField.datetimeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.idList.addAll(srcField.datetimetzList); 			result += &quot;|INFO:dstField.idList.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.idList.addAll(srcField.decimalFloatList); 			result += &quot;|INFO:dstField.idList.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.idList.addAll(srcField.decimalFixed8Dot4List); 		result += &quot;|INFO:dstField.idList.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.idList.addAll(srcField.integerSignedList); 			result += &quot;|INFO:dstField.idList.addAll(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.idList.addAll(srcField.integerFixed5List); 			result += &quot;|INFO:dstField.idList.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.idList.addAll(srcField.text20List); 				result += &quot;|INFO:dstField.idList.addAll(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.idList.addAll(srcField.durationList); 				result += &quot;|INFO:dstField.idList.addAll(srcField.durationList);&quot;; } else&#xD;
		if (src == &quot;idList&quot;) 			{ dstField.idList.addAll(srcField.idList); 					result += &quot;|INFO:dstField.idList.addAll(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.idList.addAll(srcField.uriList); 					result += &quot;|INFO:dstField.idList.addAll(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;uriList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
//!//	if (src == &quot;boolt&quot;)			{ dstField.uriList.add(true); 							result += &quot;|INFO:dstField.uriList.add(true);&quot;; } else&#xD;
//!//	if (src == &quot;boolf&quot;)			{ dstField.uriList.add(false);		 					result += &quot;|INFO:dstField.bouriolList.add(false);&quot;; } else&#xD;
//!//	if (src == &quot;string&quot;)		{ dstField.uriList.add(&quot;Hello World!&quot;); 				result += &quot;|INFO:dstField.uriList.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
//!//	if (src == &quot;number&quot;)		{ dstField.uriList.add(123);			 				result += &quot;|INFO:dstField.uriList.add(123);&quot;; } else&#xD;
//!//	if (src == &quot;bigint&quot;)		{ dstField.uriList.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.uriList.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.uriList.add(srcField.bool); 					result += &quot;|INFO:dstField.uriList.add(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.uriList.add(srcField.date); 					result += &quot;|INFO:dstField.uriList.add(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.uriList.add(srcField.time); 					result += &quot;|INFO:dstField.uriList.add(srcField.time);&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.uriList.add(srcField.datetime); 				result += &quot;|INFO:dstField.uriList.add(srcField.datetime);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.uriList.add(srcField.datetimetz); 			result += &quot;|INFO:dstField.uriList.add(srcField.datetimetz);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.uriList.add(srcField.decimalFloat); 			result += &quot;|INFO:dstField.uriList.add(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.uriList.add(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.uriList.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.uriList.add(srcField.integerSigned); 		result += &quot;|INFO:dstField.uriList.add(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.uriList.add(srcField.integerFixed5); 		result += &quot;|INFO:dstField.uriList.add(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.uriList.add(srcField.text20); 				result += &quot;|INFO:dstField.uriList.add(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.uriList.add(srcField.duration); 				result += &quot;|INFO:dstField.uriList.add(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.uriList.add(srcField.id); 					result += &quot;|INFO:dstField.uriList.add(srcField.id);&quot;; } else&#xD;
		if (src == &quot;uri&quot;) 			{ dstField.uriList.add(srcField.uri); 					result += &quot;|INFO:dstField.uriList.add(srcField.uri);&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.uriList.add(srcField.boolList); 					result += &quot;|INFO:dstField.uriList.add(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.uriList.add(srcField.dateList); 					result += &quot;|INFO:dstField.uriList.add(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.uriList.add(srcField.timeList); 					result += &quot;|INFO:dstField.uriList.add(srcField.timeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.uriList.add(srcField.datetimeList); 				result += &quot;|INFO:dstField.uriList.add(srcField.datetimeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.uriList.add(srcField.datetimetzList); 			result += &quot;|INFO:dstField.uriList.add(srcField.datetimetzList);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.uriList.add(srcField.decimalFloatList); 			result += &quot;|INFO:dstField.uriList.add(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.uriList.add(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.uriList.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.uriList.add(srcField.integerSignedList); 		result += &quot;|INFO:dstField.uriList.add(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.uriList.add(srcField.integerFixed5List); 		result += &quot;|INFO:dstField.uriList.add(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.uriList.add(srcField.text20List); 				result += &quot;|INFO:dstField.uriList.add(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.uriList.add(srcField.durationList); 				result += &quot;|INFO:dstField.uriList.add(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.uriList.add(srcField.idList); 					result += &quot;|INFO:dstField.uriList.add(srcField.idList);&quot;; } else&#xD;
//!//	if (src == &quot;uriList&quot;) 			{ dstField.uriList.add(srcField.uriList); 					result += &quot;|INFO:dstField.uriList.add(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
//!//	if (src == &quot;bool&quot;) 			{ dstField.uriList.addAll(srcField.bool); 					result += &quot;|INFO:dstField.uriList.addAll(srcField.bool);&quot;; } else&#xD;
//!//	if (src == &quot;date&quot;) 			{ dstField.uriList.addAll(srcField.date); 					result += &quot;|INFO:dstField.uriList.addAll(srcField.date);&quot;; } else&#xD;
//!//	if (src == &quot;time&quot;) 			{ dstField.uriList.addAll(srcField.time); 					result += &quot;|INFO:dstField.uriList.addAll(srcField.time);&quot;; } else&#xD;
//!//	if (src == &quot;datetime&quot;) 		{ dstField.uriList.addAll(srcField.datetime); 				result += &quot;|INFO:dstField.uriList.addAll(srcField.datetime);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetz&quot;) 	{ dstField.uriList.addAll(srcField.datetimetz); 			result += &quot;|INFO:dstField.uriList.addAll(srcField.datetimetz);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloat&quot;) 	{ dstField.uriList.addAll(srcField.decimalFloat); 			result += &quot;|INFO:dstField.uriList.addAll(srcField.decimalFloat);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixed&quot;) 	{ dstField.uriList.addAll(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.uriList.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
//!//	if (src == &quot;intSigned&quot;) 	{ dstField.uriList.addAll(srcField.integerSigned); 		result += &quot;|INFO:dstField.uriList.addAll(srcField.integerSigned);&quot;; } else&#xD;
//!//	if (src == &quot;intFixed&quot;) 		{ dstField.uriList.addAll(srcField.integerFixed5); 		result += &quot;|INFO:dstField.uriList.addAll(srcField.integerFixed5);&quot;; } else&#xD;
//!//	if (src == &quot;text&quot;) 			{ dstField.uriList.addAll(srcField.text20); 				result += &quot;|INFO:dstField.uriList.addAll(srcField.text20);&quot;; } else&#xD;
//!//	if (src == &quot;duration&quot;) 		{ dstField.uriList.addAll(srcField.duration); 				result += &quot;|INFO:dstField.uriList.addAll(srcField.duration);&quot;; } else&#xD;
//!//	if (src == &quot;id&quot;) 			{ dstField.uriList.addAll(srcField.id); 					result += &quot;|INFO:dstField.uriList.addAll(srcField.id);&quot;; } else&#xD;
//!//	if (src == &quot;uri&quot;) 			{ dstField.uriList.addAll(srcField.uri); 					result += &quot;|INFO:dstField.uriList.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
//!//	if (src == &quot;boolList&quot;) 			{ dstField.uriList.addAll(srcField.boolList); 					result += &quot;|INFO:dstField.uriList.addAll(srcField.boolList);&quot;; } else&#xD;
//!//	if (src == &quot;dateList&quot;) 			{ dstField.uriList.addAll(srcField.dateList); 					result += &quot;|INFO:dstField.uriList.addAll(srcField.dateList);&quot;; } else&#xD;
//!//	if (src == &quot;timeList&quot;) 			{ dstField.uriList.addAll(srcField.timeList); 					result += &quot;|INFO:dstField.uriList.addAll(srcField.timeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimeList&quot;) 		{ dstField.uriList.addAll(srcField.datetimeList); 				result += &quot;|INFO:dstField.uriList.addAll(srcField.datetimeList);&quot;; } else&#xD;
//!//	if (src == &quot;datetimetzList&quot;) 	{ dstField.uriList.addAll(srcField.datetimetzList); 			result += &quot;|INFO:dstField.uriList.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
//!//	if (src == &quot;decimalFloatList&quot;) 	{ dstField.uriList.addAll(srcField.decimalFloatList); 			result += &quot;|INFO:dstField.uriList.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
//!//	if (src == &quot;decimalFixedList&quot;) 	{ dstField.uriList.addAll(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.uriList.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
//!//	if (src == &quot;intSignedList&quot;) 	{ dstField.uriList.addAll(srcField.integerSignedList); 		result += &quot;|INFO:dstField.uriList.addAll(srcField.integerSignedList);&quot;; } else&#xD;
//!//	if (src == &quot;intFixedList&quot;) 		{ dstField.uriList.addAll(srcField.integerFixed5List); 		result += &quot;|INFO:dstField.uriList.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
//!//	if (src == &quot;textList&quot;) 			{ dstField.uriList.addAll(srcField.text20List); 				result += &quot;|INFO:dstField.uriList.addAll(srcField.text20List);&quot;; } else&#xD;
//!//	if (src == &quot;durationList&quot;) 		{ dstField.uriList.addAll(srcField.durationList); 				result += &quot;|INFO:dstField.uriList.addAll(srcField.durationList);&quot;; } else&#xD;
//!//	if (src == &quot;idList&quot;) 			{ dstField.uriList.addAll(srcField.idList); 					result += &quot;|INFO:dstField.uriList.addAll(srcField.idList);&quot;; } else&#xD;
		if (src == &quot;uriList&quot;) 			{ dstField.uriList.addAll(srcField.uriList); 					result += &quot;|INFO:dstField.uriList.addAll(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else {&#xD;
	result += &quot;|ERROR:Invalid dst value: '&quot; + src + &quot;'&quot;;&#xD;
} &#xD;
&#xD;
 /////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Leave:Assign Script&quot;;&#xD;
&#xD;
&#xD;
</xpdl2:Script>
              </xpdl2:TaskScript>
            </xpdl2:Task>
          </xpdl2:Implementation>
          <xpdl2:ExtendedAttributes>
            <xpdl2:ExtendedAttribute Name=""/>
          </xpdl2:ExtendedAttributes>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="64.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="152.0">
              <xpdl2:Coordinates XCoordinate="637.0" YCoordinate="292.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
          <xpdl2:Extensions/>
          <xpdExt:ActivityResourcePatterns>
            <xpdExt:AllocationStrategy xpdExt:Strategy="SYSTEM_DETERMINED"/>
          </xpdExt:ActivityResourcePatterns>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMp6J2nNEeCvfK09LgLLfw" Name="ErrorEvent" xpdExt:Visibility="Private" xpdExt:DisplayName="Error Event" iProcessExt:StepIndex="15">
          <xpdl2:Event>
            <xpdl2:IntermediateEvent Target="_pMp6K2nNEeCvfK09LgLLfw" Trigger="Error">
              <xpdl2:ResultError/>
            </xpdl2:IntermediateEvent>
          </xpdl2:Event>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="47.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="59.0">
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:NodeGraphicsInfo>
            <xpdl2:NodeGraphicsInfo ToolId="XPD.BorderEventPosition">
              <xpdl2:Coordinates XCoordinate="22.105263157894736" YCoordinate="0.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMp6KGnNEeCvfK09LgLLfw" Name="BigDecimalScript" xpdExt:Visibility="Private" xpdExt:DisplayName="BigDecimal Script" iProcessExt:StepIndex="16">
          <xpdl2:Implementation>
            <xpdl2:Task>
              <xpdl2:TaskScript>
                <xpdl2:Script ScriptGrammar="JavaScript">//importPackage(Packages.java.math);&#xD;
/////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Enter:BigDec Script (dst = '&quot;+dst+&quot;' type)&quot;;&#xD;
&#xD;
/////////////////////////////////////////////////////////////&#xD;
// Process the dst parameter&#xD;
if (dst == &quot;attach&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in BigDec Script&quot;;&#xD;
} else if (dst == &quot;bool&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in BigDec Script&quot;;&#xD;
} else if (dst == &quot;date&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in BigDec Script&quot;;&#xD;
} else if (dst == &quot;time&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in BigDec Script&quot;;&#xD;
} else if (dst == &quot;datetime&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in BigDec Script&quot;;&#xD;
} else if (dst == &quot;datetimetz&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in BigDec Script&quot;;&#xD;
} else if (dst == &quot;decimalFloat&quot;) {	&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in BigDec Script&quot;;&#xD;
} else if (dst == &quot;decimalFixed&quot;) {&#xD;
	if (src == &quot;decimalFixed&quot;) { &#xD;
		if (src2 == &quot;decimalFixed&quot;) {&#xD;
// ADD&#xD;
			if (opCode == &quot;add&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4);&quot;; 		&#xD;
			} else if (opCode == &quot;add32&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&quot;; 		&#xD;
			} else if (opCode == &quot;add64&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&quot;; 		&#xD;
			} else if (opCode == &quot;add128&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&quot;; 		&#xD;
			} else if (opCode == &quot;add256a&quot;) {&#xD;
				var mc = ScriptUtil.createMathContext(8);&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4, mc);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&quot;; 		&#xD;
			} else if (opCode == &quot;add256b&quot;) {&#xD;
				var mc = ScriptUtil.createMathContext(8, RoundingMode.HALF_EVEN);&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4, mc);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&quot;; 		&#xD;
// DIVIDE		&#xD;
			} else if (opCode == &quot;divide&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4);&quot;; &#xD;
			} else if (opCode == &quot;divide32&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&quot;; &#xD;
			} else if (opCode == &quot;divide64&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&quot;; &#xD;
			} else if (opCode == &quot;divide128&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&quot;; &#xD;
			} else if (opCode == &quot;divide256a&quot;) {&#xD;
				var mc = ScriptUtil.createMathContext(8);&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, mc);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&quot;; &#xD;
			} else if (opCode == &quot;divide256b&quot;) {&#xD;
				var mc = ScriptUtil.createMathContext(8, RoundingMode.HALF_EVEN);&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, mc);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&quot;; &#xD;
			} else if (opCode == &quot;divide256c&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, 70, RoundingMode.HALF_EVEN );&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&quot;; &#xD;
			} else if (opCode == &quot;divide256d&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, RoundingMode.HALF_EVEN );&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&quot;; &#xD;
// DIVIDE AND REMAINDER&#xD;
//			} else if (opCode == &quot;divAR&quot;) {&#xD;
//				var dar = srcField.decimalFixed8Dot4.divideAndRemainder(srcField2.decimalFixed8Dot4);&#xD;
//				dstField.decimalFixed8Dot4 = dar[0];&#xD;
//				result += &quot;|INFO:dar = srcField.decimalFixed8Dot4.gcd(srcField2.decimalFixed8Dot4); dstField.decimalFixed8Dot4=dar[0]; Vals: dar[0]=&quot;+dar[0]+&quot;, dar[1]=&quot;+dar[1]; &#xD;
//			} else if (opCode == &quot;divAR32&quot;) {&#xD;
//				var dar = srcField.decimalFixed8Dot4.divideAndRemainder(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&#xD;
//				dstField.decimalFixed8Dot4 = dar[0];&#xD;
//				result += &quot;|INFO:dar = srcField.decimalFixed8Dot4.gcd(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32); dstField.decimalFixed8Dot4=dar[0]; Vals: dar[0]=&quot;+dar[0]+&quot;, dar[1]=&quot;+dar[1]; &#xD;
//			} else if (opCode == &quot;divAR64&quot;) {&#xD;
//				var dar = srcField.decimalFixed8Dot4.divideAndRemainder(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&#xD;
//				dstField.decimalFixed8Dot4 = dar[0];&#xD;
//				result += &quot;|INFO:dar = srcField.decimalFixed8Dot4.gcd(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32); dstField.decimalFixed8Dot4=dar[0]; Vals: dar[0]=&quot;+dar[0]+&quot;, dar[1]=&quot;+dar[1]; &#xD;
//			} else if (opCode == &quot;divAR128&quot;) {&#xD;
//				var dar = srcField.decimalFixed8Dot4.divideAndRemainder(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&#xD;
//				dstField.decimalFixed8Dot4 = dar[0];&#xD;
//				result += &quot;|INFO:dar = srcField.decimalFixed8Dot4.gcd(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32); dstField.decimalFixed8Dot4=dar[0]; Vals: dar[0]=&quot;+dar[0]+&quot;, dar[1]=&quot;+dar[1]; &#xD;
// DIVIDE TO INTEGRAL&#xD;
			} else if (opCode == &quot;divTI&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divideToIntegralValue(srcField2.decimalFixed8Dot4);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divideToIntegralValue(srcField2.decimalFixed8Dot4);&quot;; &#xD;
			} else if (opCode == &quot;divTI32&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divideToIntegralValue(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divideToIntegralValue(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&quot;; &#xD;
			} else if (opCode == &quot;divTI64&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divideToIntegralValue(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divideToIntegralValue(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&quot;; &#xD;
			} else if (opCode == &quot;divTI128&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divideToIntegralValue(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.divideToIntegralValue(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&quot;; &#xD;
// MIN &amp; MAX&#xD;
			} else if (opCode == &quot;min&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.min(srcField2.decimalFixed8Dot4);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.min(srcField2.decimalFixed8Dot4);&quot;; &#xD;
			} else if (opCode == &quot;max&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.max(srcField2.decimalFixed8Dot4);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.max(srcField2.decimalFixed8Dot4);&quot;; &#xD;
// MULTIPLY&#xD;
			} else if (opCode == &quot;multiply&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.multiply(srcField2.decimalFixed8Dot4);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.multiply(srcField2.decimalFixed8Dot4);&quot;; 	&#xD;
			} else if (opCode == &quot;multiply32&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.multiply(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.multiply(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&quot;; 	&#xD;
			} else if (opCode == &quot;multiply64&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.multiply(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.multiply(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&quot;; 	&#xD;
			} else if (opCode == &quot;multiply128&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.multiply(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.multiply(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&quot;; 	&#xD;
// REMAINDER&#xD;
			} else if (opCode == &quot;rem&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.remainder(srcField2.decimalFixed8Dot4);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.remainder(srcField2.decimalFixed8Dot4);&quot;; 	&#xD;
			} else if (opCode == &quot;rem32&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.remainder(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.remainder(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&quot;; 	&#xD;
			} else if (opCode == &quot;rem64&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.remainder(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.remainder(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&quot;; 	&#xD;
			} else if (opCode == &quot;rem128&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.remainder(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.remainder(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&quot;; 	&#xD;
// SUBTRACT&#xD;
			} else if (opCode == &quot;sub&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.subtract(srcField2.decimalFixed8Dot4);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.subtract(srcField2.decimalFixed8Dot4);&quot;; 	&#xD;
			} else if (opCode == &quot;sub32&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.subtract(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.subtract(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&quot;; 	&#xD;
			} else if (opCode == &quot;sub64&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.subtract(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.subtract(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&quot;; 	&#xD;
			} else if (opCode == &quot;sub128&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.subtract(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.subtract(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&quot;; 	&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigDec Script&quot;;&#xD;
			}&#xD;
		} else if (src2 == &quot;intSigned&quot;) {&#xD;
//POW&#xD;
			if (opCode == &quot;pow&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.pow(srcField2.integerSigned);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.pow(srcField2.integerSigned);&quot;; &#xD;
			} else if (opCode == &quot;pow32&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.pow(srcField2.integerSigned, MathContext.DECIMAL32);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.pow(srcField2.integerSigned, MathContext.DECIMAL32);&quot;; &#xD;
			} else if (opCode == &quot;pow64&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.pow(srcField2.integerSigned, MathContext.DECIMAL64);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.pow(srcField2.integerSigned, MathContext.DECIMAL64);&quot;; &#xD;
			} else if (opCode == &quot;pow128&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.pow(srcField2.integerSigned, MathContext.DECIMAL128);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.pow(srcField2.integerSigned, MathContext.DECIMAL128);&quot;; &#xD;
// SCALE BY POWER OF TEN&#xD;
			} else if (opCode == &quot;sbpot&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.scaleByPowerOfTen(srcField2.integerSigned);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.scaleByPowerOfTen(srcField2.integerSigned);&quot;; &#xD;
// SET SCALE&#xD;
			} else if (opCode == &quot;setScale&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.setScale(srcField2.integerSigned);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.setScale(srcField2.integerSigned);&quot;; &#xD;
			} else if (opCode == &quot;setSc32&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.setScale(srcField2.integerSigned, RoundingMode.HALF_UP);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.setScale(srcField2.integerSigned, MathContext.DECIMAL32);&quot;; &#xD;
			} else if (opCode == &quot;setSc64&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.setScale(srcField2.integerSigned, RoundingMode.HALF_UP);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.setScale(srcField2.integerSigned, MathContext.DECIMAL64);&quot;; &#xD;
			} else if (opCode == &quot;setSc128&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.setScale(srcField2.integerSigned, RoundingMode.HALF_UP);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.setScale(srcField2.integerSigned, MathContext.DECIMAL128);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigDec Script&quot;;&#xD;
			}				&#xD;
		} else {&#xD;
			if (opCode == &quot;abs&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.abs();&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.abs();&quot;; &#xD;
			} else if (opCode == &quot;negate&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.negate();&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.negate();&quot;; 		&#xD;
			} else if (opCode == &quot;round32&quot;) {&#xD;
Log.write(&quot;LOGWRITE: Start of round32&quot;);&#xD;
Log.write(&quot;LOGWRITE: src = &quot;+srcField.decimalFixed8Dot4.toPlainString());&#xD;
Log.write(&quot;LOGWRITE: MathContext.DECIMAL32 = &quot;+MathContext.DECIMAL32);&#xD;
Log.write(&quot;LOGWRITE: about to assign...&quot;);&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.round(MathContext.DECIMAL32);&#xD;
Log.write(&quot;LOGWRITE: ... assigned&quot;);&#xD;
Log.write(&quot;LOGWRITE: dst = &quot;+dstField.decimalFixed8Dot4.toPlainString());&#xD;
Log.write(&quot;LOGWRITE: Updating result...&quot;);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.round(MathContext.DECIMAL32);&quot;; 		&#xD;
Log.write(&quot;LOGWRITE: ... result updated&quot;);&#xD;
			} else if (opCode == &quot;round64&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.round(MathContext.DECIMAL64);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.round(MathContext.DECIMAL64);&quot;; 		&#xD;
			} else if (opCode == &quot;round128&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.round(MathContext.DECIMAL128);&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.round(MathContext.DECIMAL128);&quot;; 		&#xD;
			} else if (opCode == &quot;strip0s&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.stripTrailingZeros();&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.stripTrailingZeroes();&quot;; 		&#xD;
			} else if (opCode == &quot;ulp&quot;) {&#xD;
				dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.ulp();&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.ulp();&quot;; 		&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigDec Script&quot;;&#xD;
			}				&#xD;
		} &#xD;
	} else {&#xD;
		result += &quot;|ERROR:Invalid src value: '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigDec Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;decimalFixedBig&quot;) {&#xD;
	if (src == &quot;decimalFixed&quot;) { &#xD;
		if (src2 == &quot;decimalFixed&quot;) {&#xD;
// ADD&#xD;
			if (opCode == &quot;add&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4);&quot;; 		&#xD;
			} else if (opCode == &quot;add32&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&quot;; 		&#xD;
			} else if (opCode == &quot;add64&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&quot;; 		&#xD;
			} else if (opCode == &quot;add128&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&quot;; 		&#xD;
			} else if (opCode == &quot;add256a&quot;) {&#xD;
				var mc = ScriptUtil.createMathContext(8);&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4, mc);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&quot;; 		&#xD;
			} else if (opCode == &quot;add256b&quot;) {&#xD;
				var mc = ScriptUtil.createMathContext(8, RoundingMode.HALF_EVEN);&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4, mc);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.add(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&quot;; 		&#xD;
// DIVIDE		&#xD;
			} else if (opCode == &quot;divide&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4);&quot;; &#xD;
			} else if (opCode == &quot;divide32&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&quot;; &#xD;
			} else if (opCode == &quot;divide64&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&quot;; &#xD;
			} else if (opCode == &quot;divide128&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&quot;; &#xD;
			} else if (opCode == &quot;divide256a&quot;) {&#xD;
				var mc = ScriptUtil.createMathContext(8);&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, mc);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&quot;; &#xD;
			} else if (opCode == &quot;divide256b&quot;) {&#xD;
				var mc = ScriptUtil.createMathContext(8, RoundingMode.HALF_EVEN);&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, mc);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&quot;; &#xD;
			} else if (opCode == &quot;divide256c&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, 70, RoundingMode.HALF_EVEN );&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&quot;; &#xD;
			} else if (opCode == &quot;divide256d&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, RoundingMode.HALF_EVEN );&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divide(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&quot;; &#xD;
// DIVIDE AND REMAINDER&#xD;
//			} else if (opCode == &quot;divAR&quot;) {&#xD;
//				var dar = srcField.decimalFixed8Dot4.divideAndRemainder(srcField2.decimalFixed8Dot4);&#xD;
//				dstField.decimalFixed80dot70 = dar[0];&#xD;
//				result += &quot;|INFO:dar = srcField.decimalFixed8Dot4.gcd(srcField2.decimalFixed8Dot4); dstField.decimalFixed80dot70=dar[0]; Vals: dar[0]=&quot;+dar[0]+&quot;, dar[1]=&quot;+dar[1]; &#xD;
//			} else if (opCode == &quot;divAR32&quot;) {&#xD;
//				var dar = srcField.decimalFixed8Dot4.divideAndRemainder(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&#xD;
//				dstField.decimalFixed80dot70 = dar[0];&#xD;
//				result += &quot;|INFO:dar = srcField.decimalFixed8Dot4.gcd(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32); dstField.decimalFixed80dot70=dar[0]; Vals: dar[0]=&quot;+dar[0]+&quot;, dar[1]=&quot;+dar[1]; &#xD;
//			} else if (opCode == &quot;divAR64&quot;) {&#xD;
//				var dar = srcField.decimalFixed8Dot4.divideAndRemainder(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&#xD;
//				dstField.decimalFixed80dot70 = dar[0];&#xD;
//				result += &quot;|INFO:dar = srcField.decimalFixed8Dot4.gcd(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32); dstField.decimalFixed80dot70=dar[0]; Vals: dar[0]=&quot;+dar[0]+&quot;, dar[1]=&quot;+dar[1]; &#xD;
//			} else if (opCode == &quot;divAR128&quot;) {&#xD;
//				var dar = srcField.decimalFixed8Dot4.divideAndRemainder(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&#xD;
//				dstField.decimalFixed80dot70 = dar[0];&#xD;
//				result += &quot;|INFO:dar = srcField.decimalFixed8Dot4.gcd(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32); dstField.decimalFixed80dot70=dar[0]; Vals: dar[0]=&quot;+dar[0]+&quot;, dar[1]=&quot;+dar[1]; &#xD;
// DIVIDE TO INTEGRAL&#xD;
			} else if (opCode == &quot;divTI&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divideToIntegralValue(srcField2.decimalFixed8Dot4);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divideToIntegralValue(srcField2.decimalFixed8Dot4);&quot;; &#xD;
			} else if (opCode == &quot;divTI32&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divideToIntegralValue(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divideToIntegralValue(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&quot;; &#xD;
			} else if (opCode == &quot;divTI64&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divideToIntegralValue(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divideToIntegralValue(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&quot;; &#xD;
			} else if (opCode == &quot;divTI128&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divideToIntegralValue(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.divideToIntegralValue(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&quot;; &#xD;
// MIN &amp; MAX&#xD;
			} else if (opCode == &quot;min&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.min(srcField2.decimalFixed8Dot4);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.min(srcField2.decimalFixed8Dot4);&quot;; &#xD;
			} else if (opCode == &quot;max&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.max(srcField2.decimalFixed8Dot4);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.max(srcField2.decimalFixed8Dot4);&quot;; &#xD;
// MULTIPLY&#xD;
			} else if (opCode == &quot;multiply&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.multiply(srcField2.decimalFixed8Dot4);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.multiply(srcField2.decimalFixed8Dot4);&quot;; 	&#xD;
			} else if (opCode == &quot;multiply32&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.multiply(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.multiply(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&quot;; 	&#xD;
			} else if (opCode == &quot;multiply64&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.multiply(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.multiply(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&quot;; 	&#xD;
			} else if (opCode == &quot;multiply128&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.multiply(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.multiply(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&quot;; 	&#xD;
// REMAINDER&#xD;
			} else if (opCode == &quot;rem&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.remainder(srcField2.decimalFixed8Dot4);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.remainder(srcField2.decimalFixed8Dot4);&quot;; 	&#xD;
			} else if (opCode == &quot;rem32&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.remainder(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.remainder(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&quot;; 	&#xD;
			} else if (opCode == &quot;rem64&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.remainder(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.remainder(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&quot;; 	&#xD;
			} else if (opCode == &quot;rem128&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.remainder(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.remainder(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&quot;; 	&#xD;
// SUBTRACT&#xD;
			} else if (opCode == &quot;sub&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.subtract(srcField2.decimalFixed8Dot4);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.subtract(srcField2.decimalFixed8Dot4);&quot;; 	&#xD;
			} else if (opCode == &quot;sub32&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.subtract(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.subtract(srcField2.decimalFixed8Dot4, MathContext.DECIMAL32);&quot;; 	&#xD;
			} else if (opCode == &quot;sub64&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.subtract(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.subtract(srcField2.decimalFixed8Dot4, MathContext.DECIMAL64);&quot;; 	&#xD;
			} else if (opCode == &quot;sub128&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.subtract(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.subtract(srcField2.decimalFixed8Dot4, MathContext.DECIMAL128);&quot;; 	&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigDec Script&quot;;&#xD;
			}&#xD;
		} else if (src2 == &quot;intSigned&quot;) {&#xD;
//POW&#xD;
			if (opCode == &quot;pow&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.pow(srcField2.integerSigned);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.pow(srcField2.integerSigned);&quot;; &#xD;
			} else if (opCode == &quot;pow32&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.pow(srcField2.integerSigned, MathContext.DECIMAL32);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.pow(srcField2.integerSigned, MathContext.DECIMAL32);&quot;; &#xD;
			} else if (opCode == &quot;pow64&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.pow(srcField2.integerSigned, MathContext.DECIMAL64);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.pow(srcField2.integerSigned, MathContext.DECIMAL64);&quot;; &#xD;
			} else if (opCode == &quot;pow128&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.pow(srcField2.integerSigned, MathContext.DECIMAL128);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.pow(srcField2.integerSigned, MathContext.DECIMAL128);&quot;; &#xD;
// SCALE BY POWER OF TEN&#xD;
			} else if (opCode == &quot;sbpot&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.scaleByPowerOfTen(srcField2.integerSigned);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.scaleByPowerOfTen(srcField2.integerSigned);&quot;; &#xD;
// SET SCALE&#xD;
			} else if (opCode == &quot;setScale&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.setScale(srcField2.integerSigned);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.setScale(srcField2.integerSigned);&quot;; &#xD;
			} else if (opCode == &quot;setSc32&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.setScale(srcField2.integerSigned, RoundingMode.HALF_UP);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.setScale(srcField2.integerSigned, MathContext.DECIMAL32);&quot;; &#xD;
			} else if (opCode == &quot;setSc64&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.setScale(srcField2.integerSigned, RoundingMode.HALF_UP);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.setScale(srcField2.integerSigned, MathContext.DECIMAL64);&quot;; &#xD;
			} else if (opCode == &quot;setSc128&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.setScale(srcField2.integerSigned, RoundingMode.HALF_UP);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.setScale(srcField2.integerSigned, MathContext.DECIMAL128);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigDec Script&quot;;&#xD;
			}				&#xD;
		} else {&#xD;
			if (opCode == &quot;abs&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.abs();&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.abs();&quot;; &#xD;
			} else if (opCode == &quot;negate&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.negate();&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.negate();&quot;; 		&#xD;
			} else if (opCode == &quot;round32&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.round(MathContext.DECIMAL32);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.round(MathContext.DECIMAL32);&quot;; 		&#xD;
			} else if (opCode == &quot;round64&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.round(MathContext.DECIMAL64);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.round(MathContext.DECIMAL64);&quot;; 		&#xD;
			} else if (opCode == &quot;round128&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.round(MathContext.DECIMAL128);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.round(MathContext.DECIMAL128);&quot;; 		&#xD;
			} else if (opCode == &quot;strip0s&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.stripTrailingZeros();&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.stripTrailingZeroes();&quot;; 		&#xD;
			} else if (opCode == &quot;ulp&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.ulp();&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed8Dot4.ulp();&quot;; 		&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigDec Script&quot;;&#xD;
			}				&#xD;
		} &#xD;
	} else if (src == &quot;decimalFixedBig&quot;) { &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;round32&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed80dot70.round(MathContext.DECIMAL32);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed80dot70.round(MathContext.DECIMAL32);&quot;; 		&#xD;
			} else if (opCode == &quot;round64&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed80dot70.round(MathContext.DECIMAL64);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed80dot70.round(MathContext.DECIMAL64);&quot;; 		&#xD;
			} else if (opCode == &quot;round128&quot;) {&#xD;
				dstField.decimalFixed80dot70 = srcField.decimalFixed80dot70.round(MathContext.DECIMAL128);&#xD;
				result += &quot;|INFO:dstField.decimalFixed80dot70 = srcField.decimalFixed80dot70.round(MathContext.DECIMAL128);&quot;; 		&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigDec Script&quot;;&#xD;
			}				&#xD;
		}&#xD;
	} else {&#xD;
		result += &quot;|ERROR:Invalid src value: '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigDec Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;intFixed&quot;) {&#xD;
	if (src == &quot;decimalFixed&quot;) { &#xD;
		if (src2 == &quot;-&quot;)&#xD;
		{&#xD;
			if (opCode == &quot;uVal&quot;) {&#xD;
				dstField.integerFixed5 = srcField.decimalFixed8Dot4.unscaledValue();&#xD;
				result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4.abs();&quot;; 		&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigDec Script&quot;;&#xD;
			}				&#xD;
		} &#xD;
	} else {&#xD;
		result += &quot;|ERROR:Invalid src value: '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigDec Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;intSigned&quot;) {&#xD;
	if (src == &quot;decimalFixed&quot;) { &#xD;
		if (src2 == &quot;decimalFixed&quot;)&#xD;
		{&#xD;
			if (opCode == &quot;compareTo&quot;) {&#xD;
				dstField.integerSigned = srcField.decimalFixed8Dot4.compareTo(srcField2.decimalFixed8Dot4);&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.decimalFixed8Dot4.compareTo(srcField2.decimalFixed8Dot4);&quot;; 		&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigDec Script&quot;;&#xD;
			}				&#xD;
		} else if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;precision&quot;) {&#xD;
				dstField.integerSigned = srcField.decimalFixed8Dot4.precision();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.decimalFixed8Dot4.precision();&quot;; 		&#xD;
			} else if (opCode == &quot;scale&quot;) {&#xD;
				dstField.integerSigned = srcField.decimalFixed8Dot4.scale();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.decimalFixed8Dot4.scale();&quot;; 		&#xD;
			} else if (opCode == &quot;signum&quot;) {&#xD;
				dstField.integerSigned = srcField.decimalFixed8Dot4.signum();&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.decimalFixed8Dot4.signum();&quot;; 		&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigDec Script&quot;;&#xD;
			}	&#xD;
		}&#xD;
	} else {&#xD;
		result += &quot;|ERROR:Invalid src value: '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigDec Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;text&quot;) {&#xD;
	if (src == &quot;decimalFixed&quot;) 	&#xD;
	{ &#xD;
		if (src2 == &quot;intSigned&quot;) {&#xD;
//			if (opCode == &quot;toStringRadix&quot;) {&#xD;
//				dstField.text20 = srcField.integerFixed5.toString(srcField2.integerSigned);&#xD;
//				result += &quot;|INFO:dstField.text20 = srcField.integerFixed5; - NOT SUPPORTED BY STUDIO&quot;; &#xD;
//			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigDec Script&quot;;&#xD;
//			}&#xD;
		} else {&#xD;
			if (opCode == &quot;toString&quot;) {&#xD;
				dstField.text20 = srcField.decimalFixed8Dot4;&#xD;
				result += &quot;|INFO:dstField.text20 = srcField.decimalFixed8Dot4;&quot;; &#xD;
			} else if (opCode == &quot;toEng&quot;) {&#xD;
				dstField.text20 = srcField.decimalFixed8Dot4.toEngineeringString();&#xD;
				result += &quot;|INFO:dstField.text20 = srcField.decimalFixed8Dot4.toEngineeringString();&quot;; &#xD;
			} else if (opCode == &quot;toPlain&quot;) {&#xD;
				dstField.text20 = srcField.decimalFixed8Dot4.toPlainString();&#xD;
				result += &quot;|INFO:dstField.text20 = srcField.decimalFixed8Dot4.toPlainString();&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigDec Script&quot;;&#xD;
			}&#xD;
		} &#xD;
	} else if (src == &quot;decimalFixedBig&quot;) {&#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;round32&quot;) {&#xD;
				dstField.text20 = srcField.decimalFixed8Dot4.round(MathContext.DECIMAL32);&#xD;
				result += &quot;|INFO:dstField.text20 = srcField.decimalFixed8Dot4.round(MathContext.DECIMAL32);&quot;; 		&#xD;
			} else if (opCode == &quot;round64&quot;) {&#xD;
				dstField.text20 = srcField.decimalFixed8Dot4.round(MathContext.DECIMAL64);&#xD;
				result += &quot;|INFO:dstField.text20 = srcField.decimalFixed8Dot4.round(MathContext.DECIMAL64);&quot;; 		&#xD;
			} else if (opCode == &quot;round128&quot;) {&#xD;
				dstField.text20 = srcField.decimalFixed8Dot4.round(MathContext.DECIMAL128).toString().substr(0,20);&#xD;
				result += &quot;|INFO:dstField.text20 = srcField.decimalFixed8Dot4.round(MathContext.DECIMAL128).substr(0,20);&quot;; 			&#xD;
			} else if (opCode == &quot;round128b&quot;) {&#xD;
				dstField.text20 = srcField.decimalFixed8Dot4.round(MathContext.DECIMAL128).toString().substr(20);&#xD;
				result += &quot;|INFO:dstField.text20 = srcField.decimalFixed8Dot4.round(MathContext.DECIMAL128).substr(20);&quot;; 			&#xD;
			}&#xD;
		}&#xD;
	} else {&#xD;
		result += &quot;|ERROR:Invalid src value: '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigDec Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;duration&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in BigDec Script&quot;;&#xD;
} else if (dst == &quot;id&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in BigDec Script&quot;;&#xD;
} else if (dst == &quot;uri&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in BigDec Script&quot;;&#xD;
} else {&#xD;
	result += &quot;|ERROR:Invalid dst value: '&quot; + dst + &quot;'&quot;;&#xD;
} &#xD;
&#xD;
/////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Leave:BigDec Script&quot;;&#xD;
&#xD;
&#xD;
</xpdl2:Script>
              </xpdl2:TaskScript>
            </xpdl2:Task>
          </xpdl2:Implementation>
          <xpdl2:ExtendedAttributes>
            <xpdl2:ExtendedAttribute Name=""/>
          </xpdl2:ExtendedAttributes>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="64.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="165.0">
              <xpdl2:Coordinates XCoordinate="541.0" YCoordinate="535.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
          <xpdl2:Extensions/>
          <xpdExt:ActivityResourcePatterns>
            <xpdExt:AllocationStrategy xpdExt:Strategy="SYSTEM_DETERMINED"/>
          </xpdExt:ActivityResourcePatterns>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMp6KWnNEeCvfK09LgLLfw" xpdExt:Visibility="Private" iProcessExt:StepIndex="17">
          <xpdl2:Event>
            <xpdl2:IntermediateEvent Target="_pMp6NGnNEeCvfK09LgLLfw" Trigger="Error">
              <xpdl2:ResultError ErrorCode=""/>
            </xpdl2:IntermediateEvent>
          </xpdl2:Event>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="31.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="31.0">
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:NodeGraphicsInfo>
            <xpdl2:NodeGraphicsInfo ToolId="XPD.BorderEventPosition">
              <xpdl2:Coordinates XCoordinate="19.457013574660635" YCoordinate="0.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMp6KmnNEeCvfK09LgLLfw" Name="scriptsDoneGate" xpdExt:DisplayName="scriptsDoneGate" iProcessExt:StepIndex="18">
          <xpdl2:Route GatewayType="Exclusive" MarkerVisible="true" ExclusiveType="Data"/>
          <xpdl2:TransitionRestrictions>
            <xpdl2:TransitionRestriction>
              <xpdl2:Join Type="Exclusive" ExclusiveType="Data"/>
            </xpdl2:TransitionRestriction>
          </xpdl2:TransitionRestrictions>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="61.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="88.0">
              <xpdl2:Coordinates XCoordinate="783.0" YCoordinate="540.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMp6K2nNEeCvfK09LgLLfw" Name="ProcessAttributes" xpdExt:Visibility="Private" xpdExt:DisplayName="ProcessAttributes" iProcessExt:StepIndex="19">
          <xpdl2:Implementation>
            <xpdl2:Task>
              <xpdl2:TaskScript>
                <xpdl2:Script ScriptGrammar="JavaScript">/////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Enter:ProcessAttribute Script (dst = '&quot;+dst+&quot;' type)&quot;;&#xD;
&#xD;
/////////////////////////////////////////////////////////////&#xD;
// Process the dst parameter&#xD;
if (dst == &quot;attach&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in ProcessAttribute Script&quot;;&#xD;
} else if (dst == &quot;bool&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in ProcessAttribute Script&quot;;&#xD;
} else if (dst == &quot;date&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in ProcessAttribute Script&quot;;&#xD;
} else if (dst == &quot;time&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in ProcessAttribute Script&quot;;&#xD;
} else if (dst == &quot;datetime&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in ProcessAttribute Script&quot;;&#xD;
} else if (dst == &quot;datetimetz&quot;) {&#xD;
	if (src == &quot;-&quot;) { &#xD;
		if (opCode == &quot;getStartTime&quot;) {&#xD;
			dstField.datetimetz = Process.getStartTime();&#xD;
			result += &quot;|INFO:dstField.datetimetz = Process.getStartTime();&quot;; &#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in ProcessAttribute&quot;;&#xD;
		}&#xD;
	} else if (src == &quot;text&quot; &amp;&amp; src2 == &quot;-&quot;) { &#xD;
		if (opCode == &quot;getActivityStartTime&quot;) {&#xD;
			dstField.datetimetz = Process.getActivityStartTime(srcField.text20);&#xD;
			result += &quot;|INFO:dstField.datetimetz = Process.getActivityStartTime(srcField.text20);&quot;; &#xD;
		} else if (opCode == &quot;getActivityCompletionTime&quot;) {&#xD;
			dstField.datetimetz = Process.getActivityCompletionTime(srcField.text20);&#xD;
			result += &quot;|INFO:dstField.datetimetz = Process.getActivityCompletionTime(srcField.text20);&quot;; &#xD;
		} else if (opCode == &quot;getActivityDeadline&quot;) {&#xD;
			dstField.datetimetz = Process.getActivityDeadline(srcField.text20);&#xD;
			result += &quot;|INFO:dstField.datetimetz = Process.getActivityDeadline(srcField.text20);&quot;; &#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in ProcessAttribute&quot;;&#xD;
		}&#xD;
	} else {&#xD;
		result += &quot;|ERROR:Invalid src value: '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in ProcessAttribute Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;decimalFloat&quot;) {	&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in ProcessAttribute Script&quot;;&#xD;
} else if (dst == &quot;decimalFixed&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in ProcessAttribute Script&quot;;&#xD;
} else if (dst == &quot;intSigned&quot;) {&#xD;
	if (src == &quot;-&quot;) { &#xD;
		if (opCode == &quot;priority&quot;) {&#xD;
			dstField.integerSigned = Process.priority;&#xD;
			result += &quot;|INFO:dstField.integerSigned = Process.priority;&quot;; &#xD;
		} else if (opCode == &quot;getPriority&quot;) {&#xD;
			dstField.integerSigned = Process.getPriority();&#xD;
			result += &quot;|INFO:dstField.integerSigned = Process.getPriority();&quot;; &#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in ProcessAttribute&quot;;&#xD;
		}&#xD;
	} else {&#xD;
		result += &quot;|ERROR:Invalid src value: '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in ProcessAttribute Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;intSigned&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in ProcessAttribute Script&quot;;&#xD;
} else if (dst == &quot;text&quot;) {&#xD;
	if (src == &quot;-&quot;) { &#xD;
		if (opCode == &quot;getName&quot;) {&#xD;
			dstField.text20 = Process.getName();&#xD;
			result += &quot;|INFO:dstField.text20 = Process.getName();&quot;; &#xD;
		} else if (opCode == &quot;getDescription&quot;) {&#xD;
			dstField.text20 = Process.getDescription();&#xD;
			result += &quot;|INFO:dstField.text20 = Process.getDescription();&quot;; &#xD;
		} else if (opCode == &quot;getOriginator&quot;) {&#xD;
			dstField.text20 = Process.getOriginator();&#xD;
			result += &quot;|INFO:dstField.text20 = Process.getOriginator();&quot;; &#xD;
		} else if (opCode == &quot;getId&quot;) {&#xD;
			dstField.text20 = Process.getId();&#xD;
			result += &quot;|INFO:dstField.text20 = Process.getId();&quot;; &#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in ProcessAttribute&quot;;&#xD;
		}&#xD;
	} else if (src == &quot;text&quot; &amp;&amp; src2 == &quot;-&quot;) { &#xD;
		if (opCode == &quot;getActivityType&quot;) {&#xD;
			dstField.text20 = Process.getActivityType(srcField.text20);&#xD;
			result += &quot;|INFO:dstField.text20 = Process.getActivityType(srcField.text20);&quot;; &#xD;
		} else if (opCode == &quot;getActivityState&quot;) {&#xD;
			dstField.text20 = Process.getActivityState(srcField.text20);&#xD;
			result += &quot;|INFO:dstField.text20 = Process.getActivityState(srcField.text20);&quot;; &#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in ProcessAttribute&quot;;&#xD;
		}&#xD;
	} else if (src == &quot;text&quot; &amp;&amp; src2 == &quot;text&quot;) { &#xD;
		if (opCode == &quot;getActivityAttribute&quot;) {&#xD;
			dstField.text20 = Process.getActivityAttribute(srcField.text20, srcField2.text20);&#xD;
			result += &quot;|INFO:dstField.text20 = Process.getActivityAttribute(srcField.text20, srcField2.text20);&quot;; &#xD;
//		} else if (opCode == &quot;getActivityArrayAttribute&quot;) {&#xD;
//			dstField.text20 = Process.getActivityArrayAttribute(srcField.text20, srcField2.text20);&#xD;
//			result += &quot;|INFO:dstField.text20 = Process.getActivityArrayAttribute(srcField.text20, srcField2.text20);&quot;; &#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in ProcessAttribute&quot;;&#xD;
		}&#xD;
	} else {&#xD;
		result += &quot;|ERROR:Invalid src value: '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in ProcessAttribute Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;duration&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in ProcessAttribute Script&quot;;&#xD;
} else if (dst == &quot;id&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in ProcessAttribute Script&quot;;&#xD;
} else if (dst == &quot;uri&quot;) &#xD;
{&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in ProcessAttribute Script&quot;;&#xD;
} else {&#xD;
	result += &quot;|ERROR:Invalid dst value: '&quot; + dst + &quot;'&quot;;&#xD;
} &#xD;
&#xD;
/////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Leave:ProcessAttribute Script&quot;;&#xD;
&#xD;
&#xD;
</xpdl2:Script>
              </xpdl2:TaskScript>
            </xpdl2:Task>
          </xpdl2:Implementation>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="64.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="126.0">
              <xpdl2:Coordinates XCoordinate="346.0" YCoordinate="1015.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
          <xpdl2:Extensions/>
          <xpdExt:ActivityResourcePatterns>
            <xpdExt:AllocationStrategy xpdExt:Strategy="SYSTEM_DETERMINED"/>
          </xpdExt:ActivityResourcePatterns>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMp6LGnNEeCvfK09LgLLfw" xpdExt:Visibility="Private" iProcessExt:StepIndex="20">
          <xpdl2:Event>
            <xpdl2:IntermediateEvent Target="_pMp6MGnNEeCvfK09LgLLfw" Trigger="Error">
              <xpdl2:ResultError ErrorCode=""/>
            </xpdl2:IntermediateEvent>
          </xpdl2:Event>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="31.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="31.0">
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:NodeGraphicsInfo>
            <xpdl2:NodeGraphicsInfo ToolId="XPD.BorderEventPosition">
              <xpdl2:Coordinates XCoordinate="19.078947368421055" YCoordinate="0.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMp6LWnNEeCvfK09LgLLfw" Name="InvalidOperationvalue" xpdExt:Visibility="Private" xpdExt:DisplayName="Invalid Operation value" iProcessExt:StepIndex="21">
          <xpdl2:Implementation>
            <xpdl2:Task>
              <xpdl2:TaskScript>
                <xpdl2:Script ScriptGrammar="JavaScript">/////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Enter:Invalid Operation Value script&quot;;&#xD;
&#xD;
&#xD;
////////////////////////////////////////////////////////&#xD;
// Process the dst parameter&#xD;
//actualValue = &quot;&lt;Not Set!>&quot;;&#xD;
actualValue = &quot;Invalid opscript value: &quot; + opScript;&#xD;
result+=&quot;|ERROR:Invalid value for operation parameter: &quot;+operation;&#xD;
&#xD;
/////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Leave:Invalid Operation Value script&quot;;&#xD;
</xpdl2:Script>
              </xpdl2:TaskScript>
            </xpdl2:Task>
          </xpdl2:Implementation>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="64.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="151.0">
              <xpdl2:Coordinates XCoordinate="666.0" YCoordinate="213.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
          <xpdl2:Extensions/>
          <xpdExt:ActivityResourcePatterns>
            <xpdExt:AllocationStrategy xpdExt:Strategy="SYSTEM_DETERMINED"/>
          </xpdExt:ActivityResourcePatterns>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMp6LmnNEeCvfK09LgLLfw" xpdExt:Visibility="Private" iProcessExt:StepIndex="22">
          <xpdl2:Event>
            <xpdl2:IntermediateEvent Target="_pMp6NWnNEeCvfK09LgLLfw" Trigger="Error">
              <xpdl2:ResultError/>
            </xpdl2:IntermediateEvent>
          </xpdl2:Event>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="31.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="31.0">
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:NodeGraphicsInfo>
            <xpdl2:NodeGraphicsInfo ToolId="XPD.BorderEventPosition">
              <xpdl2:Coordinates XCoordinate="19.806763285024154" YCoordinate="0.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMp6L2nNEeCvfK09LgLLfw" Name="selectScriptGate" xpdExt:DisplayName="selectScriptGate" iProcessExt:StepIndex="23">
          <xpdl2:Route GatewayType="Exclusive" MarkerVisible="true" ExclusiveType="Data"/>
          <xpdl2:TransitionRestrictions>
            <xpdl2:TransitionRestriction>
              <xpdl2:Split Type="Exclusive" ExclusiveType="Data">
                <xpdl2:TransitionRefs>
                  <xpdl2:TransitionRef Id="_pMqhM2nNEeCvfK09LgLLfw"/>
                  <xpdl2:TransitionRef Id="_pMqhNWnNEeCvfK09LgLLfw"/>
                  <xpdl2:TransitionRef Id="_pMqhN2nNEeCvfK09LgLLfw"/>
                  <xpdl2:TransitionRef Id="_pMqhOWnNEeCvfK09LgLLfw"/>
                  <xpdl2:TransitionRef Id="_pMqhOmnNEeCvfK09LgLLfw"/>
                  <xpdl2:TransitionRef Id="_pMqhO2nNEeCvfK09LgLLfw"/>
                  <xpdl2:TransitionRef Id="_pMqhPGnNEeCvfK09LgLLfw"/>
                  <xpdl2:TransitionRef Id="_pMqhQWnNEeCvfK09LgLLfw"/>
                  <xpdl2:TransitionRef Id="_pMqhQ2nNEeCvfK09LgLLfw"/>
                  <xpdl2:TransitionRef Id="_pMqhRGnNEeCvfK09LgLLfw"/>
                  <xpdl2:TransitionRef Id="_pMqhVGnNEeCvfK09LgLLfw"/>
                  <xpdl2:TransitionRef Id="_iSwtAJ55EeC5wuChGREBNQ"/>
                </xpdl2:TransitionRefs>
              </xpdl2:Split>
            </xpdl2:TransitionRestriction>
          </xpdl2:TransitionRestrictions>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="61.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="86.0">
              <xpdl2:Coordinates XCoordinate="182.0" YCoordinate="534.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMp6MGnNEeCvfK09LgLLfw" Name="DecimalScript" xpdExt:Visibility="Private" xpdExt:DisplayName="Decimal Script" iProcessExt:StepIndex="24">
          <xpdl2:Implementation>
            <xpdl2:Task>
              <xpdl2:TaskScript>
                <xpdl2:Script ScriptGrammar="JavaScript">/////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Enter:DecimalFloat Script (dst = '&quot;+dst+&quot;' type)&quot;;&#xD;
&#xD;
/////////////////////////////////////////////////////////////&#xD;
// Process the dst parameter&#xD;
if (dst == &quot;attach&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in DecimalFloat Script&quot;;&#xD;
} else if (dst == &quot;bool&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in DecimalFloat Script&quot;;&#xD;
} else if (dst == &quot;date&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in DecimalFloat Script&quot;;&#xD;
} else if (dst == &quot;time&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in DecimalFloat Script&quot;;&#xD;
} else if (dst == &quot;datetime&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in DecimalFloat Script&quot;;&#xD;
} else if (dst == &quot;datetimetz&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in DecimalFloat Script&quot;;&#xD;
} else if (dst == &quot;decimalFloat&quot;) {	&#xD;
	if (src == &quot;intSigned&quot;) {&#xD;
		if (src2 == &quot;intSigned&quot;) {&#xD;
			if (opCode == &quot;add&quot;) {&#xD;
				dstField.decimalFloat = srcField.integerSigned + srcField2.integerSigned;&#xD;
				result += &quot;|INFO:dstField.decimalFloat = srcField.integerSigned + srcField2.integerSigned;&quot;; 		&#xD;
			} else if (opCode == &quot;divide&quot;) {&#xD;
				dstField.decimalFloat = srcField.integerSigned / srcField2.integerSigned;&#xD;
				result += &quot;|INFO:dstField.decimalFloat = srcField.integerSigned / srcField2.integerSigned;&quot;; &#xD;
			} else if (opCode == &quot;min&quot;) {&#xD;
				dstField.decimalFloat = Math.min(srcField.integerSigned, srcField2.integerSigned);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.min(srcField.integerSigned, srcField2.integerSigned);&quot;; &#xD;
			} else if (opCode == &quot;min1k&quot;) {&#xD;
				dstField.decimalFloat = Math.min(1000, srcField.integerSigned, srcField2.integerSigned);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.min(1000, srcField.integerSigned, srcField2.integerSigned);&quot;; &#xD;
			} else if (opCode == &quot;max&quot;) {&#xD;
				dstField.decimalFloat = Math.max(srcField.integerSigned, srcField2.integerSigned);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.max(srcField.integerSigned, srcField2.integerSigned);&quot;; &#xD;
			} else if (opCode == &quot;max0&quot;) {&#xD;
				dstField.decimalFloat = Math.max(0, srcField.integerSigned, srcField2.integerSigned);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.max(0, srcField.integerSigned, srcField2.integerSigned);&quot;; &#xD;
			} else if (opCode == &quot;multiply&quot;) {&#xD;
				dstField.decimalFloat = srcField.integerSigned * srcField2.integerSigned;&#xD;
				result += &quot;|INFO:dstField.decimalFloat = srcField.integerSigned * srcField2.integerSigned;&quot;; 	&#xD;
			} else if (opCode == &quot;remainder&quot;) {&#xD;
				dstField.decimalFloat = srcField.integerSigned % srcField2.integerSigned;&#xD;
				result += &quot;|INFO:dstField.decimalFloat = srcField.integerSigned % srcField2.integerSigned;&quot;; &#xD;
			} else if (opCode == &quot;subtract&quot;) {&#xD;
				dstField.decimalFloat = srcField.integerSigned - srcField2.integerSigned;&#xD;
				result += &quot;|INFO:dstField.decimalFloat = srcField.integerSigned - srcField2.integerSigned;&quot;; &#xD;
			} else if (opCode == &quot;pow&quot;) {&#xD;
				dstField.decimalFloat = Math.pow(srcField.integerSigned , srcField2.integerSigned);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.pow(srcField.integerSigned , srcField2.integerSigned);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in DecimalFloat Script&quot;;&#xD;
			}&#xD;
		} else if (src2 == &quot;decimalFloat&quot;) {&#xD;
			if (opCode == &quot;add&quot;) {&#xD;
				dstField.decimalFloat = srcField.integerSigned + srcField2.decimalFloat;&#xD;
				result += &quot;|INFO:dstField.decimalFloat = srcField.integerSigned + srcField2.decimalFloat;&quot;; 		&#xD;
			} else if (opCode == &quot;divide&quot;) {&#xD;
				dstField.decimalFloat = srcField.integerSigned / srcField2.decimalFloat;&#xD;
				result += &quot;|INFO:dstField.decimalFloat = srcField.integerSigned / srcField2.decimalFloat;&quot;; &#xD;
			} else if (opCode == &quot;min&quot;) {&#xD;
				dstField.decimalFloat = Math.min(srcField.integerSigned, srcField2.decimalFloat);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.min(srcField.integerSigned, srcField2.decimalFloat);&quot;; &#xD;
			} else if (opCode == &quot;min1k&quot;) {&#xD;
				dstField.decimalFloat = Math.min(1000, srcField.integerSigned, srcField2.decimalFloat);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.min(1000, srcField.integerSigned, srcField2.decimalFloat);&quot;; &#xD;
			} else if (opCode == &quot;max&quot;) {&#xD;
				dstField.decimalFloat = Math.max(srcField.integerSigned, srcField2.decimalFloat);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.max(srcField.integerSigned, srcField2.decimalFloat);&quot;; &#xD;
			} else if (opCode == &quot;max0&quot;) {&#xD;
				dstField.decimalFloat = Math.max(0, srcField.integerSigned, srcField2.decimalFloat);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.max(0, srcField.integerSigned, srcField2.decimalFloat);&quot;; &#xD;
			} else if (opCode == &quot;multiply&quot;) {&#xD;
				dstField.decimalFloat = srcField.integerSigned * srcField2.decimalFloat;&#xD;
				result += &quot;|INFO:dstField.decimalFloat = srcField.integerSigned * srcField2.decimalFloat;&quot;; 	&#xD;
			} else if (opCode == &quot;remainder&quot;) {&#xD;
				dstField.decimalFloat = srcField.integerSigned % srcField2.decimalFloat;&#xD;
				result += &quot;|INFO:dstField.decimalFloat = srcField.integerSigned % srcField2.decimalFloat;&quot;; &#xD;
			} else if (opCode == &quot;subtract&quot;) {&#xD;
				dstField.decimalFloat = srcField.integerSigned - srcField2.decimalFloat;&#xD;
				result += &quot;|INFO:dstField.decimalFloat = srcField.integerSigned - srcField2.decimalFloat;&quot;; &#xD;
			} else if (opCode == &quot;pow&quot;) {&#xD;
				dstField.decimalFloat = Math.pow(srcField.integerSigned , srcField2.decimalFloat);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.pow(srcField.integerSigned , srcField2.decimalFloat);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in DecimalFloat Script&quot;;&#xD;
			}&#xD;
		} else {&#xD;
			if (opCode == &quot;abs&quot;) {&#xD;
				dstField.decimalFloat = Math.abs(srcField.integerSigned);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.abs(srcField.integerSigned);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in DecimalFloat Script&quot;;&#xD;
			}				&#xD;
		} &#xD;
	} else if (src == &quot;decimalFloat&quot;) {&#xD;
		if (src2 == &quot;intSigned&quot;) {&#xD;
			if (opCode == &quot;add&quot;) {&#xD;
				dstField.decimalFloat = srcField.decimalFloat + srcField2.integerSigned;&#xD;
				result += &quot;|INFO:dstField.decimalFloat = srcField.decimalFloat + srcField2.integerSigned;&quot;; 		&#xD;
			} else if (opCode == &quot;divide&quot;) {&#xD;
				dstField.decimalFloat = srcField.decimalFloat / srcField2.integerSigned;&#xD;
				result += &quot;|INFO:dstField.decimalFloat = srcField.decimalFloat / srcField2.integerSigned;&quot;; &#xD;
			} else if (opCode == &quot;min&quot;) {&#xD;
				dstField.decimalFloat = Math.min(srcField.decimalFloat, srcField2.integerSigned);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.min(srcField.decimalFloat, srcField2.integerSigned);&quot;; &#xD;
			} else if (opCode == &quot;min1k&quot;) {&#xD;
				dstField.decimalFloat = Math.min(1000, srcField.decimalFloat, srcField2.integerSigned);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.min(1000, srcField.decimalFloat, srcField2.integerSigned);&quot;; &#xD;
			} else if (opCode == &quot;max&quot;) {&#xD;
				dstField.decimalFloat = Math.max(srcField.decimalFloat, srcField2.integerSigned);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.max(srcField.decimalFloat, srcField2.integerSigned);&quot;; &#xD;
			} else if (opCode == &quot;max0&quot;) {&#xD;
				dstField.decimalFloat = Math.max(0, srcField.decimalFloat, srcField2.integerSigned);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.max(0, srcField.decimalFloat, srcField2.integerSigned);&quot;; &#xD;
			} else if (opCode == &quot;multiply&quot;) {&#xD;
				dstField.decimalFloat = srcField.decimalFloat * srcField2.integerSigned;&#xD;
				result += &quot;|INFO:dstField.decimalFloat = srcField.decimalFloat * srcField2.integerSigned;&quot;; 	&#xD;
			} else if (opCode == &quot;remainder&quot;) {&#xD;
				dstField.decimalFloat = srcField.decimalFloat % srcField2.integerSigned;&#xD;
				result += &quot;|INFO:dstField.decimalFloat = srcField.decimalFloat % srcField2.integerSigned;&quot;; &#xD;
			} else if (opCode == &quot;subtract&quot;) {&#xD;
				dstField.decimalFloat = srcField.decimalFloat - srcField2.integerSigned;&#xD;
				result += &quot;|INFO:dstField.decimalFloat = srcField.decimalFloat - srcField2.integerSigned;&quot;; &#xD;
			} else if (opCode == &quot;pow&quot;) {&#xD;
				dstField.decimalFloat = Math.pow(srcField.decimalFloat , srcField2.integerSigned);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.pow(srcField.decimalFloat , srcField2.integerSigned);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in DecimalFloat Script&quot;;&#xD;
			}&#xD;
		} else if (src2 == &quot;decimalFloat&quot;) {&#xD;
			if (opCode == &quot;add&quot;) {&#xD;
				dstField.decimalFloat = srcField.decimalFloat + srcField2.decimalFloat;&#xD;
				result += &quot;|INFO:dstField.decimalFloat = srcField.decimalFloat + srcField2.decimalFloat;&quot;; 		&#xD;
			} else if (opCode == &quot;divide&quot;) {&#xD;
				dstField.decimalFloat = srcField.decimalFloat / srcField2.decimalFloat;&#xD;
				result += &quot;|INFO:dstField.decimalFloat = srcField.decimalFloat / srcField2.decimalFloat;&quot;; &#xD;
			} else if (opCode == &quot;min&quot;) {&#xD;
				dstField.decimalFloat = Math.min(srcField.decimalFloat, srcField2.decimalFloat);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.min(srcField.decimalFloat, srcField2.decimalFloat);&quot;; &#xD;
			} else if (opCode == &quot;min1k&quot;) {&#xD;
				dstField.decimalFloat = Math.min(1000, srcField.decimalFloat, srcField2.decimalFloat);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.min(1000, srcField.decimalFloat, srcField2.decimalFloat);&quot;; &#xD;
			} else if (opCode == &quot;max&quot;) {&#xD;
				dstField.decimalFloat = Math.max(srcField.decimalFloat, srcField2.decimalFloat);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.max(srcField.decimalFloat, srcField2.decimalFloat);&quot;; &#xD;
			} else if (opCode == &quot;max0&quot;) {&#xD;
				dstField.decimalFloat = Math.max(0, srcField.decimalFloat, srcField2.decimalFloat);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.max(0, srcField.decimalFloat, srcField2.decimalFloat);&quot;; &#xD;
			} else if (opCode == &quot;multiply&quot;) {&#xD;
				dstField.decimalFloat = srcField.decimalFloat * srcField2.decimalFloat;&#xD;
				result += &quot;|INFO:dstField.decimalFloat = srcField.decimalFloat * srcField2.decimalFloat;&quot;; 	&#xD;
			} else if (opCode == &quot;remainder&quot;) {&#xD;
				dstField.decimalFloat = srcField.decimalFloat % srcField2.decimalFloat;&#xD;
				result += &quot;|INFO:dstField.decimalFloat = srcField.decimalFloat % srcField2.decimalFloat;&quot;; &#xD;
			} else if (opCode == &quot;subtract&quot;) {&#xD;
				dstField.decimalFloat = srcField.decimalFloat - srcField2.decimalFloat;&#xD;
				result += &quot;|INFO:dstField.decimalFloat = srcField.decimalFloat - srcField2.decimalFloat;&quot;; &#xD;
			} else if (opCode == &quot;pow&quot;) {&#xD;
				dstField.decimalFloat = Math.pow(srcField.decimalFloat , srcField2.decimalFloat);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.pow(srcField.decimalFloat , srcField2.decimalFloat);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in DecimalFloat Script&quot;;&#xD;
			}&#xD;
		} else {&#xD;
			if (opCode == &quot;abs&quot;) {&#xD;
				dstField.decimalFloat = Math.abs(srcField.decimalFloat);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.abs(srcField.decimalFloat);&quot;; &#xD;
			} else if (opCode == &quot;sin&quot;) {&#xD;
				dstField.decimalFloat = Math.sin(srcField.decimalFloat);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.sin(srcField.decimalFloat);&quot;; &#xD;
			} else if (opCode == &quot;cos&quot;) {&#xD;
				dstField.decimalFloat = Math.cos(srcField.decimalFloat);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.cos(srcField.decimalFloat);&quot;; &#xD;
			} else if (opCode == &quot;tan&quot;) {&#xD;
				dstField.decimalFloat = Math.tan(srcField.decimalFloat);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.tan(srcField.decimalFloat);&quot;; &#xD;
			} else if (opCode == &quot;asin&quot;) {&#xD;
				dstField.decimalFloat = Math.asin(srcField.decimalFloat);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.asin(srcField.decimalFloat);&quot;; &#xD;
			} else if (opCode == &quot;acos&quot;) {&#xD;
				dstField.decimalFloat = Math.acos(srcField.decimalFloat);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.acos(srcField.decimalFloat);&quot;; &#xD;
			} else if (opCode == &quot;atan&quot;) {&#xD;
				dstField.decimalFloat = Math.atan(srcField.decimalFloat);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.atan(srcField.decimalFloat);&quot;; &#xD;
			} else if (opCode == &quot;ceil&quot;) {&#xD;
				dstField.decimalFloat = Math.ceil(srcField.decimalFloat);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.ceil(srcField.decimalFloat);&quot;; &#xD;
			} else if (opCode == &quot;exp&quot;) {&#xD;
				dstField.decimalFloat = Math.exp(srcField.decimalFloat);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.exp(srcField.decimalFloat);&quot;; &#xD;
			} else if (opCode == &quot;floor&quot;) {&#xD;
				dstField.decimalFloat = Math.floor(srcField.decimalFloat);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.floor(srcField.decimalFloat);&quot;; &#xD;
			} else if (opCode == &quot;log&quot;) {&#xD;
				dstField.decimalFloat = Math.log(srcField.decimalFloat);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.log(srcField.decimalFloat);&quot;; &#xD;
			} else if (opCode == &quot;round&quot;) {&#xD;
				dstField.decimalFloat = Math.round(srcField.decimalFloat);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.round(srcField.decimalFloat);&quot;; &#xD;
			} else if (opCode == &quot;sqrt&quot;) {&#xD;
				dstField.decimalFloat = Math.sqrt(srcField.decimalFloat);&#xD;
				result += &quot;|INFO:dstField.decimalFloat = Math.sqrt(srcField.decimalFloat);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in DecimalFloat Script&quot;;&#xD;
			}				&#xD;
		} &#xD;
	} else if (src == &quot;-&quot;) {&#xD;
		if (opCode == &quot;random&quot;) {&#xD;
			dstField.decimalFloat = Math.random();&#xD;
			result += &quot;|INFO:dstField.decimalFloat = Math.random();&quot;; &#xD;
		} else if (opCode == &quot;pi&quot;) {&#xD;
			dstField.decimalFloat = Math.PI;&#xD;
			result += &quot;|INFO:dstField.decimalFloat = Math.PI;&quot;;&#xD;
		} else if (opCode == &quot;e&quot;) {&#xD;
			dstField.decimalFloat = Math.E;&#xD;
			result += &quot;|INFO:dstField.decimalFloat = Math.E;&quot;;&#xD;
		} else if (opCode == &quot;ln2&quot;) {&#xD;
			dstField.decimalFloat = Math.LN2;&#xD;
			result += &quot;|INFO:dstField.decimalFloat = Math.LN2;&quot;;&#xD;
		} else if (opCode == &quot;ln10&quot;) {&#xD;
			dstField.decimalFloat = Math.LN10;&#xD;
			result += &quot;|INFO:dstField.decimalFloat = Math.LN10;&quot;;&#xD;
 		} else {&#xD;
			result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;'&quot;;&#xD;
		}				&#xD;
	} else {&#xD;
		result += &quot;|ERROR:Invalid src value: '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in DecimalFloat Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;decimalFixed&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in DecimalFloat Script&quot;;&#xD;
} else if (dst == &quot;intSigned&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in DecimalFloat Script&quot;;&#xD;
} else if (dst == &quot;intSigned&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in DecimalFloat Script&quot;;&#xD;
} else if (dst == &quot;text&quot;) {&#xD;
	if (src == &quot;decimalFloat&quot;) 	&#xD;
	{ &#xD;
		if (opCode == &quot;toString&quot;) {&#xD;
			dstField.text20 = srcField.decimalFloat;&#xD;
			result += &quot;|INFO:dstField.text20 = srcField.decimalFloat;&quot;; &#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Int Script&quot;;&#xD;
		}&#xD;
	} else {&#xD;
		result += &quot;|ERROR:Invalid src value: '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in DecimalFloat Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;duration&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in DecimalFloat Script&quot;;&#xD;
} else if (dst == &quot;id&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in DecimalFloat Script&quot;;&#xD;
} else if (dst == &quot;uri&quot;) &#xD;
{&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in DecimalFloat Script&quot;;&#xD;
} else {&#xD;
	result += &quot;|ERROR:Invalid dst value: '&quot; + dst + &quot;'&quot;;&#xD;
} &#xD;
&#xD;
/////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Leave:DecimalFloat Script&quot;;&#xD;
&#xD;
&#xD;
</xpdl2:Script>
              </xpdl2:TaskScript>
            </xpdl2:Task>
          </xpdl2:Implementation>
          <xpdl2:ExtendedAttributes>
            <xpdl2:ExtendedAttribute Name=""/>
          </xpdl2:ExtendedAttributes>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="64.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="164.0">
              <xpdl2:Coordinates XCoordinate="508.0" YCoordinate="615.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
          <xpdl2:Extensions/>
          <xpdExt:ActivityResourcePatterns>
            <xpdExt:AllocationStrategy xpdExt:Strategy="SYSTEM_DETERMINED"/>
          </xpdExt:ActivityResourcePatterns>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMp6MWnNEeCvfK09LgLLfw" xpdExt:Visibility="Private" iProcessExt:StepIndex="25">
          <xpdl2:Event>
            <xpdl2:IntermediateEvent Target="_pMp6MmnNEeCvfK09LgLLfw" Trigger="Error">
              <xpdl2:ResultError ErrorCode=""/>
            </xpdl2:IntermediateEvent>
          </xpdl2:Event>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="31.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="31.0">
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:NodeGraphicsInfo>
            <xpdl2:NodeGraphicsInfo ToolId="XPD.BorderEventPosition">
              <xpdl2:Coordinates XCoordinate="19.383259911894275" YCoordinate="0.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMp6MmnNEeCvfK09LgLLfw" Name="TextScript" xpdExt:Visibility="Private" xpdExt:DisplayName="Text Script" iProcessExt:StepIndex="26">
          <xpdl2:Implementation>
            <xpdl2:Task>
              <xpdl2:TaskScript>
                <xpdl2:Script ScriptGrammar="JavaScript">/////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Enter:TextScript (dst = '&quot;+dst+&quot;' type)&quot;;&#xD;
&#xD;
/////////////////////////////////////////////////////////////&#xD;
// Process the dst parameter&#xD;
if (dst == &quot;attach&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Text Script&quot;;&#xD;
} else if (dst == &quot;bool&quot;) {&#xD;
	result += &quot;ERROR:dst='&quot; + dst + &quot;' not supported in Text Script&quot;;&#xD;
} else if (dst == &quot;date&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Text Script&quot;;&#xD;
} else if (dst == &quot;time&quot;) {&#xD;
	result += &quot;ERROR:dst='&quot; + dst + &quot;' not supported in Text Script&quot;;&#xD;
} else if (dst == &quot;datetime&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Text Script&quot;;&#xD;
} else if (dst == &quot;datetimetz&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Text Script&quot;;&#xD;
} else if (dst == &quot;decimalFloat&quot;) {	&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Text Script&quot;;&#xD;
} else if (dst == &quot;decimalFixed&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Text Script&quot;;&#xD;
} else if (dst == &quot;intFixed&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Text Script&quot;;&#xD;
} else if (dst == &quot;intSigned&quot;) {&#xD;
	if (src == &quot;text&quot;) { &#xD;
		 if (src2 == &quot;text&quot;) {&#xD;
			if (opCode == &quot;indexOf&quot;) {&#xD;
				dstField.integerSigned = srcField.text20.indexOf(srcField2.text20);&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.text20.indexOf(srcField2.text20);&quot;; &#xD;
			} else if (opCode == &quot;indexOf10&quot;) {&#xD;
				dstField.integerSigned = srcField.text20.indexOf(srcField2.text20, 10);&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.text20.indexOf(srcField2.text20, 10);&quot;; &#xD;
			} else if (opCode == &quot;lastIndexOf&quot;) {&#xD;
				dstField.integerSigned = srcField.text20.lastIndexOf(srcField2.text20);&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.text20.lastIndexOf(srcField2.text20);&quot;; &#xD;
			} else if (opCode == &quot;lastIndexOf10&quot;) {&#xD;
				dstField.integerSigned = srcField.text20.lastIndexOf(srcField2.text20, 10);&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.text20.lastIndexOf(srcField2.text20, 10);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Text Script&quot;;&#xD;
			}				&#xD;
		} else if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;length&quot;) {&#xD;
				dstField.integerSigned = srcField.text20.length;&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.text20.length;&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Text Script&quot;;&#xD;
			}				&#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid parameter combination: src/src2 type '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst type '&quot;+ dst + &quot;' not supported in Text Script&quot;;&#xD;
		} &#xD;
	} else {&#xD;
		result += &quot;|ERROR:Invalid src value: '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Text Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;text&quot;) {&#xD;
	if (src == &quot;text&quot;) 	&#xD;
	{ &#xD;
		if (src2 == &quot;-&quot;) {&#xD;
			if (opCode == &quot;toString&quot;) {&#xD;
				dstField.text20 = srcField.text20;&#xD;
				result += &quot;|INFO:dstField.text20 = srcField.text20;&quot;; &#xD;
			} else if (opCode == &quot;toLower&quot;) {&#xD;
				dstField.text20 = srcField.text20.toLowerCase();&#xD;
				result += &quot;|INFO:dstField.text20 = srcField.text20.toLowerCase();&quot;; &#xD;
			} else if (opCode == &quot;toUpper&quot;) {&#xD;
				dstField.text20 = srcField.text20.toUpperCase();&#xD;
				result += &quot;|INFO:dstField.text20 = srcField.text20.toUpperCase();&quot;; &#xD;
//			} else if (opCode == &quot;valueOf&quot;) {&#xD;
//				dstField.text20 = srcField.text20.valueOf();&#xD;
//				result += &quot;|INFO:dstField.text20 = srcField.text20.valueOf();&quot;; &#xD;
//			} else if (opCode == &quot;split&quot;) {&#xD;
//				dstField.text20 = srcField.text20.split();&#xD;
//				result += &quot;|INFO:dstField.text20 = srcField.text20.split();&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Text Script&quot;;&#xD;
			}&#xD;
		} else if (src2 == &quot;text&quot;) {&#xD;
			if (opCode == &quot;replace&quot;) {&#xD;
				dstField.text20 = srcField.text20.replace(srcField2.text20, &quot;FOUND&quot;);&#xD;
				result += &quot;|INFO:dstField.text20 = srcField.text20.replace(srcField2.text20, \&quot;FOUND\&quot;);&quot;; &#xD;
//			} else if (opCode == &quot;split&quot;) {&#xD;
//				var arrResult = srcField.text20.split(srcField2.text20); &#xD;
//				&#xD;
//				dstField.text20 = arrResult;&#xD;
//				result += &quot;|INFO:var arrResult = srcField.text20.split(srcField2.text20);dstField.text20 = arrResult;&quot;; &#xD;
//			} else if (opCode == &quot;split3&quot;) {&#xD;
//				var arrResult = srcField.text20.split(srcField2.text20,3); &#xD;
//				&#xD;
//				dstField.text20 = arrResult;&#xD;
//				result += &quot;|INFO:var arrResult = srcField.text20.split(srcField2.text20,3);dstField.text20 = arrResult;&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Text Script&quot;;&#xD;
			}&#xD;
		} else if (src2 == &quot;intSigned&quot;) {&#xD;
			if (opCode == &quot;charAt&quot;) {&#xD;
				dstField.text20 = &quot;{&quot;+srcField.text20.charAt(srcField2.integerSigned)+&quot;}&quot;;&#xD;
				result += &quot;|INFO:dstField.text20 = srcField.text20.charAt(srcField2.integerSigned);&quot;; 		&#xD;
			} else if (opCode == &quot;substr&quot;) {&#xD;
				dstField.text20 = &quot;{&quot;+srcField.text20.substr(srcField2.integerSigned)+&quot;}&quot;;&#xD;
				result += &quot;|INFO:dstField.text20 = srcField.text20.substr(srcField2.integerSigned);&quot;; 		&#xD;
			} else if (opCode == &quot;substr5&quot;) {&#xD;
				dstField.text20 = &quot;{&quot;+srcField.text20.substr(srcField2.integerSigned, 5)+&quot;}&quot;;&#xD;
				result += &quot;|INFO:dstField.text20 = srcField.text20.substr(srcField2.integerSigned, 5);&quot;; 		&#xD;
			} else if (opCode == &quot;substring&quot;) {&#xD;
				dstField.text20 = &quot;{&quot;+srcField.text20.substring(srcField2.integerSigned)+&quot;}&quot;;&#xD;
				result += &quot;|INFO:dstField.text20 = srcField.text20.substring(srcField2.integerSigned);&quot;; 		&#xD;
			} else if (opCode == &quot;substring10&quot;) {&#xD;
				dstField.text20 = &quot;{&quot;+srcField.text20.substring(srcField2.integerSigned, 10)+&quot;}&quot;;&#xD;
				result += &quot;|INFO:dstField.text20 = srcField.text20.substring(srcField2.integerSigned, 10);&quot;; 		&#xD;
			} else if (opCode == &quot;slice&quot;) {&#xD;
				dstField.text20 = &quot;{&quot;+srcField.text20.slice(srcField2.integerSigned)+&quot;}&quot;;&#xD;
				result += &quot;|INFO:dstField.text20 = srcField.text20.slice(srcField2.integerSigned);&quot;; 		&#xD;
			} else if (opCode == &quot;slice10&quot;) {&#xD;
				dstField.text20 = &quot;{&quot;+srcField.text20.slice(srcField2.integerSigned, 10)+&quot;}&quot;;&#xD;
				result += &quot;|INFO:dstField.text20 = srcField.text20.slice(srcField2.integerSigned, 10);&quot;; 		&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Text Script&quot;;&#xD;
			}		} else {&#xD;
			result += &quot;|ERROR:Invalid parameter combination: src/src2 type '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst type '&quot;+ dst + &quot;' not supported in Text Script&quot;;&#xD;
		}&#xD;
	} else {&#xD;
			result += &quot;|ERROR:Invalid parameter combination: src type '&quot; +src+ &quot;' with dst type '&quot;+ dst + &quot;' not supported in Text Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;duration&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Text Script&quot;;&#xD;
} else if (dst == &quot;id&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Text Script&quot;;&#xD;
} else if (dst == &quot;uri&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Text Script&quot;;&#xD;
} else {&#xD;
	result += &quot;|ERROR:Invalid dst value: '&quot; + dst + &quot;'&quot;;&#xD;
} &#xD;
&#xD;
/////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Leave:Text Script&quot;;&#xD;
&#xD;
</xpdl2:Script>
              </xpdl2:TaskScript>
            </xpdl2:Task>
          </xpdl2:Implementation>
          <xpdl2:ExtendedAttributes>
            <xpdl2:ExtendedAttribute Name=""/>
          </xpdl2:ExtendedAttributes>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="64.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="163.0">
              <xpdl2:Coordinates XCoordinate="437.0" YCoordinate="775.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
          <xpdl2:Extensions/>
          <xpdExt:ActivityResourcePatterns>
            <xpdExt:AllocationStrategy xpdExt:Strategy="SYSTEM_DETERMINED"/>
          </xpdExt:ActivityResourcePatterns>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMp6M2nNEeCvfK09LgLLfw" Name="ResultScript" xpdExt:Visibility="Private" xpdExt:DisplayName="Result Script" iProcessExt:StepIndex="27">
          <xpdl2:Implementation>
            <xpdl2:Task>
              <xpdl2:TaskScript>
                <xpdl2:Script ScriptGrammar="JavaScript">/////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Enter:Result Script&quot;;&#xD;
&#xD;
////////////////////////////////////////////////////////&#xD;
// Process the dst parameter&#xD;
//actualValue = &quot;&lt;Not Set!>&quot;;&#xD;
actualValue = &quot;Rhubarb!&quot;;&#xD;
if (actualValue == null) {&#xD;
	result += &quot;|ERROR:actualValue null after being initialised!&quot;;&#xD;
}&#xD;
&#xD;
if (dst == &quot;attach&quot;)			  {												result += &quot;|ERROR:dst='attach' not supported yet&quot;;} &#xD;
else if (dst == &quot;bool&quot;)			  {actualValue = dstField.bool;					result += &quot;|INFO:actualValue = dstField.bool;&quot;;}&#xD;
else if (dst == &quot;date&quot;)			  {actualValue = dstField.date;					result += &quot;|INFO:actualValue = dstField.date;&quot;;}&#xD;
else if (dst == &quot;time&quot;)			  {actualValue = dstField.time;					result += &quot;|INFO:actualValue = dstField.time;&quot;;}&#xD;
else if (dst == &quot;datetime&quot;)		  {actualValue = dstField.datetime;				result += &quot;|INFO:actualValue = dstField.datetime;&quot;;}&#xD;
else if (dst == &quot;datetimetz&quot;)	  {actualValue = dstField.datetimetz;			result += &quot;|INFO:actualValue = dstField.datetimetz;&quot;;}	&#xD;
else if (dst == &quot;decimalFloat&quot;)   {actualValue = dstField.decimalFloat;			result += &quot;|INFO:actualValue = dstField.decimalFloat;&quot;;}&#xD;
else if (dst == &quot;decimalFixed&quot;)	  {actualValue = dstField.decimalFixed8Dot4;	result += &quot;|INFO:actualValue = dstField.decimalFixed8Dot4;&quot;;}&#xD;
else if (dst == &quot;decimalFixedBig&quot;){actualValue = dstField.decimalFixed80dot70;	result += &quot;|INFO:actualValue = dstField.decimalFixed80dot70;&quot;;}&#xD;
else if (dst == &quot;intSigned&quot;)	  {actualValue = dstField.integerSigned;		result += &quot;|INFO:actualValue = dstField.integerSigned;&quot;;}&#xD;
else if (dst == &quot;intFixed&quot;)		  {actualValue = dstField.integerFixed5;		result += &quot;|INFO:actualValue = dstField.integerFixed5;&quot;;}&#xD;
else if (dst == &quot;text&quot;)			  {actualValue = dstField.text20;				result += &quot;|INFO:actualValue = dstField.text20;&quot;;}&#xD;
else if (dst == &quot;duration&quot;)		  {actualValue = dstField.duration;				result += &quot;|INFO:actualValue = dstField.duration;&quot;;}&#xD;
else if (dst == &quot;id&quot;)			  {actualValue = dstField.id;					result += &quot;|INFO:actualValue = dstField.id;&quot;;}&#xD;
else if (dst == &quot;uri&quot;)			  {actualValue = dstField.uri;					result += &quot;|INFO:actualValue = dstField.uri;&quot;;}&#xD;
else							  {												result += &quot;|ERROR:Invalid dst value: '&quot; + dst + &quot;'&quot;;}&#xD;
&#xD;
if (actualValue == null) {&#xD;
	actualValue = &quot;NULL String&quot;;&#xD;
	result += &quot;|ERROR:actualValue is null after assignment&quot;;&#xD;
	&#xD;
}&#xD;
&#xD;
// Skip this investigation stuff for now&#xD;
if (1 == 0) {&#xD;
//	result+=&quot;|type of text field (basic text field):&quot;+typeof(text);&#xD;
//	result+=&quot;|type of BOM.text field (BOM text field):&quot;+typeof(dstField.text20);&#xD;
//	result+=&quot;|type of value field (process input parameter text field):&quot;+typeof(value);&#xD;
//	result+=&quot;|type of actualValue field (process output parameter text field):&quot;+typeof(actualValue);&#xD;
//	result+=&quot;|type of bool field (basic boolean field):&quot;+typeof(boolTemp);&#xD;
//	result+=&quot;|type of BOM.attach field:&quot;+typeof(dstField.attach);&#xD;
//	result+=&quot;|type of BOM.bool field (BOM boolean field):&quot;+typeof(dstField.bool);&#xD;
//	result+=&quot;|type of BOM.date field:&quot;+typeof(dstField.date);&#xD;
//	result+=&quot;|type of BOM.time field:&quot;+typeof(dstField.time);&#xD;
//	result+=&quot;|type of BOM.datetime field:&quot;+typeof(dstField.datetime);&#xD;
//	result+=&quot;|type of BOM.datetimetz field:&quot;+typeof(dstField.datetimetz);&#xD;
//	result+=&quot;|type of BOM.decimalFloat field:&quot;+typeof(dstField.decimalFloat);&#xD;
//	result+=&quot;|type of BOM.decimalFixed field:&quot;+typeof(dstField.decimalFixed8Dot4);&#xD;
//	result+=&quot;|type of BOM.intSigned field:&quot;+typeof(dstField.integerSigned);&#xD;
//	result+=&quot;|type of BOM.intFixed field:&quot;+typeof(dstField.integerFixed5);&#xD;
//	result+=&quot;|type of BOM.text field:&quot;+typeof(dstField.text20);&#xD;
//	result+=&quot;|type of BOM.duration field:&quot;+typeof(dstField.duration);&#xD;
//	result+=&quot;|type of BOM.id field:&quot;+typeof(dstField.id);&#xD;
//	result+=&quot;|type of BOM.uri field:&quot;+typeof(dstField.uri);&#xD;
&#xD;
	srcField.text20 = &quot;aa&quot;;&#xD;
	text = &quot;aab&quot;;&#xD;
	dstField.text20 = text.replace(&quot;b&quot;,&quot;&quot;);&#xD;
	if (dstField.text20 == null)&#xD;
	{&#xD;
		result+=&quot;|ERROR:text.replace() failed&quot;;&#xD;
		dstField.text20 = &quot;aa&quot;;&#xD;
		if (dstField.text20 == null)&#xD;
		{&#xD;
			result+=&quot;|ERROR:cannot assign dstField.text20&quot;;&#xD;
		}&#xD;
	}	&#xD;
	result+=&quot;|result of srcField.text20==dstField.text20: &quot;+(srcField.text20.toString()==dstField.text20.toString());&#xD;
	if (srcField.text20 != null &amp;&amp; dstField.text20 != null)&#xD;
	{	 &#xD;
		result+=&quot;|result of srcField.text20.toString()==dstField.text20.toString(): &quot;+(srcField.text20.toString()==dstField.text20.toString()); &#xD;
		//result+=&quot;|result of srcField.text20.valueOf()==dstField.text20.valueOf(): &quot;+(srcField.text20.valueOf()==dstField.text20.valueOf()); &#xD;
	}&#xD;
}&#xD;
&#xD;
// Found that the String() is necessary if actualValue contains a boolean!&#xD;
if (String(actualValue) == expectedValue) {&#xD;
   result+=&quot;|INFO:*** SUCCESS: Assignment gave expected result: &quot;+ expectedValue+&quot; ***&quot;;&#xD;
} else {&#xD;
	result+=&quot;|ERROR:Actual result does not match expected result: '&quot;+actualValue+&quot;' v. '&quot;+expectedValue+&quot;'&quot;;&#xD;
}&#xD;
&#xD;
/////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Leave:Result Script&quot;;&#xD;
</xpdl2:Script>
              </xpdl2:TaskScript>
            </xpdl2:Task>
          </xpdl2:Implementation>
          <xpdl2:ExtendedAttributes>
            <xpdl2:ExtendedAttribute Name=""/>
          </xpdl2:ExtendedAttributes>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="62.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="96.0">
              <xpdl2:Coordinates XCoordinate="884.0" YCoordinate="541.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
          <xpdl2:Extensions/>
          <xpdExt:ActivityResourcePatterns>
            <xpdExt:AllocationStrategy xpdExt:Strategy="SYSTEM_DETERMINED"/>
          </xpdExt:ActivityResourcePatterns>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMp6NGnNEeCvfK09LgLLfw" Name="IntegerScript" xpdExt:Visibility="Private" xpdExt:DisplayName="Integer Script" iProcessExt:StepIndex="28">
          <xpdl2:Implementation>
            <xpdl2:Task>
              <xpdl2:TaskScript>
                <xpdl2:Script ScriptGrammar="JavaScript">/////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Enter:Int Script (dst = '&quot;+dst+&quot;' type)&quot;;&#xD;
&#xD;
/////////////////////////////////////////////////////////////&#xD;
// Process the dst parameter&#xD;
if (dst == &quot;attach&quot;)&#xD;
{&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Int Script&quot;;&#xD;
} else if (dst == &quot;bool&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Int Script&quot;;&#xD;
} else if (dst == &quot;date&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Int Script&quot;;&#xD;
} else if (dst == &quot;time&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Int Script&quot;;&#xD;
} else if (dst == &quot;datetime&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Int Script&quot;;&#xD;
} else if (dst == &quot;datetimetz&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Int Script&quot;;&#xD;
} else if (dst == &quot;decimalFloat&quot;) {	&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Int Script&quot;;&#xD;
} else if (dst == &quot;decimalFixed&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Int Script&quot;;&#xD;
} else if (dst == &quot;intFixed&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Int Script&quot;;&#xD;
} else if (dst == &quot;intSigned&quot;) {&#xD;
	if (src == &quot;intSigned&quot;) { &#xD;
		if (src2 == &quot;intSigned&quot;) {&#xD;
			if (opCode == &quot;add&quot;) {&#xD;
				dstField.integerSigned = srcField.integerSigned + srcField2.integerSigned;&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.integerSigned + srcField2.integerSigned;&quot;; 		&#xD;
			} else if (opCode == &quot;divide&quot;) {&#xD;
				dstField.integerSigned = srcField.integerSigned / srcField2.integerSigned;&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.integerSigned / srcField2.integerSigned;&quot;; &#xD;
			} else if (opCode == &quot;min&quot;) {&#xD;
				dstField.integerSigned = Math.min(srcField.integerSigned, srcField2.integerSigned);&#xD;
				result += &quot;|INFO:dstField.integerSigned = Math.min(srcField.integerSigned, srcField2.integerSigned);&quot;; &#xD;
			} else if (opCode == &quot;max&quot;) {&#xD;
				dstField.integerSigned = Math.max(srcField.integerSigned, srcField2.integerSigned);&#xD;
				result += &quot;|INFO:dstField.integerSigned = Math.max(srcField.integerSigned, srcField2.integerSigned);&quot;; &#xD;
			} else if (opCode == &quot;multiply&quot;) {&#xD;
				dstField.integerSigned = srcField.integerSigned * srcField2.integerSigned;&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.integerSigned * srcField2.integerSigned;&quot;; 	&#xD;
			} else if (opCode == &quot;remainder&quot;) {&#xD;
				dstField.integerSigned = srcField.integerSigned % srcField2.integerSigned;&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.integerSigned % srcField2.integerSigned;&quot;; &#xD;
			} else if (opCode == &quot;subtract&quot;) {&#xD;
				dstField.integerSigned = srcField.integerSigned - srcField2.integerSigned;&#xD;
				result += &quot;|INFO:dstField.integerSigned = srcField.integerSigned - srcField2.integerSigned;&quot;; &#xD;
			} else if (opCode == &quot;pow&quot;) {&#xD;
				dstField.integerSigned = Math.pow(srcField.integerSigned , srcField2.integerSigned);&#xD;
				result += &quot;|INFO:dstField.integerSigned = Math.pow(srcField.integerSigned , srcField2.integerSigned);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Int Script&quot;;&#xD;
			}&#xD;
		} else {&#xD;
			if (opCode == &quot;abs&quot;) {&#xD;
				dstField.integerSigned = Math.abs(srcField.integerSigned);&#xD;
				result += &quot;|INFO:dstField.integerSigned = Math.abs(srcField.integerSigned);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in Int Script&quot;;&#xD;
			}				&#xD;
		} &#xD;
	} else {&#xD;
		result += &quot;|ERROR:Invalid src value: '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Int Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;text&quot;) {&#xD;
	if (src == &quot;intSigned&quot;) 	&#xD;
	{ &#xD;
		if (opCode == &quot;toString&quot;) {&#xD;
			dstField.text20 = srcField.integerSigned;&#xD;
			result += &quot;|INFO:dstField.text20 = srcField.integerSigned;&quot;; &#xD;
		} else {&#xD;
			result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Int Script&quot;;&#xD;
		}&#xD;
	} else {&#xD;
		result += &quot;|ERROR:Invalid src value: '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in Int Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;duration&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Int Script&quot;;&#xD;
} else if (dst == &quot;id&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Int Script&quot;;&#xD;
} else if (dst == &quot;uri&quot;) &#xD;
{&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in Int Script&quot;;&#xD;
} else {&#xD;
	result += &quot;|ERROR:Invalid dst value: '&quot; + dst + &quot;'&quot;;&#xD;
} &#xD;
&#xD;
/////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Leave:Int Script&quot;;&#xD;
&#xD;
&#xD;
</xpdl2:Script>
              </xpdl2:TaskScript>
            </xpdl2:Task>
          </xpdl2:Implementation>
          <xpdl2:ExtendedAttributes>
            <xpdl2:ExtendedAttribute Name=""/>
          </xpdl2:ExtendedAttributes>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="64.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="157.0">
              <xpdl2:Coordinates XCoordinate="579.0" YCoordinate="455.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
          <xpdl2:Extensions/>
          <xpdExt:ActivityResourcePatterns>
            <xpdExt:AllocationStrategy xpdExt:Strategy="SYSTEM_DETERMINED"/>
          </xpdExt:ActivityResourcePatterns>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMp6NWnNEeCvfK09LgLLfw" Name="ListIteratorScript" xpdExt:Visibility="Private" xpdExt:DisplayName="List &amp; Iterator Script" iProcessExt:StepIndex="29">
          <xpdl2:Implementation>
            <xpdl2:Task>
              <xpdl2:TaskScript>
                <xpdl2:Script ScriptGrammar="JavaScript">/////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Enter:list &amp; iterator Script&quot;;&#xD;
&#xD;
// the 'src' and 'src2' fields contain a ':' seperated list of commands&#xD;
// the 'value' and 'value2' fields contain a ':' seperated list of data values used by *some* commands&#xD;
// the command supported are:&#xD;
// * add - adds next value in value list to appropriate custX laptop list&#xD;
// * clear         # clears the list&#xD;
// * isempty - checks to see if the list is empty&#xD;
// * list - lists the contents of the list to text20 attribute&#xD;
// * size		   # return size of the list&#xD;
// * addAll		   # add all items from other cust to this cust&#xD;
//&#xD;
// other commands to be supported are:&#xD;
// * addIx N-value # adds to Nth position in list, value is in format: &quot;n-value&quot;&#xD;
// * contains N|new# pick Nth element from the list or create new element and check if belongs to list&#xD;
// * get N         # gets the Nth element&#xD;
// * remove N      # removes item from Nth index&#xD;
// * remObj N|new  # get Nth Object &amp; remove it, or create NEW object &amp; attempt to remove it&#xD;
// * set N-Value   # set the Nth value to a new object&#xD;
// * sublist N-M   # set the other customer to be a sublist of items N-M&#xD;
&#xD;
cust1 = com_myorg_customermodel11_Factory.createCustomer();&#xD;
cust1.name='Customer1';&#xD;
cust1.age=40;&#xD;
cust1.dateofbirth = DateTimeUtil.createDate('2001-10-26');&#xD;
result += &quot;|INFO:initialised cust1&quot;;&#xD;
&#xD;
cust2 = com_myorg_customermodel11_Factory.createCustomer();&#xD;
cust2.name='Customer2';&#xD;
cust2.age=40;&#xD;
cust2.dateofbirth = DateTimeUtil.createDate();&#xD;
result += &quot;|INFO:initialised cust2&quot;;&#xD;
&#xD;
// Check if the second parameter needs processing&#xD;
if (src2 != &quot;-&quot;)&#xD;
{&#xD;
	result += &quot;|INFO:processing src2:'&quot;+src2+&quot;'&quot;;&#xD;
&#xD;
}&#xD;
&#xD;
// process the first parameter&#xD;
if (src != &quot;-&quot;)&#xD;
{&#xD;
	result += &quot;|INFO:processing src:'&quot;+src+&quot;'&quot;;&#xD;
	var dataVal = &quot;&quot;;&#xD;
	while (src != &quot;&quot;)&#xD;
	{&#xD;
		//////////////////////////////////////////////////////////&#xD;
		// Get next command from src&#xD;
		var cmd     = &quot;&quot;;&#xD;
		var ix = src.indexOf(&quot;:&quot;);&#xD;
		if (ix > 0) {&#xD;
			cmd = src.substring(0,ix);&#xD;
			src = src.substring(ix+1,src.length);&#xD;
		}&#xD;
		else {&#xD;
			cmd = src;&#xD;
			src = &quot;&quot;;&#xD;
		}&#xD;
&#xD;
		//////////////////////////////////////////////////////////&#xD;
		// Get next data value if first iteration or we used up the previous data value on the previous loop iteration&#xD;
		if (dataVal == &quot;&quot;) {&#xD;
			var ix = value.indexOf(&quot;:&quot;);&#xD;
			if (ix > 0) {&#xD;
				dataVal = value.substring(0,ix);&#xD;
				value = value.substring(ix+1,value.length);&#xD;
			}&#xD;
			else {&#xD;
				dataVal = value;&#xD;
				value = &quot;&quot;;&#xD;
			}&#xD;
		}&#xD;
//////////////////////////////////////////////////////////////////////////////	&#xD;
// * add value      # adds next value in value list to appropriate custX laptop list&#xD;
		if (cmd == &quot;add&quot;) {&#xD;
			var laptopItem = com_myorg_customermodel11_Factory.createItem();&#xD;
			laptopItem.approximateValue=1000;&#xD;
			laptopItem.modelID = 'T400';&#xD;
			laptopItem.description = dataVal;&#xD;
			dataVal = &quot;&quot;;	// Flag variable as used for next iteration&#xD;
			cust1.items.add(laptopItem);&#xD;
			result += &quot;|INFO:add:'&quot;+laptopItem.description+&quot;'&quot;;	&#xD;
		}&#xD;
&#xD;
//////////////////////////////////////////////////////////////////////////////	&#xD;
// * addAll		   # add all items from other cust to this cust&#xD;
		else if (cmd == &quot;addAll&quot;) {&#xD;
			cust1.items.addAll(cust2.items);&#xD;
			result += &quot;|INFO:addAll(cust2.items)&quot;;	&#xD;
		}&#xD;
&#xD;
//////////////////////////////////////////////////////////////////////////////	&#xD;
// * addIx N-value # adds to Nth position in list, value is in format: &quot;n-value&quot;&#xD;
		else if (cmd == &quot;addIx&quot;) {&#xD;
			var laptop = com_myorg_customermodel11_Factory.createItem();&#xD;
			laptop.approximateValue=1000;&#xD;
			laptop.modelID = 'T400';&#xD;
&#xD;
			// Using indexOf() and substring() instead of split()&#xD;
			var ix = dataVal.indexOf(&quot;=&quot;);&#xD;
			if (ix > 0) {&#xD;
				var index = Number(dataVal.substring(0,ix));&#xD;
				laptop.description = dataVal.substring(ix+1,dataVal.length);&#xD;
				cust1.items.add(index,laptop);&#xD;
				dstField.text20 = laptop.description;&#xD;
				result += &quot;|INFO:cust1.items.add(&quot;+index+&quot;,laptop);&quot;;&#xD;
			} &#xD;
			else {&#xD;
				dstField.text20 = &quot;Invalid dataVal&quot;;&#xD;
				result += &quot;|ERROR:Invalid dataVal for addIx. [&quot;+dataVal+&quot;]&quot;;&#xD;
			}&#xD;
			dataVal = &quot;&quot;;&#xD;
		}&#xD;
&#xD;
//////////////////////////////////////////////////////////////////////////////	&#xD;
// * clear         # clears the list&#xD;
		else if (cmd == &quot;clear&quot;) {&#xD;
			cust1.items.clear();&#xD;
			result += &quot;|INFO:clear()&quot;;&#xD;
		}&#xD;
&#xD;
//////////////////////////////////////////////////////////////////////////////	&#xD;
// * contains N|new     # pick Nth element from the list or create new element and check if belongs to list&#xD;
		else if (cmd == &quot;contains&quot;) {&#xD;
			var laptop = com_myorg_customermodel11_Factory.createItem();&#xD;
			var item = dataVal;&#xD;
			dataVal = &quot;&quot;;	// Flag variable as used for next iteration&#xD;
			if (item == &quot;new&quot;)&#xD;
			{&#xD;
				// check to see if items contains an item NOT in the list&#xD;
				laptop.approximateValue=1000;&#xD;
				laptop.modelID = 'T400';&#xD;
				laptop.description = &quot;New Powerful Laptop&quot;;&#xD;
			}&#xD;
			else&#xD;
			{&#xD;
				// check to see if items contains an item in the list&#xD;
				// var laptop2 = cust1.items.get(item);&#xD;
				laptop = cust1.items.get(Number(item));&#xD;
			}&#xD;
			dstField.bool = cust1.items.contains(laptop);					&#xD;
			result += &quot;|INFO:dstField.bool = cust1.items.contains(laptop); [&quot;+dstField.bool+&quot;]&quot;;&#xD;
		}&#xD;
&#xD;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////	&#xD;
// Investigation into Javascript Arrays &amp; compatibility with BOM textarray fields and Process text array fields&#xD;
//////////////////////////////////////////////////////////////////////////////////	&#xD;
////// * fruit - test static array initialisation&#xD;
////		else if (cmd == &quot;fruit&quot;) {&#xD;
////			var fruits = [&quot;Ban&quot;, &quot;Ora&quot;, &quot;App&quot;, &quot;Man&quot;];&#xD;
////			result += &quot;|INFO:fruits.length=&quot;+fruits.length;	&#xD;
////			dstField.text20 = fruits.reverse();&#xD;
////			result += &quot;|INFO:fruits:&quot;+fruits+&quot;, and revsersed:&quot;+fruits.reverse();	&#xD;
////		}&#xD;
////		&#xD;
//////////////////////////////////////////////////////////////////////////////////	&#xD;
////// * fruitProc - test conversion java Array --> Process array field&#xD;
////		else if (cmd == &quot;fruitProc&quot;) {&#xD;
////			var fruits = [&quot;Ban&quot;, &quot;Ora&quot;, &quot;App&quot;, &quot;Man&quot;];&#xD;
////			result += &quot;|INFO:fruits.length=&quot;+fruits.length;	&#xD;
////			textArray = fruits;&#xD;
////			result += &quot;|INFO:textArray.size()=&quot;+textArray.size();	&#xD;
////		}&#xD;
////		&#xD;
//////////////////////////////////////////////////////////////////////////////////	&#xD;
////// * fruitProc - test conversion java Array --> Process array field&#xD;
////		else if (cmd == &quot;fruitBom&quot;) {&#xD;
////			var fruits = [&quot;Ban&quot;, &quot;Ora&quot;, &quot;App&quot;, &quot;Man&quot;];&#xD;
////			result += &quot;|INFO:fruits.length=&quot;+fruits.length;	&#xD;
////			dstField.textArray = fruits;&#xD;
////			result += &quot;|INFO:dstField.textArray.size()=&quot;+dstField.textArray.size();	&#xD;
////		}&#xD;
////		&#xD;
//////////////////////////////////////////////////////////////////////////////////	&#xD;
////// * procFruit - test assignment of javascript array from process array&#xD;
////		else if (cmd == &quot;procFruit&quot;) {&#xD;
////			var fruits = [&quot;Ban&quot;, &quot;Ora&quot;, &quot;App&quot;, &quot;Man&quot;];&#xD;
////			var ii;&#xD;
////			for (ii = 0; ii &lt; fruits.length; ii++)&#xD;
////			{&#xD;
////				textArray.add(fruits[ii]);&#xD;
////			}&#xD;
////			result += &quot;|INFO:fruits.length=&quot;+fruits.length;	&#xD;
////			result += &quot;|INFO:textArray.size()=&quot;+textArray.size();	&#xD;
////			var fruits2 = textArray;&#xD;
////			dstField.text20 = fruits2;&#xD;
////			result += &quot;|INFO:fruits2:&quot;+fruits2+&quot;, and revsersed:&quot;+fruits2.reverse();	&#xD;
////		}&#xD;
////&#xD;
//////////////////////////////////////////////////////////////////////////////////	&#xD;
////// * bomFruit - test assignment of javascript array from Bom array&#xD;
////		else if (cmd == &quot;bomFruit&quot;) {&#xD;
////			var fruits = [&quot;Ban&quot;, &quot;Ora&quot;, &quot;App&quot;, &quot;Man&quot;];&#xD;
////			var ii;&#xD;
////			for (ii = 0; ii &lt; fruits.length; ii++)&#xD;
////			{&#xD;
////				srcField.textArray.add(fruits[ii]);&#xD;
////			}&#xD;
////			result += &quot;|INFO:fruits.length=&quot;+fruits.length;	&#xD;
////			result += &quot;|INFO:srcField.textArray.size()=&quot;+srcField.textArray.size();	&#xD;
////			var fruits2 = srcField.textArray;&#xD;
////			dstField.text20 = fruits2;&#xD;
////			result += &quot;|INFO:fruits2:&quot;+fruits2+&quot;, and revsersed:&quot;+fruits2.reverse();	&#xD;
////		}&#xD;
&#xD;
//////////////////////////////////////////////////////////////////////////////	&#xD;
// * BOM To Process - test assignment of javascript array from Bom array&#xD;
		else if (cmd == &quot;bomProcess&quot;) {&#xD;
			srcField.textArray.add(&quot;App&quot;);&#xD;
			srcField.textArray.add(&quot;Ban&quot;);&#xD;
			srcField.textArray.add(&quot;Man&quot;);&#xD;
			srcField.textArray.add(&quot;Ora&quot;);&#xD;
&#xD;
			textArray = srcField.textArray;&#xD;
			&#xD;
			dstField.text20 = textArray.get(0) + &quot;+&quot; +  textArray.get(1) + &quot;+&quot; +  textArray.get(2) + &quot;+&quot; +  textArray.get(3);&#xD;
			result += &quot;|INFO:bomProcess: textArray = srcField.textArray; [&quot;+dstField.text20+&quot;]&quot;;	&#xD;
		}&#xD;
		&#xD;
//////////////////////////////////////////////////////////////////////////////	&#xD;
// * process to BOM - test assignment of BOM array from javascript array&#xD;
//		else if (cmd == &quot;processBom&quot;) {&#xD;
//			textArray.add(&quot;App&quot;);&#xD;
//			textArray.add(&quot;Ban&quot;);&#xD;
//			textArray.add(&quot;Man&quot;);&#xD;
//			textArray.add(&quot;Ora&quot;);&#xD;
//&#xD;
//			// Expect error on this line:&#xD;
//			srcField.textArray = textArray;&#xD;
//			&#xD;
//			dstField.text20 = srcField.textArray.get(0) + &quot;+&quot; +  srcField.textArray.get(1) + &quot;+&quot; +  srcField.textArray.get(2) + &quot;+&quot; +  srcField.textArray.get(3);&#xD;
//			result += &quot;|INFO:bomProcess: textArray = srcField.textArray; [&quot;+dstField.text20+&quot;]&quot;;	&#xD;
//		}&#xD;
		&#xD;
//////////////////////////////////////////////////////////////////////////////	&#xD;
// * get N         # gets the Nth element&#xD;
		else if (cmd == &quot;get&quot;) {&#xD;
			var item = Number(dataVal);&#xD;
			dataVal = &quot;&quot;;	// Flag variable as used for next iteration&#xD;
			var laptop = cust1.items.get(item);			&#xD;
			dstField.text20 = laptop.description;			&#xD;
			result += &quot;|INFO:var laptop = cust1.get(&quot;+item+&quot;);dstField.text20 = laptop.description; [&quot;+dstField.text20+&quot;]&quot;;&#xD;
		}&#xD;
		&#xD;
//////////////////////////////////////////////////////////////////////////////	&#xD;
// * isempty      #checks to see if the list is empty&#xD;
		else if (cmd == &quot;isempty&quot;) {&#xD;
			dstField.bool = cust1.items.isEmpty();&#xD;
			result += &quot;|INFO:isempty:&quot;+dstField.bool;	&#xD;
		}&#xD;
&#xD;
//////////////////////////////////////////////////////////////////////////////	&#xD;
// * list      # lists the contents of the list to text20 attribute&#xD;
		else if (cmd == &quot;list&quot;) {&#xD;
			var iter = cust1.items.listIterator();&#xD;
			dstField.text20 = &quot;!&quot;;&#xD;
			while (iter.hasNext()) {&#xD;
				var lapItem = iter.next();&#xD;
				dstField.text20 += lapItem.description + '!';&#xD;
			}&#xD;
			result += &quot;|INFO:list:'&quot;+dstField.text20+&quot;'&quot;;	&#xD;
		}&#xD;
&#xD;
//////////////////////////////////////////////////////////////////////////////	&#xD;
// * remove N      # removes item from Nth index&#xD;
		else if (cmd == &quot;remove&quot;) {&#xD;
			var laptop = cust1.items.remove(Number(dataVal));&#xD;
			dataVal = &quot;&quot;;	// Flag variable as used for next iteration&#xD;
			dstField.text20 = laptop.description;			&#xD;
			result += &quot;|INFO:var laptop = cust1.items.remove(Number(dataVal));dstField.text20 = laptop.description;; [&quot;+dstField.text20+&quot;]&quot;;&#xD;
		}&#xD;
		&#xD;
&#xD;
//////////////////////////////////////////////////////////////////////////////	&#xD;
// * remObj N|new  # get Nth Object &amp; remove it, or create NEW object &amp; attempt to remove it&#xD;
		else if (cmd == &quot;remObj&quot;) {&#xD;
			var laptop = com_myorg_customermodel11_Factory.createItem();&#xD;
			var item = dataVal;&#xD;
			dataVal = &quot;&quot;;	// Flag variable as used for next iteration&#xD;
			if (item == &quot;new&quot;)&#xD;
			{&#xD;
				// Test attempting to remove an item not in the list&#xD;
				laptop.approximateValue=1000;&#xD;
				laptop.modelID = 'T400';&#xD;
				laptop.description = &quot;New Powerful Laptop&quot;;&#xD;
			}&#xD;
			else&#xD;
			{&#xD;
				// Test removing an item that is in the list&#xD;
				laptop = cust1.items.get(Number(item));&#xD;
			}&#xD;
			dstField.bool = cust1.items.remove(laptop);					&#xD;
			result += &quot;|INFO:dstField.bool = cust1.items.remove(laptop); [&quot;+dstField.bool+&quot;]&quot;;&#xD;
		}&#xD;
&#xD;
&#xD;
//////////////////////////////////////////////////////////////////////////////	&#xD;
// * set N=Value   # set the Nth value to a new object&#xD;
		else if (cmd == &quot;set&quot;) {&#xD;
			// // Method Using split()&#xD;
			// var range = data[dataIx++].split(&quot;-&quot;);&#xD;
			// var index = range[0];&#xD;
			// var descr = range[1];&#xD;
&#xD;
			var laptop = com_myorg_customermodel11_Factory.createItem();&#xD;
			laptop.approximateValue=1000;&#xD;
			laptop.modelID = 'T400';&#xD;
&#xD;
			// Using indexOf() and substring() instead of split()&#xD;
			var ix = dataVal.indexOf(&quot;=&quot;);&#xD;
			if (ix > 0) {&#xD;
				var index = Number(dataVal.substring(0,ix));&#xD;
				var descr = dataVal.substring(ix+1,dataVal.length);&#xD;
				laptop.description = descr;&#xD;
				var old_laptop = cust1.items.set(index,laptop);&#xD;
				dstField.text20 = old_laptop.description;&#xD;
				result += &quot;|INFO:var old_laptop = cust1.items.set(index, laptop);dstField.text20 = old_laptop.description; [&quot;+dstField.text20+&quot;]&quot;;&#xD;
			} &#xD;
			else {&#xD;
				result += &quot;|ERROR:Invalid dataVal for sublist. [&quot;+dataVal+&quot;]&quot;;&#xD;
			}&#xD;
			dataVal = &quot;&quot;;&#xD;
		}&#xD;
&#xD;
//////////////////////////////////////////////////////////////////////////////	&#xD;
// * size		   # return size of the list&#xD;
		else if (cmd == &quot;size&quot;) {&#xD;
			dstField.integerSigned = cust1.items.size();&#xD;
			result += &quot;|INFO:dstField.integerSigned = cust1.items.size(); [&quot;+dstField.integerSigned+&quot;]&quot;;&#xD;
		}&#xD;
&#xD;
//////////////////////////////////////////////////////////////////////////////	&#xD;
// * sublist N=M   # set the other customer to be a sublist of items N-M&#xD;
		else if (cmd == &quot;sublist&quot;) {&#xD;
			// // Method Using split()&#xD;
			// var range = data[dataIx++].split(&quot;-&quot;);&#xD;
			// cust2.items = cust1.items.subList(range[0],range[1]);&#xD;
			// result += &quot;|INFO:cust2.items = cust1.items.subList(range[0],range[1]);&quot;;&#xD;
&#xD;
			// Using indexOf() and substring()&#xD;
			var ix = dataVal.indexOf(&quot;=&quot;);&#xD;
			if (ix > 0) {&#xD;
				var start = Number(dataVal.substring(0,ix));&#xD;
				var end = Number(dataVal.substring(ix+1,dataVal.length));&#xD;
				&#xD;
				// There is no &quot;setter&quot; for items, so cannot assign &quot;items&quot;:&#xD;
				 		// cust2.items = cust1.items.subList(start, end);&#xD;
				// instead call clear() and addAll() methods to do the same job! ...&#xD;
				cust2.items.clear();&#xD;
				cust2.items.addAll(cust1.items.subList(start, end));&#xD;
				&#xD;
				&#xD;
				result += &quot;|INFO:cust2.items = cust1.items.subList(&quot;+start+&quot;, &quot;+end+&quot;);&quot;;&#xD;
			}&#xD;
			else {&#xD;
				result += &quot;|ERROR:Invalid dataVal for sublist. [&quot;+dataVal+&quot;]&quot;;&#xD;
			}&#xD;
			dataVal = &quot;&quot;;&#xD;
		}&#xD;
		&#xD;
//////////////////////////////////////////////////////////////////////////////	&#xD;
// * ListIterator test - push - returns integerSigned - index of new item&#xD;
		else if (cmd == &quot;push&quot;) {&#xD;
			var laptop = com_myorg_customermodel11_Factory.createItem();&#xD;
			laptop.approximateValue=1000;&#xD;
			laptop.modelID = 'T400';&#xD;
			laptop.description = dataVal;&#xD;
			dataVal = &quot;&quot;;	// Flag variable as used for next iteration&#xD;
		&#xD;
			// skip to end of list&#xD;
			var iter = cust1.items.listIterator();&#xD;
			while (iter.hasNext()) {&#xD;
				iter.next();&#xD;
			}&#xD;
			iter.add(laptop);			&#xD;
			dstField.integerSigned = iter.previousIndex();&#xD;
			result += &quot;|INFO:(push)dstField.integerSigned = iter.previousIndex(); [&quot;+dstField.integerSigned+&quot;]&quot;;&#xD;
		}&#xD;
		&#xD;
//////////////////////////////////////////////////////////////////////////////	&#xD;
// * ListIterator test - pop - returns text20 - description of popped item&#xD;
		else if (cmd == &quot;pop&quot;) {&#xD;
			// skip to end of list&#xD;
			var iter = cust1.items.listIterator();&#xD;
			while (iter.hasNext()) {&#xD;
				iter.next();&#xD;
			}&#xD;
			if (iter.hasPrevious())&#xD;
			{&#xD;
				var item = iter.previous();&#xD;
				iter.remove();&#xD;
				dstField.text20 = item.description;&#xD;
			}&#xD;
			else {&#xD;
				dstField.text20 = &quot;Stack underflow!&quot;;&#xD;
			}&#xD;
			result += &quot;|INFO:(pop)dstField.text20: &quot;+dstField.text20;&#xD;
		}&#xD;
		&#xD;
//////////////////////////////////////////////////////////////////////////////	&#xD;
// * ListIterator test - pop - returns text20 - index of changed item or error&#xD;
		else if (cmd == &quot;popPush&quot;) {&#xD;
			var laptop = com_myorg_customermodel11_Factory.createItem();&#xD;
			laptop.approximateValue=1000;&#xD;
			laptop.modelID = 'T400';&#xD;
			laptop.description = dataVal;&#xD;
			dataVal = &quot;&quot;;	// Flag variable as used for next iteration&#xD;
&#xD;
			// skip to end of list&#xD;
			var iter = cust1.items.listIterator();&#xD;
			while (iter.hasNext()) {&#xD;
				iter.next();&#xD;
			}&#xD;
			if (iter.nextIndex() == 0)&#xD;
			{&#xD;
				dstField.text20 = &quot;Stack underflow!&quot;;&#xD;
			}&#xD;
			else {&#xD;
				iter.set(laptop);&#xD;
				dstField.text20 = iter.previousIndex();&#xD;
			}&#xD;
			result += &quot;|INFO:(popPush)dstField.text20: &quot;+dstField.text20;&#xD;
		}&#xD;
		&#xD;
		else {&#xD;
			result += &quot;|ERROR:Invalid cmd value found:'&quot;+cmd+&quot;'&quot;;&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
/////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Leave:list &amp; iterator Script&quot;;&#xD;
&#xD;
&#xD;
</xpdl2:Script>
              </xpdl2:TaskScript>
            </xpdl2:Task>
          </xpdl2:Implementation>
          <xpdl2:ExtendedAttributes>
            <xpdl2:ExtendedAttribute Name=""/>
          </xpdl2:ExtendedAttributes>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="64.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="143.0">
              <xpdl2:Coordinates XCoordinate="373.0" YCoordinate="935.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
          <xpdl2:Extensions/>
          <xpdExt:ActivityResourcePatterns>
            <xpdExt:AllocationStrategy xpdExt:Strategy="SYSTEM_DETERMINED"/>
          </xpdExt:ActivityResourcePatterns>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMp6NmnNEeCvfK09LgLLfw" xpdExt:Visibility="Private" iProcessExt:StepIndex="30">
          <xpdl2:Event>
            <xpdl2:IntermediateEvent Target="_pMqhMGnNEeCvfK09LgLLfw" Trigger="Error">
              <xpdl2:ResultError ErrorCode=""/>
            </xpdl2:IntermediateEvent>
          </xpdl2:Event>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="31.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="31.0">
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:NodeGraphicsInfo>
            <xpdl2:NodeGraphicsInfo ToolId="XPD.BorderEventPosition">
              <xpdl2:Coordinates XCoordinate="20.045045045045047" YCoordinate="0.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMqhMGnNEeCvfK09LgLLfw" Name="BigIntScript" xpdExt:Visibility="Private" xpdExt:DisplayName="BigInt Script" iProcessExt:StepIndex="31">
          <xpdl2:Implementation>
            <xpdl2:Task>
              <xpdl2:TaskScript>
                <xpdl2:Script ScriptGrammar="JavaScript">////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Enter:BigInt Script (dst = '&quot;+dst+&quot;' type)&quot;;&#xD;
&#xD;
/////////////////////////////////////////////////////////////&#xD;
// Process the dst parameter&#xD;
if (dst == &quot;attach&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in BigInt Script&quot;;&#xD;
} else if (dst == &quot;bool&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in BigInt Script&quot;;&#xD;
} else if (dst == &quot;date&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in BigInt Script&quot;;&#xD;
} else if (dst == &quot;time&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in BigInt Script&quot;;&#xD;
} else if (dst == &quot;datetime&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in BigInt Script&quot;;&#xD;
} else if (dst == &quot;datetimetz&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in BigInt Script&quot;;&#xD;
} else if (dst == &quot;decimalFloat&quot;) {	&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in BigInt Script&quot;;&#xD;
} else if (dst == &quot;decimalFixed&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in BigInt Script&quot;;&#xD;
} else if (dst == &quot;intSigned&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in BigInt Script&quot;;&#xD;
} else if (dst == &quot;intFixed&quot;) {&#xD;
	if (src == &quot;intFixed&quot;) { &#xD;
		if (src2 == &quot;intFixed&quot;) {&#xD;
			if (opCode == &quot;add&quot;) {&#xD;
				dstField.integerFixed5 = srcField.integerFixed5.add(srcField2.integerFixed5);&#xD;
				result += &quot;|INFO:dstField.integerFixed5 = srcField.integerFixed5.add(srcField2.integerFixed5);&quot;; 		&#xD;
			} else if (opCode == &quot;divide&quot;) {&#xD;
				dstField.integerFixed5 = srcField.integerFixed5.divide(srcField2.integerFixed5);&#xD;
				result += &quot;|INFO:dstField.integerFixed5 = srcField.integerFixed5.divide(srcField2.integerFixed5);&quot;; &#xD;
			} else if (opCode == &quot;gcd&quot;) {&#xD;
				dstField.integerFixed5 = srcField.integerFixed5.gcd(srcField2.integerFixed5);&#xD;
				result += &quot;|INFO:dstField.integerFixed5 = srcField.integerFixed5.gcd(srcField2.integerFixed5);&quot;; &#xD;
			} else if (opCode == &quot;min&quot;) {&#xD;
				dstField.integerFixed5 = srcField.integerFixed5.min(srcField2.integerFixed5);&#xD;
				result += &quot;|INFO:dstField.integerFixed5 = srcField.integerFixed5.min(srcField2.integerFixed5);&quot;; &#xD;
			} else if (opCode == &quot;max&quot;) {&#xD;
				dstField.integerFixed5 = srcField.integerFixed5.max(srcField2.integerFixed5);&#xD;
				result += &quot;|INFO:dstField.integerFixed5 = srcField.integerFixed5.max(srcField2.integerFixed5);&quot;; &#xD;
			} else if (opCode == &quot;mod&quot;) {&#xD;
				dstField.integerFixed5 = srcField.integerFixed5.mod(srcField2.integerFixed5);&#xD;
				result += &quot;|INFO:dstField.integerFixed5 = srcField.integerFixed5.mod(srcField2.integerFixed5);&quot;; &#xD;
			} else if (opCode == &quot;multiply&quot;) {&#xD;
				dstField.integerFixed5 = srcField.integerFixed5.multiply(srcField2.integerFixed5);&#xD;
				result += &quot;|INFO:dstField.integerFixed5 = srcField.integerFixed5.multiply(srcField2.integerFixed5);&quot;; 	&#xD;
			} else if (opCode == &quot;remainder&quot;) {&#xD;
				dstField.integerFixed5 = srcField.integerFixed5.remainder(srcField2.integerFixed5);&#xD;
				result += &quot;|INFO:dstField.integerFixed5 = srcField.integerFixed5.remainder(srcField2.integerFixed5);&quot;; &#xD;
			} else if (opCode == &quot;subtract&quot;) {&#xD;
				dstField.integerFixed5 = srcField.integerFixed5.subtract(srcField2.integerFixed5);&#xD;
				result += &quot;|INFO:dstField.integerFixed5 = srcField.integerFixed5.subtract(srcField2.integerFixed5);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigInt Script&quot;;&#xD;
			}&#xD;
		} else if (src2 == &quot;intSigned&quot;) {&#xD;
			if (opCode == &quot;pow&quot;) {&#xD;
				dstField.integerFixed5 = srcField.integerFixed5.pow(srcField2.integerSigned);&#xD;
				result += &quot;|INFO:dstField.integerFixed5 = srcField.integerFixed5.pow(srcField2.integerSigned);&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigInt Script&quot;;&#xD;
			}				&#xD;
		} else {&#xD;
			if (opCode == &quot;abs&quot;) {&#xD;
				dstField.integerFixed5 = srcField.integerFixed5.abs();&#xD;
				result += &quot;|INFO:dstField.integerFixed5 = srcField.integerFixed5.abs();&quot;; &#xD;
			} else if (opCode == &quot;negate&quot;) {&#xD;
				dstField.integerFixed5 = srcField.integerFixed5.negate();&#xD;
				result += &quot;|INFO:dstField.integerFixed5 = srcField.integerFixed5.negate();&quot;; 		&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src/src2 '&quot; + src+&quot;/&quot;+src2+ &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigInt Script&quot;;&#xD;
			}				&#xD;
		} &#xD;
	} else {&#xD;
		result += &quot;|ERROR:Invalid src value: '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigInt Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;text&quot;) {&#xD;
	if (src == &quot;intFixed&quot;) 	&#xD;
	{ &#xD;
		if (src2 == &quot;intSigned&quot;) {&#xD;
//			if (opCode == &quot;toStringRadix&quot;) {&#xD;
//				dstField.text20 = srcField.integerFixed5.toString(srcField2.integerSigned);&#xD;
//				result += &quot;|INFO:dstField.text20 = srcField.integerFixed5; - NOT SUPPORTED BY STUDIO&quot;; &#xD;
//			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigInt Script&quot;;&#xD;
//			}&#xD;
		} else {&#xD;
			if (opCode == &quot;toString&quot;) {&#xD;
				dstField.text20 = srcField.integerFixed5;&#xD;
				result += &quot;|INFO:dstField.text20 = srcField.integerFixed5;&quot;; &#xD;
			} else {&#xD;
				result += &quot;|ERROR:Invalid opCode: '&quot;+opCode+&quot;' for src '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigInt Script&quot;;&#xD;
			}&#xD;
		}&#xD;
	} else {&#xD;
		result += &quot;|ERROR:Invalid src value: '&quot; + src + &quot;' with dst value '&quot;+ dst + &quot;' not supported in BigInt Script&quot;;&#xD;
	}&#xD;
} else if (dst == &quot;duration&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in BigInt Script&quot;;&#xD;
} else if (dst == &quot;id&quot;) {&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in BigInt Script&quot;;&#xD;
} else if (dst == &quot;uri&quot;) &#xD;
{&#xD;
	result += &quot;|ERROR:dst='&quot; + dst + &quot;' not supported in BigInt Script&quot;;&#xD;
} else {&#xD;
	result += &quot;|ERROR:Invalid dst value: '&quot; + dst + &quot;'&quot;;&#xD;
} &#xD;
&#xD;
/////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Leave:BigInt Script&quot;;&#xD;
</xpdl2:Script>
              </xpdl2:TaskScript>
            </xpdl2:Task>
          </xpdl2:Implementation>
          <xpdl2:ExtendedAttributes>
            <xpdl2:ExtendedAttribute Name=""/>
          </xpdl2:ExtendedAttributes>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="64.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="158.0">
              <xpdl2:Coordinates XCoordinate="612.0" YCoordinate="375.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
          <xpdl2:Extensions/>
          <xpdExt:ActivityResourcePatterns>
            <xpdExt:AllocationStrategy xpdExt:Strategy="SYSTEM_DETERMINED"/>
          </xpdExt:ActivityResourcePatterns>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMqhMWnNEeCvfK09LgLLfw" Name="CaptureError" IsATransaction="false" xpdExt:Visibility="Private" xpdExt:RequireNewTransaction="false" xpdExt:DisplayName="CaptureError" iProcessExt:StepIndex="32">
          <xpdl2:Implementation>
            <xpdl2:Task>
              <xpdl2:TaskScript>
                <xpdl2:Script ScriptGrammar="JavaScript">if (result == null)&#xD;
{&#xD;
	result = &quot;|ERROR:CATCH ERROR EVENT: Caught Error&quot;;&#xD;
}&#xD;
else&#xD;
{&#xD;
	result += &quot;|ERROR:CATCH ERROR EVENT: Caught Error&quot;;&#xD;
}&#xD;
&#xD;
if (actualValue == null)&#xD;
{&#xD;
	actualValue = &quot;**Not Set**&quot;;&#xD;
}</xpdl2:Script>
              </xpdl2:TaskScript>
            </xpdl2:Task>
          </xpdl2:Implementation>
          <xpdl2:TransitionRestrictions>
            <xpdl2:TransitionRestriction>
              <xpdl2:Join Type="Exclusive" ExclusiveType="Data"/>
            </xpdl2:TransitionRestriction>
          </xpdl2:TransitionRestrictions>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="64.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="96.0">
              <xpdl2:Coordinates XCoordinate="822.0" YCoordinate="1146.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
          <xpdl2:Extensions/>
          <xpdExt:ActivityResourcePatterns>
            <xpdExt:AllocationStrategy xpdExt:Strategy="SYSTEM_DETERMINED"/>
          </xpdExt:ActivityResourcePatterns>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_pMqhMmnNEeCvfK09LgLLfw" xpdExt:Visibility="Private" iProcessExt:StepIndex="33">
          <xpdl2:Event>
            <xpdl2:IntermediateEvent Target="_pMp6KGnNEeCvfK09LgLLfw" Trigger="Error">
              <xpdl2:ResultError ErrorCode=""/>
            </xpdl2:IntermediateEvent>
          </xpdl2:Event>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="31.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="31.0">
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:NodeGraphicsInfo>
            <xpdl2:NodeGraphicsInfo ToolId="XPD.BorderEventPosition">
              <xpdl2:Coordinates XCoordinate="18.5589519650655" YCoordinate="0.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_zzmqsWnNEeCvfK09LgLLfw" Name="endGate" xpdExt:DisplayName="endGate" iProcessExt:StepIndex="34">
          <xpdl2:Route GatewayType="Inclusive"/>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="61.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="46.0">
              <xpdl2:Coordinates XCoordinate="1070.0" YCoordinate="540.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_tVKcwJ50EeC5wuChGREBNQ" Name="AssignScriptFullCopyforcheckValidationMarkers" xpdExt:Visibility="Private" xpdExt:DisplayName="Assign Script - Full Copy for check Validation Markers" iProcessExt:StepIndex="35">
          <xpdl2:Implementation>
            <xpdl2:Task>
              <xpdl2:TaskScript>
                <xpdl2:Script ScriptGrammar="JavaScript"> /////////////////////////////////////////////////////////////&#xD;
 //&#xD;
 // In order to test that Studio generates error markers on invalid assignments all posibilities are tested in a copy of this script that&#xD;
 // has the &quot;//!&quot; removed from the start of any lines that begin with &quot;//!&quot;. The result is then copied to the &quot;Assign Script - Full Copy for check Validation Markers&quot; task&#xD;
 // where the error markers can be checked if the supressScriptValidation extended attribute is renamed (e.g. add a character to the end of the name), then it will&#xD;
 // no longer supress the errors and they can be checked.&#xD;
 //&#xD;
 /////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Enter:Assign Script (dst = '&quot;+dst+&quot;' type)&quot;;&#xD;
&#xD;
&#xD;
 /////////////////////////////////////////////////////////////&#xD;
 // Process the dst parameter&#xD;
if (dst == &quot;bool&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
		if (src == &quot;boolt&quot;)			{ dstField.bool = true; 								result += &quot;|INFO:dstField.bool = true;&quot;; } else&#xD;
		if (src == &quot;boolf&quot;)			{ dstField.bool = false;		 						result += &quot;|INFO:dstField.bool = false;&quot;; } else&#xD;
/*!*/	if (src == &quot;string&quot;)		{ dstField.bool = &quot;Hello World!&quot;; 						result += &quot;|INFO:dstField.bool = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
/*!*/	if (src == &quot;number&quot;)		{ dstField.bool = 123;			 						result += &quot;|INFO:dstField.bool = 123;&quot;; } else&#xD;
/*!*/	if (src == &quot;bigint&quot;)		{ dstField.bool = ScriptUtil.createBigInteger(123);		result += &quot;|INFO:dstField.bool = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
		if (src == &quot;bool&quot;) 			{ dstField.bool = srcField.bool; 						result += &quot;|INFO:dstField.bool = srcField.bool;&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.bool = srcField.date; 						result += &quot;|INFO:dstField.bool = srcField.date;&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.bool = srcField.time; 						result += &quot;|INFO:dstField.bool = srcField.time;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.bool = srcField.datetime; 					result += &quot;|INFO:dstField.bool = srcField.datetime;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.bool = srcField.datetimetz; 					result += &quot;|INFO:dstField.bool = srcField.datetimetz;&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.bool = srcField.decimalFloat; 				result += &quot;|INFO:dstField.bool = srcField.decimalFloat;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.bool = srcField.decimalFixed8Dot4; 			result += &quot;|INFO:dstField.bool = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.bool = srcField.integerSigned; 				result += &quot;|INFO:dstField.bool = srcField.integerSigned;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.bool = srcField.integerFixed5; 				result += &quot;|INFO:dstField.bool = srcField.integerFixed5;&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.bool = srcField.text20; 						result += &quot;|INFO:dstField.bool = srcField.text20;&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.bool = srcField.duration; 					result += &quot;|INFO:dstField.bool = srcField.duration;&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.bool = srcField.id; 							result += &quot;|INFO:dstField.bool = srcField.id;&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.bool = srcField.uri; 						result += &quot;|INFO:dstField.bool = srcField.uri;&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.bool = srcField.boolList; 						result += &quot;|INFO:dstField.bool = srcField.boolList;&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.bool = srcField.dateList; 						result += &quot;|INFO:dstField.bool = srcField.dateList;&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.bool = srcField.timeList; 						result += &quot;|INFO:dstField.bool = srcField.timeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.bool = srcField.datetimeList; 					result += &quot;|INFO:dstField.bool = srcField.datetimeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.bool = srcField.datetimetzList; 					result += &quot;|INFO:dstField.bool = srcField.datetimetzList;&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.bool = srcField.decimalFloatList; 				result += &quot;|INFO:dstField.bool = srcField.decimalFloatList;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.bool = srcField.decimalFixed8Dot4List; 			result += &quot;|INFO:dstField.bool = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.bool = srcField.integerSignedList; 				result += &quot;|INFO:dstField.bool = srcField.integerSignedList;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.bool = srcField.integerFixed5List; 				result += &quot;|INFO:dstField.bool = srcField.integerFixed5List;&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.bool = srcField.text20List; 						result += &quot;|INFO:dstField.bool = srcField.text20List;&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.bool = srcField.durationList; 					result += &quot;|INFO:dstField.bool = srcField.durationList;&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.bool = srcField.idList; 							result += &quot;|INFO:dstField.bool = srcField.idList;&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.bool = srcField.uriList; 						result += &quot;|INFO:dstField.bool = srcField.uriList;&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;' (with direct assignment)&quot;; }&#xD;
	} else if (opCode == &quot;create&quot;) 	{&#xD;
		if (src == &quot;bool&quot;) 			{ dstField.bool = ScriptUtil.createBoolean(srcField.bool); 				result += &quot;|INFO:dstField.bool = ScriptUtil.createBoolean(srcField.bool);&quot;; } else&#xD;
		if (src == &quot;decimalFloat&quot;) 	{ dstField.bool = ScriptUtil.createBoolean(srcField.decimalFloat); 		result += &quot;|INFO:dstField.bool = ScriptUtil.createBoolean(srcField.decimalFloat);&quot;; } else&#xD;
		if (src == &quot;decimalFixed&quot;) 	{ dstField.bool = ScriptUtil.createBoolean(srcField.decimalFixed8Dot4); result += &quot;|INFO:dstField.bool = ScriptUtil.createBoolean(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
		if (src == &quot;intSigned&quot;) 	{ dstField.bool = ScriptUtil.createBoolean(srcField.integerSigned); 	result += &quot;|INFO:dstField.bool = ScriptUtil.createBoolean(srcField.integerSigned);&quot;; } else&#xD;
		if (src == &quot;intFixed&quot;) 		{ dstField.bool = ScriptUtil.createBoolean(srcField.integerFixed5); 	result += &quot;|INFO:dstField.bool = ScriptUtil.createBoolean(srcField.integerFixed5);&quot;; } else&#xD;
		if (src == &quot;text&quot;) 			{ dstField.bool = ScriptUtil.createBoolean(srcField.text20); 			result += &quot;|INFO:dstField.bool = ScriptUtil.createBoolean(srcField.text20);&quot;; } else&#xD;
									{ 																		result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;' (with createXXX() method)&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}&#xD;
} else if (dst == &quot;date&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
/*!*/	if (src == &quot;boolt&quot;)			{ dstField.date = true; 								result += &quot;|INFO:dstField.date = true;&quot;; } else&#xD;
/*!*/	if (src == &quot;boolf&quot;)			{ dstField.date = false;		 						result += &quot;|INFO:dstField.date = false;&quot;; } else&#xD;
/*!*/	if (src == &quot;string&quot;)		{ dstField.date = &quot;Hello World!&quot;; 						result += &quot;|INFO:dstField.date = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
/*!*/	if (src == &quot;number&quot;)		{ dstField.date = 123;			 						result += &quot;|INFO:dstField.date = 123;&quot;; } else&#xD;
/*!*/	if (src == &quot;bigint&quot;)		{ dstField.date = ScriptUtil.createBigInteger(123);		result += &quot;|INFO:dstField.date = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.date = srcField.bool; 						result += &quot;|INFO:dstField.date = srcField.bool;&quot;; } else&#xD;
		if (src == &quot;date&quot;) 			{ dstField.date = srcField.date; 						result += &quot;|INFO:dstField.date = srcField.date;&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.date = srcField.time; 						result += &quot;|INFO:dstField.date = srcField.time;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.date = srcField.datetime; 					result += &quot;|INFO:dstField.date = srcField.datetime;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.date = srcField.datetimetz; 					result += &quot;|INFO:dstField.date = srcField.datetimetz;&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.date = srcField.decimalFloat; 				result += &quot;|INFO:dstField.date = srcField.decimalFloat;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.date = srcField.decimalFixed8Dot4; 			result += &quot;|INFO:dstField.date = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.date = srcField.integerSigned; 				result += &quot;|INFO:dstField.date = srcField.integerSigned;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.date = srcField.integerFixed5; 				result += &quot;|INFO:dstField.date = srcField.integerFixed5;&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.date = srcField.text20; 						result += &quot;|INFO:dstField.date = srcField.text20;&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.date = srcField.duration; 					result += &quot;|INFO:dstField.date = srcField.duration;&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.date = srcField.id; 							result += &quot;|INFO:dstField.date = srcField.id;&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.date = srcField.uri; 						result += &quot;|INFO:dstField.date = srcField.uri;&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.date = srcField.boolList; 				result += &quot;|INFO:dstField.date = srcField.boolList;&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.date = srcField.dateList; 				result += &quot;|INFO:dstField.date = srcField.dateList;&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.date = srcField.timeList; 				result += &quot;|INFO:dstField.date = srcField.timeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.date = srcField.datetimeList; 			result += &quot;|INFO:dstField.date = srcField.datetimeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.date = srcField.datetimetzList; 			result += &quot;|INFO:dstField.date = srcField.datetimetzList;&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.date = srcField.decimalFloatList; 		result += &quot;|INFO:dstField.date = srcField.decimalFloatList;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.date = srcField.decimalFixed8Dot4List; 	result += &quot;|INFO:dstField.date = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.date = srcField.integerSignedList; 		result += &quot;|INFO:dstField.date = srcField.integerSignedList;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.date = srcField.integerFixed5List; 		result += &quot;|INFO:dstField.date = srcField.integerFixed5List;&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.date = srcField.text20List; 				result += &quot;|INFO:dstField.date = srcField.text20List;&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.date = srcField.durationList; 			result += &quot;|INFO:dstField.date = srcField.durationList;&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.date = srcField.idList; 					result += &quot;|INFO:dstField.date = srcField.idList;&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.date = srcField.uriList; 				result += &quot;|INFO:dstField.date = srcField.uriList;&quot;; } else&#xD;
										{ 													result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;create&quot;) {&#xD;
		if (src == &quot;-&quot;) 			{ dstField.date = DateTimeUtil.createDate(); 							result += &quot;|INFO:dstField.date = DateTimeUtil.createDate();&quot;; } else&#xD;
		if (src == &quot;intSigned&quot;)		{ dstField.date = DateTimeUtil.createDate(srcField.integerSigned/10000,(srcField.integerSigned/100)%100,srcField.integerSigned%100); 				&#xD;
					 		     result += &quot;|INFO:dstField.date = DateTimeUtil.createDate(srcField.integerSigned/10000,(srcField.integerSigned/100)%100,srcField.integerSigned%100);&quot;; } else&#xD;
		if (src == &quot;date&quot;) 			{ dstField.date = DateTimeUtil.createDate(srcField.date); 				result += &quot;|INFO:dstField.date = DateTimeUtil.createDate(srcField.date);&quot;; } else&#xD;
		if (src == &quot;datetime&quot;) 		{ dstField.date = DateTimeUtil.createDate(srcField.datetime); 			result += &quot;|INFO:dstField.date = DateTimeUtil.createDate(srcField.datetime);&quot;; } else&#xD;
		if (src == &quot;datetimetz&quot;) 	{ dstField.date = DateTimeUtil.createDate(srcField.datetimetz,srcField2.bool); 		result += &quot;|INFO:dstField.date = DateTimeUtil.createDate(srcField.datetimetz,srcField2.bool);&quot;; } else	&#xD;
		if (src == &quot;text&quot;) 			{ dstField.date = DateTimeUtil.createDate(srcField.text20); 			result += &quot;|INFO:dstField.date = DateTimeUtil.createDate(srcField.text20);&quot;; } else&#xD;
									{ 																		result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;time&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
/*!*/	if (src == &quot;boolt&quot;)			{ dstField.time = true; 								result += &quot;|INFO:dstField.time = true;&quot;; } else&#xD;
/*!*/	if (src == &quot;boolf&quot;)			{ dstField.time = false;		 						result += &quot;|INFO:dstField.time = false;&quot;; } else&#xD;
/*!*/	if (src == &quot;string&quot;)		{ dstField.time = &quot;Hello World!&quot;; 						result += &quot;|INFO:dstField.time = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
/*!*/	if (src == &quot;number&quot;)		{ dstField.time = 123;			 						result += &quot;|INFO:dstField.time = 123;&quot;; } else&#xD;
/*!*/	if (src == &quot;bigint&quot;)		{ dstField.time = ScriptUtil.createBigInteger(123);		result += &quot;|INFO:dstField.time = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.time = srcField.bool; 						result += &quot;|INFO:dstField.time = srcField.bool;&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.time = srcField.date; 						result += &quot;|INFO:dstField.time = srcField.date;&quot;; } else&#xD;
		if (src == &quot;time&quot;) 			{ dstField.time = srcField.time; 						result += &quot;|INFO:dstField.time = srcField.time;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.time = srcField.datetime; 					result += &quot;|INFO:dstField.time = srcField.datetime;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.time = srcField.datetimetz; 					result += &quot;|INFO:dstField.time = srcField.datetimetz;&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.time = srcField.decimalFloat; 				result += &quot;|INFO:dstField.time = srcField.decimalFloat;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.time = srcField.decimalFixed8Dot4; 			result += &quot;|INFO:dstField.time = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;)	 	{ dstField.time = srcField.integerSigned; 				result += &quot;|INFO:dstField.time = srcField.integerSigned;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.time = srcField.integerFixed5; 				result += &quot;|INFO:dstField.time = srcField.integerFixed5;&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.time = srcField.text20; 						result += &quot;|INFO:dstField.time = srcField.text20;&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.time = srcField.duration; 					result += &quot;|INFO:dstField.time = srcField.duration;&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.time = srcField.id; 							result += &quot;|INFO:dstField.time = srcField.id;&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.time = srcField.uri; 						result += &quot;|INFO:dstField.time = srcField.uri;&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.time = srcField.boolList; 				result += &quot;|INFO:dstField.time = srcField.boolList;&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.time = srcField.dateList; 				result += &quot;|INFO:dstField.time = srcField.dateList;&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.time = srcField.timeList; 				result += &quot;|INFO:dstField.time = srcField.timeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.time = srcField.datetimeList; 			result += &quot;|INFO:dstField.time = srcField.datetimeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.time = srcField.datetimetzList; 			result += &quot;|INFO:dstField.time = srcField.datetimetzList;&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.time = srcField.decimalFloatList; 		result += &quot;|INFO:dstField.time = srcField.decimalFloatList;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.time = srcField.decimalFixed8Dot4List; 	result += &quot;|INFO:dstField.time = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;)	 	{ dstField.time = srcField.integerSignedList; 		result += &quot;|INFO:dstField.time = srcField.integerSignedList;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.time = srcField.integerFixed5List; 		result += &quot;|INFO:dstField.time = srcField.integerFixed5List;&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.time = srcField.text20List; 				result += &quot;|INFO:dstField.time = srcField.text20List;&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.time = srcField.durationList; 			result += &quot;|INFO:dstField.time = srcField.durationList;&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.time = srcField.idList; 					result += &quot;|INFO:dstField.time = srcField.idList;&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.time = srcField.uriList; 				result += &quot;|INFO:dstField.time = srcField.uriList;&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;create&quot;) {&#xD;
		if (src == &quot;time&quot;) 			{ dstField.time = DateTimeUtil.createTime(srcField.time); 				result += &quot;|INFO:dstField.time = DateTimeUtil.createTime(srcField.time);&quot;; } else&#xD;
		if (src == &quot;datetime&quot;) 		{ dstField.time = DateTimeUtil.createTime(srcField.datetime); 			result += &quot;|INFO:dstField.time = DateTimeUtil.createTime(srcField.datetime);&quot;; } else&#xD;
		if (src == &quot;datetimetz&quot;) 	{ dstField.time = DateTimeUtil.createTime(srcField.datetimetz); 		result += &quot;|INFO:dstField.time = DateTimeUtil.createTime(srcField.datetimetz);&quot;; } else	&#xD;
		if (src == &quot;intSigned&quot;) {&#xD;
			if (src2 == &quot;intSigned&quot;) {&#xD;
				// src = HHMMSS, src2 = sss&#xD;
				dstField.time = DateTimeUtil.createTime(srcField.integerSigned/10000,(srcField.integerSigned/100)%100,srcField.integerSigned%100,srcField2.integerSigned); 		result += &quot;|INFO:dstField.time = DateTimeUtil.createTime(srcField.integerSigned/10000,(srcField.integerSigned/100)%100,srcField.integerSigned%100,srcField2.integerSigned);&quot;;&#xD;
			} else if (src2 == &quot;decimalFixed&quot;) {&#xD;
				// src = HHMMSS, src2 =0.ssssss&#xD;
				dstField.time = DateTimeUtil.createTime(srcField.integerSigned/10000,(srcField.integerSigned/100)%100,srcField.integerSigned%100,srcField2.decimalFixed8Dot4); 		result += &quot;|INFO:dstField.time = DateTimeUtil.createTime(srcField.integerSigned/10000,(srcField.integerSigned/100)%100,srcField.integerSigned%100,srcField2.decimalFixed8Dot4);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src/src:'&quot; + src + &quot;/&quot; + src2 + &quot;'&quot;; &#xD;
			}&#xD;
		} else 			&#xD;
		if (src == &quot;text&quot;) 			{ dstField.time = DateTimeUtil.createTime(srcField.text20); 			result += &quot;|INFO:dstField.time = DateTimeUtil.createTime(srcField.text20);&quot;; } else&#xD;
		if (src == &quot;-&quot;) 				{ dstField.time = DateTimeUtil.createTime(); 							result += &quot;|INFO:dstField.time = DateTimeUtil.createTime();&quot;; } else&#xD;
									{ 																		result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;datetime&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
/*!*/	if (src == &quot;boolt&quot;)			{ dstField.datetime = true; 							result += &quot;|INFO:dstField.datetime = true;&quot;; } else&#xD;
/*!*/	if (src == &quot;boolf&quot;)			{ dstField.datetime = false;		 					result += &quot;|INFO:dstField.datetime = false;&quot;; } else&#xD;
/*!*/	if (src == &quot;string&quot;)		{ dstField.datetime = &quot;Hello World!&quot;; 					result += &quot;|INFO:dstField.datetime = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
/*!*/	if (src == &quot;number&quot;)		{ dstField.datetime = 123;			 					result += &quot;|INFO:dstField.datetime = 123;&quot;; } else&#xD;
/*!*/	if (src == &quot;bigint&quot;)		{ dstField.datetime = ScriptUtil.createBigInteger(123);	result += &quot;|INFO:dstField.datetime = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.datetime = srcField.bool; 					result += &quot;|INFO:dstField.datetime = srcField.bool;&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.datetime = srcField.date; 					result += &quot;|INFO:dstField.datetime = srcField.date;&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.datetime = srcField.time; 					result += &quot;|INFO:dstField.datetime = srcField.time;&quot;; } else&#xD;
		if (src == &quot;datetime&quot;) 		{ dstField.datetime = srcField.datetime; 				result += &quot;|INFO:dstField.datetime = srcField.datetime;&quot;; } else&#xD;
		if (src == &quot;datetimetz&quot;) 	{ dstField.datetime = srcField.datetimetz; 				result += &quot;|INFO:dstField.datetime = srcField.datetimetz;&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.datetime = srcField.decimalFloat; 			result += &quot;|INFO:dstField.datetime = srcField.decimalFloat;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.datetime = srcField.decimalFixed8Dot4;		result += &quot;|INFO:dstField.datetime = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.datetime = srcField.integerSigned; 			result += &quot;|INFO:dstField.datetime = srcField.integerSigned;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.datetime = srcField.integerFixed5; 			result += &quot;|INFO:dstField.datetime = srcField.integerFixed5;&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.datetime = srcField.text20; 					result += &quot;|INFO:dstField.datetime = srcField.text20;&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.datetime = srcField.duration; 				result += &quot;|INFO:dstField.datetime = srcField.duration;&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.datetime = srcField.id; 						result += &quot;|INFO:dstField.datetime = srcField.id;&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.datetime = srcField.uri; 					result += &quot;|INFO:dstField.datetime = srcField.uri;&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.datetime = srcField.boolList; 					result += &quot;|INFO:dstField.datetime = srcField.boolList;&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.datetime = srcField.dateList; 					result += &quot;|INFO:dstField.datetime = srcField.dateList;&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.datetime = srcField.timeList; 					result += &quot;|INFO:dstField.datetime = srcField.timeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.datetime = srcField.datetimeList; 				result += &quot;|INFO:dstField.datetime = srcField.datetimeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.datetime = srcField.datetimetzList; 				result += &quot;|INFO:dstField.datetime = srcField.datetimetzList;&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.datetime = srcField.decimalFloatList; 			result += &quot;|INFO:dstField.datetime = srcField.decimalFloatList;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.datetime = srcField.decimalFixed8Dot4List;		result += &quot;|INFO:dstField.datetime = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.datetime = srcField.integerSignedList; 			result += &quot;|INFO:dstField.datetime = srcField.integerSignedList;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.datetime = srcField.integerFixed5List; 			result += &quot;|INFO:dstField.datetime = srcField.integerFixed5List;&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.datetime = srcField.text20List; 					result += &quot;|INFO:dstField.datetime = srcField.text20List;&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.datetime = srcField.durationList; 				result += &quot;|INFO:dstField.datetime = srcField.durationList;&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.datetime = srcField.idList; 						result += &quot;|INFO:dstField.datetime = srcField.idList;&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.datetime = srcField.uriList; 					result += &quot;|INFO:dstField.datetime = srcField.uriList;&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;create&quot;) {&#xD;
		if (src == &quot;date&quot;) {&#xD;
			if (src2 == &quot;time&quot;) {&#xD;
				dstField.datetime = DateTimeUtil.createDatetime(srcField.date, srcField2.time); 				result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime(srcField.date, srcField2.time);&quot;;&#xD;
			} else if (src2 == &quot;-&quot;) {&#xD;
				dstField.datetime = DateTimeUtil.createDatetime(srcField.date); 				result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime(srcField.date);&quot;;&#xD;
			} else {&#xD;
				result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src/src:'&quot; + src + &quot;/&quot; + src2 + &quot;'&quot;; &#xD;
			}			&#xD;
		} else			&#xD;
		if (src == &quot;time&quot;) 			{ dstField.datetime = DateTimeUtil.createDatetime(srcField.time); 				result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime(srcField.time);&quot;; } else&#xD;
		if (src == &quot;datetime&quot;) 		{ dstField.datetime = DateTimeUtil.createDatetime(srcField.datetime); 			result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime(srcField.datetime);&quot;; } else&#xD;
		if (src == &quot;datetimetz&quot;) 	{ dstField.datetime = DateTimeUtil.createDatetime(srcField.datetimetz, srcField2.bool); 		result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime(srcField.datetimetz, srcField2.bool);&quot;; } else	&#xD;
		if (src == &quot;intSigned&quot; &amp;&amp; src2 == &quot;intSigned&quot;) 	&#xD;
									{// src  = YYYYMMDD&#xD;
									//	src2 = HHMMSSsss &#xD;
									dstField.datetime = DateTimeUtil.createDatetime(srcField.integerSigned/10000, 		//Year&#xD;
																					 (srcField.integerSigned/100)%100,		//Month&#xD;
																					 srcField.integerSigned%100,			//Day&#xD;
																					 srcField2.integerSigned/10000000,		//Hour&#xD;
																					 (srcField2.integerSigned/100000)%100,	//Minute&#xD;
																					 (srcField2.integerSigned/1000)%100,	//Second&#xD;
																					 srcField2.integerSigned%1000);			//Milliseconds&#xD;
									  result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime(srcField.integerSigned/10000,(srcField.integerSigned/100)%100,srcField.integerSigned%100,srcField2.integerSigned/10000000,(srcField2.integerSigned/100000)%100,(srcField2.integerSigned/1000)%100,srcField2.integerSigned%1000);&quot;; } else&#xD;
		if (src == &quot;intFixed&quot; &amp;&amp; src2 == &quot;text&quot;) 		{ &#xD;
			var str = srcField2.text20; //MMDDHHMMSS.ssssss&#xD;
			var mon = Number(str.substr(0,2));&#xD;
			var day = Number(str.substr(2,2));&#xD;
			var hour= Number(str.substr(4,2));&#xD;
			var min = Number(str.substr(6,2));&#xD;
			var sec = Number(str.substr(8,2));&#xD;
			var mil = ScriptUtil.createBigDecimal(&quot;0.&quot; + str.substr(10));			&#xD;
			dstField.datetime = DateTimeUtil.createDatetime(srcField.integerFixed5,mon,day,hour,min,sec,mil); 		result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime(srcField.integerFixed5,mon,day,hour,min,sec,mil);&quot;; } else&#xD;
		if (src == &quot;text&quot;) 			{ dstField.datetime = DateTimeUtil.createDatetime(srcField.text20); 			result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime(srcField.text20);&quot;; } else&#xD;
		if (src == &quot;-&quot;) 				{ dstField.datetime = DateTimeUtil.createDatetime(); 							result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime();&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;datetimetz&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
/*!*/	if (src == &quot;boolt&quot;)			{ dstField.datetimetz = true; 							result += &quot;|INFO:dstField.datetimetz = true;&quot;; } else&#xD;
/*!*/	if (src == &quot;boolf&quot;)			{ dstField.datetimetz = false;		 					result += &quot;|INFO:dstField.datetimetz = false;&quot;; } else&#xD;
/*!*/	if (src == &quot;string&quot;)		{ dstField.datetimetz = &quot;Hello World!&quot;; 				result += &quot;|INFO:dstField.datetimetz = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
/*!*/	if (src == &quot;number&quot;)		{ dstField.datetimetz = 123;			 				result += &quot;|INFO:dstField.datetimetz = 123;&quot;; } else&#xD;
/*!*/	if (src == &quot;bigint&quot;)		{ dstField.datetimetz = ScriptUtil.createBigInteger(123);result += &quot;|INFO:dstField.datetimetz = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.datetimetz = srcField.bool; 					result += &quot;|INFO:dstField.datetimetz = srcField.bool;&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.datetimetz = srcField.date; 					result += &quot;|INFO:dstField.datetimetz = srcField.date;&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.datetimetz = srcField.time; 					result += &quot;|INFO:dstField.datetimetz = srcField.time;&quot;; } else&#xD;
		if (src == &quot;datetime&quot;) 		{ dstField.datetimetz = srcField.datetime; 				result += &quot;|INFO:dstField.datetimetz = srcField.datetime;&quot;; } else&#xD;
		if (src == &quot;datetimetz&quot;) 	{ dstField.datetimetz = srcField.datetimetz; 			result += &quot;|INFO:dstField.datetimetz = srcField.datetimetz;&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.datetimetz = srcField.decimalFloat; 			result += &quot;|INFO:dstField.datetimetz = srcField.decimalFloat;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.datetimetz = srcField.decimalFixed8Dot4;		result += &quot;|INFO:dstField.datetimetz = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.datetimetz = srcField.integerSigned; 		result += &quot;|INFO:dstField.datetimetz = srcField.integerSigned;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.datetimetz = srcField.integerFixed5; 		result += &quot;|INFO:dstField.datetimetz = srcField.integerFixed5;&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.datetimetz = srcField.text20; 				result += &quot;|INFO:dstField.datetimetz = srcField.text20;&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.datetimetz = srcField.duration; 				result += &quot;|INFO:dstField.datetimetz = srcField.duration;&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.datetimetz = srcField.id; 					result += &quot;|INFO:dstField.datetimetz = srcField.id;&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.datetimetz = srcField.uri; 					result += &quot;|INFO:dstField.datetimetz = srcField.uri;&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.datetimetz = srcField.boolList; 					result += &quot;|INFO:dstField.datetimetz = srcField.boolList;&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.datetimetz = srcField.dateList; 					result += &quot;|INFO:dstField.datetimetz = srcField.dateList;&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.datetimetz = srcField.timeList; 					result += &quot;|INFO:dstField.datetimetz = srcField.timeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.datetimetz = srcField.datetimeList; 				result += &quot;|INFO:dstField.datetimetz = srcField.datetimeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.datetimetz = srcField.datetimetzList; 			result += &quot;|INFO:dstField.datetimetz = srcField.datetimetzList;&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.datetimetz = srcField.decimalFloatList; 			result += &quot;|INFO:dstField.datetimetz = srcField.decimalFloatList;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.datetimetz = srcField.decimalFixed8Dot4List;		result += &quot;|INFO:dstField.datetimetz = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.datetimetz = srcField.integerSignedList; 		result += &quot;|INFO:dstField.datetimetz = srcField.integerSignedList;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.datetimetz = srcField.integerFixed5List; 		result += &quot;|INFO:dstField.datetimetz = srcField.integerFixed5List;&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.datetimetz = srcField.text20List; 				result += &quot;|INFO:dstField.datetimetz = srcField.text20List;&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.datetimetz = srcField.durationList; 				result += &quot;|INFO:dstField.datetimetz = srcField.durationList;&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.datetimetz = srcField.idList; 					result += &quot;|INFO:dstField.datetimetz = srcField.idList;&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.datetimetz = srcField.uriList; 					result += &quot;|INFO:dstField.datetimetz = srcField.uriList;&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;create&quot;) {&#xD;
		if (src == &quot;date&quot;) 			{ dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.date,srcField2.time,0);result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.date,srcField2.time,0);&quot;; } else&#xD;
		if (src == &quot;datetime&quot; &amp;&amp; src2 == &quot;intSigned&quot;)&#xD;
							 		{ dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.datetime,srcField2.integerSigned);result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.datetime,srcField2.integerSigned);&quot;; } else&#xD;
		if (src == &quot;datetimetz&quot;) 	{ dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.datetimetz); 		result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.datetimetz);&quot;; } else	&#xD;
		if (src == &quot;intSigned&quot; &amp;&amp; src2 == &quot;intSigned&quot;) 	{ &#xD;
				// src [+/-]&lt;offset>YYYYMMDD&#xD;
				// src2 HHMMSSsss&#xD;
				var offset = Math.floor(srcField.integerSigned/100000000);&#xD;
				// floor() function rounds down towards -Infinity, so -5.5 goes to -6, whereas we want -5&#xD;
				if (offset &lt; 0)&#xD;
				{&#xD;
					offset++;&#xD;
				}&#xD;
				offset *= 60;&#xD;
				var date = Math.abs(srcField.integerSigned)%100000000;&#xD;
				dstField.datetimetz = DateTimeUtil.createDatetimetz(date/10000, 						//Year&#xD;
															 (date/100)%100,						//Month&#xD;
															 date%100,								//Day&#xD;
															 srcField2.integerSigned/10000000,		//Hour&#xD;
															 (srcField2.integerSigned/100000)%100,	//Minute&#xD;
															 (srcField2.integerSigned/1000)%100,	//Second&#xD;
															 srcField2.integerSigned%1000,			//Milliseconds&#xD;
															 offset);&#xD;
									  result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetime(srcField.integerSigned/10000,(srcField.integerSigned/100)%100,srcField.integerSigned%100,srcField2.integerSigned/10000000,(srcField2.integerSigned/100000)%100,(srcField2.integerSigned/1000)%100,srcField2.integerSigned%1000);&quot;; } else&#xD;
		if (src == &quot;intFixed&quot; &amp;&amp; src2 == &quot;text&quot;) 		{ &#xD;
			// src = BigDecimal YYYY&#xD;
			var str = srcField2.text20; //MMDDHHMMSSssssss&#xD;
			var mon = Number(str.substr(0,2));&#xD;
			var day = Number(str.substr(2,2));&#xD;
			var hour= Number(str.substr(4,2));&#xD;
			var min = Number(str.substr(6,2));&#xD;
			var sec = Number(str.substr(8,2));&#xD;
			var mil = ScriptUtil.createBigDecimal(&quot;0.&quot; + str.substr(10));			&#xD;
			dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.integerFixed5,mon,day,hour,min,sec,mil,0); 	result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetime(srcField.integerFixed5,mon,day,hour,min,sec,mil,0);&quot;; } else&#xD;
		if (src == &quot;text&quot;) 			{ dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.text20); 			result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.text20);&quot;; } else&#xD;
		if (src == &quot;-&quot;) 			{ dstField.datetimetz = DateTimeUtil.createDatetimetz();				 			result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetimetz();&quot;; } else&#xD;
									{ 																					result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;create+300&quot;) {&#xD;
		if (src == &quot;date&quot;) 			{ dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.date,srcField2.time,300);result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.date,srcField2.time,300);&quot;; } else&#xD;
		if (src == &quot;intFixed&quot; &amp;&amp; src2 == &quot;text&quot;) 		{ &#xD;
			var str = srcField2.text20; //MMDDHHMMSSssssss&#xD;
			var mon = Number(str.substr(0,2));&#xD;
			var day = Number(str.substr(2,2));&#xD;
			var hour= Number(str.substr(4,2));&#xD;
			var min = Number(str.substr(6,2));&#xD;
			var sec = Number(str.substr(8,2));&#xD;
			var mil = ScriptUtil.createBigDecimal(&quot;0.&quot; + str.substr(10));			&#xD;
			dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.integerFixed5,mon,day,hour,min,sec,mil,300); 	result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetimetz(srcField.integerFixed5,mon,day,hour,min,sec,mil,300);&quot;; } else&#xD;
									{ 																					result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;create-300&quot;) {&#xD;
		if (src == &quot;date&quot;) 			{ dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.date,srcField2.time,-300);result += &quot;|INFO:dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.date,srcField2.time,-300);&quot;; } else&#xD;
		if (src == &quot;intFixed&quot; &amp;&amp; src2 == &quot;text&quot;) 		{ &#xD;
			var str = srcField2.text20; //MMDDHHMMSSssssss&#xD;
			var mon = Number(str.substr(0,2));&#xD;
			var day = Number(str.substr(2,2));&#xD;
			var hour= Number(str.substr(4,2));&#xD;
			var min = Number(str.substr(6,2));&#xD;
			var sec = Number(str.substr(8,2));&#xD;
			var mil = ScriptUtil.createBigDecimal(&quot;0.&quot; + str.substr(10));			&#xD;
			dstField.datetimetz = DateTimeUtil.createDatetimetz(srcField.integerFixed5,mon,day,hour,min,sec,mil,-300); 	result += &quot;|INFO:dstField.datetime = DateTimeUtil.createDatetimetz(srcField.integerFixed5,mon,day,hour,min,sec,mil,-300);&quot;; } else&#xD;
									{ 																					result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;decimalFloat&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
/*!*/	if (src == &quot;boolt&quot;)			{ dstField.decimalFloat = true; 						result += &quot;|INFO:dstField.decimalFloat = true;&quot;; } else&#xD;
/*!*/	if (src == &quot;boolf&quot;)			{ dstField.decimalFloat = false;		 				result += &quot;|INFO:dstField.decimalFloat = false;&quot;; } else&#xD;
/*!*/	if (src == &quot;string&quot;)		{ dstField.decimalFloat = &quot;Hello World!&quot;; 				result += &quot;|INFO:dstField.decimalFloat = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
		if (src == &quot;number&quot;)		{ dstField.decimalFloat = 123;			 				result += &quot;|INFO:dstField.decimalFloat = 123;&quot;; } else&#xD;
/*!*/	if (src == &quot;bigint&quot;)		{ dstField.decimalFloat = ScriptUtil.createBigInteger(123);result += &quot;|INFO:dstField.decimalFloat = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.decimalFloat = srcField.bool; 				result += &quot;|INFO:dstField.decimalFloat = srcField.bool;&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.decimalFloat = srcField.date; 				result += &quot;|INFO:dstField.decimalFloat = srcField.date;&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.decimalFloat = srcField.time; 				result += &quot;|INFO:dstField.decimalFloat = srcField.time;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.decimalFloat = srcField.datetime; 			result += &quot;|INFO:dstField.decimalFloat = srcField.datetime;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.decimalFloat = srcField.datetimetz; 			result += &quot;|INFO:dstField.decimalFloat = srcField.datetimetz;&quot;; } else	&#xD;
		if (src == &quot;decimalFloat&quot;) 	{ dstField.decimalFloat = srcField.decimalFloat;		result += &quot;|INFO:dstField.decimalFloat = srcField.decimalFloat;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.decimalFloat = srcField.decimalFixed8Dot4;	result += &quot;|INFO:dstField.decimalFloat = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
		if (src == &quot;intSigned&quot;) 	{ dstField.decimalFloat = srcField.integerSigned;		result += &quot;|INFO:dstField.decimalFloat = srcField.integerSigned;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.decimalFloat = srcField.integerFixed5;		result += &quot;|INFO:dstField.decimalFloat = srcField.integerFixed5;&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.decimalFloat = srcField.text20; 				result += &quot;|INFO:dstField.decimalFloat = srcField.text20;&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.decimalFloat = srcField.duration; 			result += &quot;|INFO:dstField.decimalFloat = srcField.duration;&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.decimalFloat = srcField.id; 					result += &quot;|INFO:dstField.decimalFloat = srcField.id;&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.decimalFloat = srcField.uri; 				result += &quot;|INFO:dstField.decimalFloat = srcField.uri;&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.decimalFloat = srcField.boolList; 				result += &quot;|INFO:dstField.decimalFloat = srcField.boolList;&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.decimalFloat = srcField.dateList; 				result += &quot;|INFO:dstField.decimalFloat = srcField.dateList;&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.decimalFloat = srcField.timeList; 				result += &quot;|INFO:dstField.decimalFloat = srcField.timeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.decimalFloat = srcField.datetimeList; 			result += &quot;|INFO:dstField.decimalFloat = srcField.datetimeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.decimalFloat = srcField.datetimetzList; 			result += &quot;|INFO:dstField.decimalFloat = srcField.datetimetzList;&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.decimalFloat = srcField.decimalFloatList;		result += &quot;|INFO:dstField.decimalFloat = srcField.decimalFloatList;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.decimalFloat = srcField.decimalFixed8Dot4List;	result += &quot;|INFO:dstField.decimalFloat = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.decimalFloat = srcField.integerSignedList;		result += &quot;|INFO:dstField.decimalFloat = srcField.integerSignedList;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.decimalFloat = srcField.integerFixed5List;		result += &quot;|INFO:dstField.decimalFloat = srcField.integerFixed5List;&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.decimalFloat = srcField.text20List; 				result += &quot;|INFO:dstField.decimalFloat = srcField.text20List;&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.decimalFloat = srcField.durationList; 			result += &quot;|INFO:dstField.decimalFloat = srcField.durationList;&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.decimalFloat = srcField.idList; 					result += &quot;|INFO:dstField.decimalFloat = srcField.idList;&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.decimalFloat = srcField.uriList; 				result += &quot;|INFO:dstField.decimalFloat = srcField.uriList;&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;decimalFixed&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
/*!*/	if (src == &quot;boolt&quot;)			{ dstField.decimalFixed8Dot4 = true; 					result += &quot;|INFO:dstField.decimalFixed8Dot4 = true;&quot;; } else&#xD;
/*!*/	if (src == &quot;boolf&quot;)			{ dstField.decimalFixed8Dot4 = false;		 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = false;&quot;; } else&#xD;
/*!*/	if (src == &quot;string&quot;)		{ dstField.decimalFixed8Dot4 = &quot;Hello World!&quot;; 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
/*!*/	if (src == &quot;number&quot;)		{ dstField.decimalFixed8Dot4 = 123;			 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = 123;&quot;; } else&#xD;
/*!*/	if (src == &quot;bigint&quot;)		{ dstField.decimalFixed8Dot4 = ScriptUtil.createBigInteger(123);result += &quot;|INFO:dstField.decimalFixed8Dot4 = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.bool; 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.bool;&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.date; 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.date;&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.time; 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.time;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.decimalFixed8Dot4 = srcField.datetime; 		result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.datetime;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.decimalFixed8Dot4 = srcField.datetimetz; 	result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.datetimetz;&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.decimalFixed8Dot4 = srcField.decimalFloat; 	result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFloat;&quot;; } else&#xD;
		if (src == &quot;decimalFixed&quot;) 	{ dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4;result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.decimalFixed8Dot4 = srcField.integerSigned; 	result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.integerSigned;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.decimalFixed8Dot4 = srcField.integerFixed5; 	result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.integerFixed5;&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.text20; 		result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.text20;&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.decimalFixed8Dot4 = srcField.duration; 		result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.duration;&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.id; 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.id;&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.uri; 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.uri;&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.boolList; 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.boolList;&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.dateList; 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.dateList;&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.timeList; 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.timeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.decimalFixed8Dot4 = srcField.datetimeList; 		result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.datetimeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.decimalFixed8Dot4 = srcField.datetimetzList; 	result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.datetimetzList;&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.decimalFixed8Dot4 = srcField.decimalFloatList; 	result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFloatList;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4List;result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.decimalFixed8Dot4 = srcField.integerSignedList; 	result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.integerSignedList;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.decimalFixed8Dot4 = srcField.integerFixed5List; 	result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.integerFixed5List;&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.text20List; 		result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.text20List;&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.decimalFixed8Dot4 = srcField.durationList; 		result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.durationList;&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.idList; 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.idList;&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.decimalFixed8Dot4 = srcField.uriList; 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = srcField.uriList;&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;create&quot;) {&#xD;
		if (src == &quot;bool&quot;) 			{ dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.bool); 				result += &quot;|INFO:dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.bool);&quot;; } else&#xD;
		if (src == &quot;decimalFloat&quot;) 	{ dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.decimalFloat); 		result += &quot;|INFO:dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.decimalFloat);&quot;; } else&#xD;
		if (src == &quot;decimalFixed&quot;) 	{ dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
		if (src == &quot;intSigned&quot;) 	{ dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.integerSigned); 	result += &quot;|INFO:dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.integerSigned);&quot;; } else&#xD;
		if (src == &quot;intFixed&quot;) 		{ dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.integerFixed5); 	result += &quot;|INFO:dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.integerFixed5);&quot;; } else&#xD;
		if (src == &quot;text&quot;) 			{ dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.text20); 			result += &quot;|INFO:dstField.decimalFixed8Dot4 = ScriptUtil.createBigDecimal(srcField.text20);&quot;; } else&#xD;
									{ 																						result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;intSigned&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
/*!*/	if (src == &quot;boolt&quot;)			{ dstField.integerSigned = true; 						result += &quot;|INFO:dstField.integerSigned = true;&quot;; } else&#xD;
/*!*/	if (src == &quot;boolf&quot;)			{ dstField.integerSigned = false;		 				result += &quot;|INFO:dstField.integerSigned = false;&quot;; } else&#xD;
/*!*/	if (src == &quot;string&quot;)		{ dstField.integerSigned = &quot;Hello World!&quot;; 				result += &quot;|INFO:dstField.integerSigned = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
		if (src == &quot;number&quot;)		{ dstField.integerSigned = 123;			 				result += &quot;|INFO:dstField.integerSigned = 123;&quot;; } else&#xD;
/*!*/	if (src == &quot;bigint&quot;)		{ dstField.integerSigned = ScriptUtil.createBigInteger(123);result += &quot;|INFO:dstField.integerSigned = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.integerSigned = srcField.bool; 				result += &quot;|INFO:dstField.integerSigned = srcField.bool;&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.integerSigned = srcField.date; 				result += &quot;|INFO:dstField.integerSigned = srcField.date;&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.integerSigned = srcField.time; 				result += &quot;|INFO:dstField.integerSigned = srcField.time;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.integerSigned = srcField.datetime; 			result += &quot;|INFO:dstField.integerSigned = srcField.datetime;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.integerSigned = srcField.datetimetz; 		result += &quot;|INFO:dstField.integerSigned = srcField.datetimetz;&quot;; } else	&#xD;
		if (src == &quot;decimalFloat&quot;) 	{ dstField.integerSigned = srcField.decimalFloat; 		result += &quot;|INFO:dstField.integerSigned = srcField.decimalFloat;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.integerSigned = srcField.decimalFixed8Dot4; 	result += &quot;|INFO:dstField.integerSigned = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
		if (src == &quot;intSigned&quot;) 	{ dstField.integerSigned = srcField.integerSigned; 		result += &quot;|INFO:dstField.integerSigned = srcField.integerSigned;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.integerSigned = srcField.integerFixed5; 		result += &quot;|INFO:dstField.integerSigned = srcField.integerFixed5;&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.integerSigned = srcField.text20; 			result += &quot;|INFO:dstField.integerSigned = srcField.text20;&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.integerSigned = srcField.duration; 			result += &quot;|INFO:dstField.integerSigned = srcField.duration;&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.integerSigned = srcField.id; 				result += &quot;|INFO:dstField.integerSigned = srcField.id;&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.integerSigned = srcField.uri; 				result += &quot;|INFO:dstField.integerSigned = srcField.uri;&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.integerSigned = srcField.boolList; 				result += &quot;|INFO:dstField.integerSigned = srcField.boolList;&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.integerSigned = srcField.dateList; 				result += &quot;|INFO:dstField.integerSigned = srcField.dateList;&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.integerSigned = srcField.timeList; 				result += &quot;|INFO:dstField.integerSigned = srcField.timeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.integerSigned = srcField.datetimeList; 			result += &quot;|INFO:dstField.integerSigned = srcField.datetimeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.integerSigned = srcField.datetimetzList; 		result += &quot;|INFO:dstField.integerSigned = srcField.datetimetzList;&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.integerSigned = srcField.decimalFloatList; 		result += &quot;|INFO:dstField.integerSigned = srcField.decimalFloatList;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.integerSigned = srcField.decimalFixed8Dot4List; 	result += &quot;|INFO:dstField.integerSigned = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.integerSigned = srcField.integerSignedList; 		result += &quot;|INFO:dstField.integerSigned = srcField.integerSignedList;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.integerSigned = srcField.integerFixed5List; 		result += &quot;|INFO:dstField.integerSigned = srcField.integerFixed5List;&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.integerSigned = srcField.text20List; 			result += &quot;|INFO:dstField.integerSigned = srcField.text20List;&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.integerSigned = srcField.durationList; 			result += &quot;|INFO:dstField.integerSigned = srcField.durationList;&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.integerSigned = srcField.idList; 				result += &quot;|INFO:dstField.integerSigned = srcField.idList;&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.integerSigned = srcField.uriList; 				result += &quot;|INFO:dstField.integerSigned = srcField.uriList;&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;intFixed&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
/*!*/	if (src == &quot;boolt&quot;)			{ dstField.integerFixed5 = true; 						result += &quot;|INFO:dstField.integerFixed5 = true;&quot;; } else&#xD;
/*!*/	if (src == &quot;boolf&quot;)			{ dstField.integerFixed5 = false;		 				result += &quot;|INFO:dstField.integerFixed5 = false;&quot;; } else&#xD;
/*!*/	if (src == &quot;string&quot;)		{ dstField.integerFixed5 = &quot;Hello World!&quot;; 				result += &quot;|INFO:dstField.integerFixed5 = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
/*!*/	if (src == &quot;number&quot;)		{ dstField.integerFixed5 = 123;			 				result += &quot;|INFO:dstField.integerFixed5 = 123;&quot;; } else&#xD;
		if (src == &quot;bigint&quot;)		{ dstField.integerFixed5 = ScriptUtil.createBigInteger(123);result += &quot;|INFO:dstField.integerFixed5 = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.integerFixed5 = srcField.bool; 				result += &quot;|INFO:dstField.integerFixed5 = srcField.bool;&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.integerFixed5 = srcField.date; 				result += &quot;|INFO:dstField.integerFixed5 = srcField.date;&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.integerFixed5 = srcField.time; 				result += &quot;|INFO:dstField.integerFixed5 = srcField.time;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.integerFixed5 = srcField.datetime; 			result += &quot;|INFO:dstField.integerFixed5 = srcField.datetime;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.integerFixed5 = srcField.datetimetz; 		result += &quot;|INFO:dstField.integerFixed5 = srcField.datetimetz;&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.integerFixed5 = srcField.decimalFloat; 		result += &quot;|INFO:dstField.integerFixed5 = srcField.decimalFloat;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.integerFixed5 = srcField.decimalFixed8Dot4; 	result += &quot;|INFO:dstField.integerFixed5 = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.integerFixed5 = srcField.integerSigned; 		result += &quot;|INFO:dstField.integerFixed5 = srcField.integerSigned;&quot;; } else&#xD;
		if (src == &quot;intFixed&quot;) 		{ dstField.integerFixed5 = srcField.integerFixed5; 		result += &quot;|INFO:dstField.integerFixed5 = srcField.integerFixed5;&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.integerFixed5 = srcField.text20; 			result += &quot;|INFO:dstField.integerFixed5 = srcField.text20;&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.integerFixed5 = srcField.duration; 			result += &quot;|INFO:dstField.integerFixed5 = srcField.duration;&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.integerFixed5 = srcField.id; 				result += &quot;|INFO:dstField.integerFixed5 = srcField.id;&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.integerFixed5 = srcField.uri; 				result += &quot;|INFO:dstField.integerFixed5 = srcField.uri;&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.integerFixed5 = srcField.boolList; 				result += &quot;|INFO:dstField.integerFixed5 = srcField.boolList;&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.integerFixed5 = srcField.dateList; 				result += &quot;|INFO:dstField.integerFixed5 = srcField.dateList;&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.integerFixed5 = srcField.timeList; 				result += &quot;|INFO:dstField.integerFixed5 = srcField.timeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.integerFixed5 = srcField.datetimeList; 			result += &quot;|INFO:dstField.integerFixed5 = srcField.datetimeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.integerFixed5 = srcField.datetimetzList; 		result += &quot;|INFO:dstField.integerFixed5 = srcField.datetimetzList;&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.integerFixed5 = srcField.decimalFloatList; 		result += &quot;|INFO:dstField.integerFixed5 = srcField.decimalFloatList;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.integerFixed5 = srcField.decimalFixed8Dot4List; 	result += &quot;|INFO:dstField.integerFixed5 = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.integerFixed5 = srcField.integerSignedList; 		result += &quot;|INFO:dstField.integerFixed5 = srcField.integerSignedList;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.integerFixed5 = srcField.integerFixed5List; 		result += &quot;|INFO:dstField.integerFixed5 = srcField.integerFixed5List;&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.integerFixed5 = srcField.text20List; 			result += &quot;|INFO:dstField.integerFixed5 = srcField.text20List;&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.integerFixed5 = srcField.durationList; 			result += &quot;|INFO:dstField.integerFixed5 = srcField.durationList;&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.integerFixed5 = srcField.idList; 				result += &quot;|INFO:dstField.integerFixed5 = srcField.idList;&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.integerFixed5 = srcField.uriList; 				result += &quot;|INFO:dstField.integerFixed5 = srcField.uriList;&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;create&quot;) {&#xD;
		if (src == &quot;bool&quot;) 			{ dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.bool); 				result += &quot;|INFO:dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.bool);&quot;; } else&#xD;
		if (src == &quot;decimalFloat&quot;) 	{ dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.decimalFloat); 		result += &quot;|INFO:dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.decimalFloat);&quot;; } else&#xD;
		if (src == &quot;decimalFixed&quot;) 	{ dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.decimalFixed8Dot4); result += &quot;|INFO:dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
		if (src == &quot;intSigned&quot;) 	{ dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.integerSigned); 	result += &quot;|INFO:dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.integerSigned);&quot;; } else&#xD;
		if (src == &quot;intFixed&quot;) 		{ dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.integerFixed5); 	result += &quot;|INFO:dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.integerFixed5);&quot;; } else&#xD;
		if (src == &quot;text&quot;) 			{ dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.text20); 			result += &quot;|INFO:dstField.integerFixed5 = ScriptUtil.createBigInteger(srcField.text20);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;text&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
		if (src == &quot;boolt&quot;)			{ dstField.text20 = true; 								result += &quot;|INFO:dstField.text20 = true;&quot;; } else&#xD;
		if (src == &quot;boolf&quot;)			{ dstField.text20 = false;		 						result += &quot;|INFO:dstField.text20 = false;&quot;; } else&#xD;
		if (src == &quot;string&quot;)		{ dstField.text20 = &quot;Hello World!&quot;; 					result += &quot;|INFO:dstField.text20 = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
		if (src == &quot;number&quot;)		{ dstField.text20 = 123;			 					result += &quot;|INFO:dstField.text20 = 123;&quot;; } else&#xD;
		if (src == &quot;bigint&quot;)		{ dstField.text20 = ScriptUtil.createBigInteger(123);	result += &quot;|INFO:dstField.text20 = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
		if (src == &quot;bool&quot;) 			{ dstField.text20 = srcField.bool; 						result += &quot;|INFO:dstField.text20 = srcField.bool;&quot;; } else&#xD;
		if (src == &quot;date&quot;) 			{ dstField.text20 = srcField.date; 						result += &quot;|INFO:dstField.text20 = srcField.date;&quot;; } else&#xD;
		if (src == &quot;time&quot;) 			{ dstField.text20 = srcField.time; 						result += &quot;|INFO:dstField.text20 = srcField.time;&quot;; } else&#xD;
		if (src == &quot;datetime&quot;) 		{ dstField.text20 = srcField.datetime; 					result += &quot;|INFO:dstField.text20 = srcField.datetime;&quot;; } else&#xD;
		if (src == &quot;datetimetz&quot;) 	{ dstField.text20 = srcField.datetimetz; 				result += &quot;|INFO:dstField.text20 = srcField.datetimetz;&quot;; } else	&#xD;
		if (src == &quot;decimalFloat&quot;) 	{ dstField.text20 = srcField.decimalFloat; 				result += &quot;|INFO:dstField.text20 = srcField.decimalFloat;&quot;; } else&#xD;
		if (src == &quot;decimalFixed&quot;) 	{ dstField.text20 = srcField.decimalFixed8Dot4; 		result += &quot;|INFO:dstField.text20 = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
		if (src == &quot;intSigned&quot;) 	{ dstField.text20 = srcField.integerSigned; 			result += &quot;|INFO:dstField.text20 = srcField.integerSigned;&quot;; } else&#xD;
		if (src == &quot;intFixed&quot;) 		{ dstField.text20 = srcField.integerFixed5; 			result += &quot;|INFO:dstField.text20 = srcField.integerFixed5;&quot;; } else&#xD;
		if (src == &quot;text&quot;) 			{ dstField.text20 = srcField.text20; 					result += &quot;|INFO:dstField.text20 = srcField.text20;&quot;; } else&#xD;
		if (src == &quot;duration&quot;) 		{ dstField.text20 = srcField.duration; 					result += &quot;|INFO:dstField.text20 = srcField.duration;&quot;; } else&#xD;
		if (src == &quot;id&quot;) 			{ dstField.text20 = srcField.id; 						result += &quot;|INFO:dstField.text20 = srcField.id;&quot;; } else&#xD;
		if (src == &quot;uri&quot;) 			{ dstField.text20 = srcField.uri; 						result += &quot;|INFO:dstField.text20 = srcField.uri;&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.text20 = srcField.boolList; 						result += &quot;|INFO:dstField.text20 = srcField.boolList;&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.text20 = srcField.dateList; 						result += &quot;|INFO:dstField.text20 = srcField.dateList;&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.text20 = srcField.timeList; 						result += &quot;|INFO:dstField.text20 = srcField.timeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.text20 = srcField.datetimeList; 					result += &quot;|INFO:dstField.text20 = srcField.datetimeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.text20 = srcField.datetimetzList; 				result += &quot;|INFO:dstField.text20 = srcField.datetimetzList;&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.text20 = srcField.decimalFloatList; 				result += &quot;|INFO:dstField.text20 = srcField.decimalFloatList;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.text20 = srcField.decimalFixed8Dot4List; 		result += &quot;|INFO:dstField.text20 = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.text20 = srcField.integerSignedList; 			result += &quot;|INFO:dstField.text20 = srcField.integerSignedList;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.text20 = srcField.integerFixed5List; 			result += &quot;|INFO:dstField.text20 = srcField.integerFixed5List;&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.text20 = srcField.text20List; 					result += &quot;|INFO:dstField.text20 = srcField.text20List;&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.text20 = srcField.durationList; 					result += &quot;|INFO:dstField.text20 = srcField.durationList;&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.text20 = srcField.idList; 						result += &quot;|INFO:dstField.text20 = srcField.idList;&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.text20 = srcField.uriList; 						result += &quot;|INFO:dstField.text20 = srcField.uriList;&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;duration&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
/*!*/	if (src == &quot;boolt&quot;)			{ dstField.duration = true; 							result += &quot;|INFO:dstField.duration = true;&quot;; } else&#xD;
/*!*/	if (src == &quot;boolf&quot;)			{ dstField.duration = false;		 					result += &quot;|INFO:dstField.duration = false;&quot;; } else&#xD;
/*!*/	if (src == &quot;string&quot;)		{ dstField.duration = &quot;Hello World!&quot;; 					result += &quot;|INFO:dstField.duration = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
/*!*/	if (src == &quot;number&quot;)		{ dstField.duration = 123;			 					result += &quot;|INFO:dstField.duration = 123;&quot;; } else&#xD;
/*!*/	if (src == &quot;bigint&quot;)		{ dstField.duration = ScriptUtil.createBigInteger(123);	result += &quot;|INFO:dstField.duration = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.duration = srcField.bool; 					result += &quot;|INFO:dstField.duration = srcField.bool;&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.duration = srcField.date; 					result += &quot;|INFO:dstField.duration = srcField.date;&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.duration = srcField.time; 					result += &quot;|INFO:dstField.duration = srcField.time;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.duration = srcField.datetime; 				result += &quot;|INFO:dstField.duration = srcField.datetime;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.duration = srcField.datetimetz; 				result += &quot;|INFO:dstField.duration = srcField.datetimetz;&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.duration = srcField.decimalFloat; 			result += &quot;|INFO:dstField.duration = srcField.decimalFloat;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.duration = srcField.decimalFixed8Dot4; 		result += &quot;|INFO:dstField.duration = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.duration = srcField.integerSigned; 			result += &quot;|INFO:dstField.duration = srcField.integerSigned;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.duration = srcField.integerFixed5; 			result += &quot;|INFO:dstField.duration = srcField.integerFixed5;&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.duration = srcField.text20; 					result += &quot;|INFO:dstField.duration = srcField.text20;&quot;; } else&#xD;
		if (src == &quot;duration&quot;) 		{ dstField.duration = srcField.duration; 				result += &quot;|INFO:dstField.duration = srcField.duration;&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.duration = srcField.id; 						result += &quot;|INFO:dstField.duration = srcField.id;&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.duration = srcField.uri; 					result += &quot;|INFO:dstField.duration = srcField.uri;&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.duration = srcField.boolList; 					result += &quot;|INFO:dstField.duration = srcField.boolList;&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.duration = srcField.dateList; 					result += &quot;|INFO:dstField.duration = srcField.dateList;&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.duration = srcField.timeList; 					result += &quot;|INFO:dstField.duration = srcField.timeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.duration = srcField.datetimeList; 				result += &quot;|INFO:dstField.duration = srcField.datetimeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.duration = srcField.datetimetzList; 				result += &quot;|INFO:dstField.duration = srcField.datetimetzList;&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.duration = srcField.decimalFloatList; 			result += &quot;|INFO:dstField.duration = srcField.decimalFloatList;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.duration = srcField.decimalFixed8Dot4List; 		result += &quot;|INFO:dstField.duration = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.duration = srcField.integerSignedList; 			result += &quot;|INFO:dstField.duration = srcField.integerSignedList;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.duration = srcField.integerFixed5List; 			result += &quot;|INFO:dstField.duration = srcField.integerFixed5List;&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.duration = srcField.text20List; 					result += &quot;|INFO:dstField.duration = srcField.text20List;&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.duration = srcField.durationList; 				result += &quot;|INFO:dstField.duration = srcField.durationList;&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.duration = srcField.idList; 						result += &quot;|INFO:dstField.duration = srcField.idList;&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.duration = srcField.uriList; 					result += &quot;|INFO:dstField.duration = srcField.uriList;&quot;; } else&#xD;
								{ 															result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;create&quot;) {&#xD;
		if (src == &quot;decimalFloat&quot;) 	{ dstField.duration = DateTimeUtil.createDuration(srcField.decimalFloat); 		result += &quot;|INFO:dstField.duration = DateTimeUtil.createDuration(srcField.decimalFloat);&quot;; } else&#xD;
		if (src == &quot;decimalFixed&quot;) 	{ dstField.duration = DateTimeUtil.createDuration(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.duration = DateTimeUtil.createDuration(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
		if (src == &quot;intSigned&quot;) 	{ dstField.duration = DateTimeUtil.createDuration(srcField.integerSigned); 		result += &quot;|INFO:dstField.duration = DateTimeUtil.createDuration(srcField.integerSigned);&quot;; } else&#xD;
		if (src == &quot;intFixed&quot;) 		{ dstField.duration = DateTimeUtil.createDuration(srcField.integerFixed5.multiply(ScriptUtil.createBigInteger(&quot;1000&quot;))); 		result += &quot;|INFO:dstField.duration = DateTimeUtil.createDuration(srcField.integerFixed5);&quot;; } else&#xD;
		if (src == &quot;text&quot;) 			{ dstField.duration = DateTimeUtil.createDuration(srcField.text20); 			result += &quot;|INFO:dstField.duration = DateTimeUtil.createDuration(srcField.text20);&quot;; } else&#xD;
		if (src == &quot;duration&quot;) 		{ dstField.duration = DateTimeUtil.createDuration(srcField.duration); 			result += &quot;|INFO:dstField.duration = DateTimeUtil.createDuration(srcField.duration);&quot;; } else&#xD;
								{ 																					result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;createx&quot;) {&#xD;
		if (src == &quot;text&quot;) { &#xD;
			var str  = srcField.text20; //+YYYMMMDDDhhhmmmsss or -YYYMMMDDDhhhmmmsss&#xD;
			var pos  = (str.substr(0,1) == &quot;+&quot;);&#xD;
			var year = Number(str.substr(1,3));&#xD;
			var mon  = Number(str.substr(4,3));&#xD;
			var day  = Number(str.substr(7,3));&#xD;
			var hour = Number(str.substr(10,3));&#xD;
			var min  = Number(str.substr(13,3));&#xD;
			var sec  = Number(str.substr(17,3));&#xD;
			dstField.duration = DateTimeUtil.createDuration(pos,year,mon,day,hour,min,sec); 			&#xD;
			result += &quot;|INFO:dstField.duration = DateTimeUtil.createDuration(pos,year,mon,day,hour,min,sec); [&quot;+pos+&quot;,&quot;+year+&quot;,&quot;+mon+&quot;,&quot;+mon+&quot;,&quot;+day+&quot;,&quot;+hour+&quot;,&quot;+min+&quot;,&quot;+sec+&quot;]&quot;; &#xD;
		} else if (src == &quot;decimalFixed&quot; &amp;&amp; src2 == &quot;text&quot;) { &#xD;
			var str  = srcField2.text20; //+YYYMMMDDDhhhmmm or -YYYMMMDDDhhhmmm (and SSSS.ssss in srcField)&#xD;
			var pos  = (str.substr(0,1) == &quot;+&quot;);&#xD;
			var year = Number(str.substr(1,3));&#xD;
			var mon  = Number(str.substr(4,3));&#xD;
			var day  = Number(str.substr(7,3));&#xD;
			var hour = Number(str.substr(10,3));&#xD;
			var min  = Number(str.substr(13,3));&#xD;
			dstField.duration = DateTimeUtil.createDuration(pos,year,mon,day,hour,min,srcField.decimalFixed8Dot4); 			&#xD;
			result += &quot;|INFO:dstField.duration = DateTimeUtil.createDuration(pos,year,mon,day,hour,min,srcField.decimalFixed8Dot4); [&quot;+pos+&quot;,&quot;+year+&quot;,&quot;+mon+&quot;,&quot;+mon+&quot;,&quot;+day+&quot;,&quot;+hour+&quot;,&quot;+min+&quot;,&quot;+srcField.decimalFixed8Dot4+&quot;]&quot;; &#xD;
		} else {&#xD;
			result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
		}&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;id&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
/*!*/	if (src == &quot;boolt&quot;)			{ dstField.id = true; 									result += &quot;|INFO:dstField.id = true;&quot;; } else&#xD;
/*!*/	if (src == &quot;boolf&quot;)			{ dstField.id = false;		 							result += &quot;|INFO:dstField.id = false;&quot;; } else&#xD;
		if (src == &quot;string&quot;)		{ dstField.id = &quot;Hello World!&quot;; 						result += &quot;|INFO:dstField.id = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
/*!*/	if (src == &quot;number&quot;)		{ dstField.id = 123;			 						result += &quot;|INFO:dstField.id = 123;&quot;; } else&#xD;
/*!*/	if (src == &quot;bigint&quot;)		{ dstField.id = ScriptUtil.createBigInteger(123);		result += &quot;|INFO:dstField.id = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.id = srcField.bool; 							result += &quot;|INFO:dstField.id = srcField.bool;&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.id = srcField.date; 							result += &quot;|INFO:dstField.id = srcField.date;&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.id = srcField.time; 							result += &quot;|INFO:dstField.id = srcField.time;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.id = srcField.datetime; 						result += &quot;|INFO:dstField.id = srcField.datetime;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.id = srcField.datetimetz; 					result += &quot;|INFO:dstField.id = srcField.datetimetz;&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.id = srcField.decimalFloat; 					result += &quot;|INFO:dstField.id = srcField.decimalFloat;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.id = srcField.decimalFixed8Dot4; 			result += &quot;|INFO:dstField.id = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.id = srcField.integerSigned; 				result += &quot;|INFO:dstField.id = srcField.integerSigned;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.id = srcField.integerFixed5; 				result += &quot;|INFO:dstField.id = srcField.integerFixed5;&quot;; } else&#xD;
		if (src == &quot;text&quot;) 			{ dstField.id = srcField.text20; 						result += &quot;|INFO:dstField.id = srcField.text20;&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.id = srcField.duration; 						result += &quot;|INFO:dstField.id = srcField.duration;&quot;; } else&#xD;
		if (src == &quot;id&quot;) 			{ dstField.id = srcField.id; 							result += &quot;|INFO:dstField.id = srcField.id;&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.id = srcField.uri; 							result += &quot;|INFO:dstField.id = srcField.uri;&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.id = srcField.boolList; 							result += &quot;|INFO:dstField.id = srcField.boolList;&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.id = srcField.dateList; 							result += &quot;|INFO:dstField.id = srcField.dateList;&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.id = srcField.timeList; 							result += &quot;|INFO:dstField.id = srcField.timeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.id = srcField.datetimeList; 						result += &quot;|INFO:dstField.id = srcField.datetimeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.id = srcField.datetimetzList; 					result += &quot;|INFO:dstField.id = srcField.datetimetzList;&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.id = srcField.decimalFloatList; 					result += &quot;|INFO:dstField.id = srcField.decimalFloatList;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.id = srcField.decimalFixed8Dot4List; 			result += &quot;|INFO:dstField.id = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.id = srcField.integerSignedList; 				result += &quot;|INFO:dstField.id = srcField.integerSignedList;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.id = srcField.integerFixed5List; 				result += &quot;|INFO:dstField.id = srcField.integerFixed5List;&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.id = srcField.text20List; 						result += &quot;|INFO:dstField.id = srcField.text20List;&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.id = srcField.durationList; 						result += &quot;|INFO:dstField.id = srcField.durationList;&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.id = srcField.idList; 							result += &quot;|INFO:dstField.id = srcField.idList;&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.id = srcField.uriList; 							result += &quot;|INFO:dstField.id = srcField.uriList;&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;uri&quot;) {&#xD;
	if (opCode == &quot;assign&quot;) {&#xD;
		// Constant assignments&#xD;
/*!*/	if (src == &quot;boolt&quot;)			{ dstField.uri = true; 									result += &quot;|INFO:dstField.uri = true;&quot;; } else&#xD;
/*!*/	if (src == &quot;boolf&quot;)			{ dstField.uri = false;		 							result += &quot;|INFO:dstField.bouriol = false;&quot;; } else&#xD;
		if (src == &quot;string&quot;)		{ dstField.uri = &quot;Hello World!&quot;; 						result += &quot;|INFO:dstField.uri = \&quot;Hello World!\&quot;;&quot;; } else&#xD;
/*!*/	if (src == &quot;number&quot;)		{ dstField.uri = 123;			 						result += &quot;|INFO:dstField.uri = 123;&quot;; } else&#xD;
/*!*/	if (src == &quot;bigint&quot;)		{ dstField.uri = ScriptUtil.createBigInteger(123);		result += &quot;|INFO:dstField.uri = ScriptUtil.createBigInteger(123);&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.uri = srcField.bool; 						result += &quot;|INFO:dstField.uri = srcField.bool;&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.uri = srcField.date; 						result += &quot;|INFO:dstField.uri = srcField.date;&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.uri = srcField.time; 						result += &quot;|INFO:dstField.uri = srcField.time;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.uri = srcField.datetime; 					result += &quot;|INFO:dstField.uri = srcField.datetime;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.uri = srcField.datetimetz; 					result += &quot;|INFO:dstField.uri = srcField.datetimetz;&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.uri = srcField.decimalFloat; 				result += &quot;|INFO:dstField.uri = srcField.decimalFloat;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.uri = srcField.decimalFixed8Dot4; 			result += &quot;|INFO:dstField.uri = srcField.decimalFixed8Dot4;&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.uri = srcField.integerSigned; 				result += &quot;|INFO:dstField.uri = srcField.integerSigned;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.uri = srcField.integerFixed5; 				result += &quot;|INFO:dstField.uri = srcField.integerFixed5;&quot;; } else&#xD;
		if (src == &quot;text&quot;) 			{ dstField.uri = srcField.text20; 						result += &quot;|INFO:dstField.uri = srcField.text20;&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.uri = srcField.duration; 					result += &quot;|INFO:dstField.uri = srcField.duration;&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.uri = srcField.id; 							result += &quot;|INFO:dstField.uri = srcField.id;&quot;; } else&#xD;
		if (src == &quot;uri&quot;) 			{ dstField.uri = srcField.uri; 							result += &quot;|INFO:dstField.uri = srcField.uri;&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.uri = srcField.boolList; 						result += &quot;|INFO:dstField.uri = srcField.boolList;&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.uri = srcField.dateList; 						result += &quot;|INFO:dstField.uri = srcField.dateList;&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.uri = srcField.timeList; 						result += &quot;|INFO:dstField.uri = srcField.timeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.uri = srcField.datetimeList; 					result += &quot;|INFO:dstField.uri = srcField.datetimeList;&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.uri = srcField.datetimetzList; 					result += &quot;|INFO:dstField.uri = srcField.datetimetzList;&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.uri = srcField.decimalFloatList; 				result += &quot;|INFO:dstField.uri = srcField.decimalFloatList;&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.uri = srcField.decimalFixed8Dot4List; 			result += &quot;|INFO:dstField.uri = srcField.decimalFixed8Dot4List;&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.uri = srcField.integerSignedList; 				result += &quot;|INFO:dstField.uri = srcField.integerSignedList;&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.uri = srcField.integerFixed5List; 				result += &quot;|INFO:dstField.uri = srcField.integerFixed5List;&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.uri = srcField.text20List; 						result += &quot;|INFO:dstField.uri = srcField.text20List;&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.uri = srcField.durationList; 					result += &quot;|INFO:dstField.uri = srcField.durationList;&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.uri = srcField.idList; 							result += &quot;|INFO:dstField.uri = srcField.idList;&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.uri = srcField.uriList; 							result += &quot;|INFO:dstField.uri = srcField.uriList;&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;boolList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
		if (src == &quot;boolt&quot;)			{ dstField.boolList.add(true); 							result += &quot;|INFO:dstField.boolList.add(true);&quot;; } else&#xD;
		if (src == &quot;boolf&quot;)			{ dstField.boolList.add(false);		 					result += &quot;|INFO:dstField.boolList.add(false);&quot;; } else&#xD;
/*!*/	if (src == &quot;string&quot;)		{ dstField.boolList.add(&quot;Hello World!&quot;); 				result += &quot;|INFO:dstField.boolList.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
/*!*/	if (src == &quot;number&quot;)		{ dstField.boolList.add(123);			 				result += &quot;|INFO:dstField.boolList.add(123);&quot;; } else&#xD;
/*!*/	if (src == &quot;bigint&quot;)		{ dstField.boolList.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.boolList.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
		if (src == &quot;bool&quot;) 			{ dstField.boolList.add(srcField.bool); 				result += &quot;|INFO:dstField.boolList.add(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.boolList.add(srcField.date); 				result += &quot;|INFO:dstField.boolList.add(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.boolList.add(srcField.time); 				result += &quot;|INFO:dstField.boolList.add(srcField.time);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.boolList.add(srcField.datetime); 			result += &quot;|INFO:dstField.boolList.add(srcField.datetime);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.boolList.add(srcField.datetimetz); 			result += &quot;|INFO:dstField.boolList.add(srcField.datetimetz);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.boolList.add(srcField.decimalFloat); 		result += &quot;|INFO:dstField.boolList.add(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.boolList.add(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.boolList.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.boolList.add(srcField.integerSigned); 		result += &quot;|INFO:dstField.boolList.add(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.boolList.add(srcField.integerFixed5); 		result += &quot;|INFO:dstField.boolList.add(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.boolList.add(srcField.text20); 				result += &quot;|INFO:dstField.boolList.add(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.boolList.add(srcField.duration); 			result += &quot;|INFO:dstField.boolList.add(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.boolList.add(srcField.id); 					result += &quot;|INFO:dstField.boolList.add(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.boolList.add(srcField.uri); 					result += &quot;|INFO:dstField.boolList.add(srcField.uri);&quot;; } else&#xD;
&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.boolList.add(srcField.boolList); 				result += &quot;|INFO:dstField.boolList.add(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.boolList.add(srcField.dateList); 				result += &quot;|INFO:dstField.boolList.add(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.boolList.add(srcField.timeList); 				result += &quot;|INFO:dstField.boolList.add(srcField.timeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.boolList.add(srcField.datetimeList); 			result += &quot;|INFO:dstField.boolList.add(srcField.datetimeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.boolList.add(srcField.datetimetzList); 			result += &quot;|INFO:dstField.boolList.add(srcField.datetimetzList);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.boolList.add(srcField.decimalFloatList); 		result += &quot;|INFO:dstField.boolList.add(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.boolList.add(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.boolList.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.boolList.add(srcField.integerSignedList); 		result += &quot;|INFO:dstField.boolList.add(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.boolList.add(srcField.integerFixed5List); 		result += &quot;|INFO:dstField.boolList.add(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.boolList.add(srcField.text20List); 				result += &quot;|INFO:dstField.boolList.add(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.boolList.add(srcField.durationList); 			result += &quot;|INFO:dstField.boolList.add(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.boolList.add(srcField.idList); 					result += &quot;|INFO:dstField.boolList.add(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.boolList.add(srcField.uriList); 					result += &quot;|INFO:dstField.boolList.add(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;' (with direct assignment)&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) 	{&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.boolList.addAll(srcField.bool); 				result += &quot;|INFO:dstField.boolList.addAll(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.boolList.addAll(srcField.date); 				result += &quot;|INFO:dstField.boolList.addAll(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.boolList.addAll(srcField.time); 				result += &quot;|INFO:dstField.boolList.addAll(srcField.time);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.boolList.addAll(srcField.datetime); 			result += &quot;|INFO:dstField.boolList.addAll(srcField.datetime);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.boolList.addAll(srcField.datetimetz); 		result += &quot;|INFO:dstField.boolList.addAll(srcField.datetimetz);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.boolList.addAll(srcField.decimalFloat); 		result += &quot;|INFO:dstField.boolList.addAll(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.boolList.addAll(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.boolList.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.boolList.addAll(srcField.integerSigned); 	result += &quot;|INFO:dstField.boolList.addAll(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.boolList.addAll(srcField.integerFixed5); 	result += &quot;|INFO:dstField.boolList.addAll(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.boolList.addAll(srcField.text20); 			result += &quot;|INFO:dstField.boolList.addAll(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.boolList.addAll(srcField.duration); 			result += &quot;|INFO:dstField.boolList.addAll(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.boolList.addAll(srcField.id); 				result += &quot;|INFO:dstField.boolList.addAll(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.boolList.addAll(srcField.uri); 				result += &quot;|INFO:dstField.boolList.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
&#xD;
		if (src == &quot;boolList&quot;) 			{ dstField.boolList.addAll(srcField.boolList); 				result += &quot;|INFO:dstField.boolList.addAll(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.boolList.addAll(srcField.dateList); 				result += &quot;|INFO:dstField.boolList.addAll(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.boolList.addAll(srcField.timeList); 				result += &quot;|INFO:dstField.boolList.addAll(srcField.timeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.boolList.addAll(srcField.datetimeList); 			result += &quot;|INFO:dstField.boolList.addAll(srcField.datetimeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.boolList.addAll(srcField.datetimetzList); 			result += &quot;|INFO:dstField.boolList.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.boolList.addAll(srcField.decimalFloatList); 		result += &quot;|INFO:dstField.boolList.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.boolList.addAll(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.boolList.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.boolList.addAll(srcField.integerSignedList); 		result += &quot;|INFO:dstField.boolList.addAll(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.boolList.addAll(srcField.integerFixed5List); 		result += &quot;|INFO:dstField.boolList.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.boolList.addAll(srcField.text20List); 				result += &quot;|INFO:dstField.boolList.addAll(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.boolList.addAll(srcField.durationList); 			result += &quot;|INFO:dstField.boolList.addAll(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.boolList.addAll(srcField.idList); 					result += &quot;|INFO:dstField.boolList.addAll(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.boolList.addAll(srcField.uriList); 					result += &quot;|INFO:dstField.boolList.addAll(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;' (with direct assignment)&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}&#xD;
} else if (dst == &quot;dateList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
/*!*/	if (src == &quot;boolt&quot;)			{ dstField.dateList.add(true); 							result += &quot;|INFO:dstField.dateList.add(true);&quot;; } else&#xD;
/*!*/	if (src == &quot;boolf&quot;)			{ dstField.dateList.add(false);		 					result += &quot;|INFO:dstField.dateList.add(false);&quot;; } else&#xD;
/*!*/	if (src == &quot;string&quot;)		{ dstField.dateList.add(&quot;Hello World!&quot;); 				result += &quot;|INFO:dstField.dateList.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
/*!*/	if (src == &quot;number&quot;)		{ dstField.dateList.add(123);			 				result += &quot;|INFO:dstField.dateList.add(123);&quot;; } else&#xD;
/*!*/	if (src == &quot;bigint&quot;)		{ dstField.dateList.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.dateList.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.dateList.add(srcField.bool); 				result += &quot;|INFO:dstField.dateList.add(srcField.bool);&quot;; } else&#xD;
		if (src == &quot;date&quot;) 			{ dstField.dateList.add(srcField.date); 				result += &quot;|INFO:dstField.dateList.add(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.dateList.add(srcField.time); 				result += &quot;|INFO:dstField.dateList.add(srcField.time);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.dateList.add(srcField.datetime); 			result += &quot;|INFO:dstField.dateList.add(srcField.datetime);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.dateList.add(srcField.datetimetz); 			result += &quot;|INFO:dstField.dateList.add(srcField.datetimetz);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.dateList.add(srcField.decimalFloat); 		result += &quot;|INFO:dstField.dateList.add(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.dateList.add(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.dateList.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.dateList.add(srcField.integerSigned); 		result += &quot;|INFO:dstField.dateList.add(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.dateList.add(srcField.integerFixed5); 		result += &quot;|INFO:dstField.dateList.add(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.dateList.add(srcField.text20); 				result += &quot;|INFO:dstField.dateList.add(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.dateList.add(srcField.duration); 			result += &quot;|INFO:dstField.dateList.add(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.dateList.add(srcField.id); 					result += &quot;|INFO:dstField.dateList.add(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.dateList.add(srcField.uri); 					result += &quot;|INFO:dstField.dateList.add(srcField.uri);&quot;; } else&#xD;
&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.dateList.add(srcField.boolList); 				result += &quot;|INFO:dstField.dateList.add(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.dateList.add(srcField.dateList); 				result += &quot;|INFO:dstField.dateList.add(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.dateList.add(srcField.timeList); 				result += &quot;|INFO:dstField.dateList.add(srcField.timeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.dateList.add(srcField.datetimeList); 			result += &quot;|INFO:dstField.dateList.add(srcField.datetimeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.dateList.add(srcField.datetimetzList); 			result += &quot;|INFO:dstField.dateList.add(srcField.datetimetzList);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.dateList.add(srcField.decimalFloatList); 		result += &quot;|INFO:dstField.dateList.add(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.dateList.add(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.dateList.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.dateList.add(srcField.integerSignedList); 		result += &quot;|INFO:dstField.dateList.add(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.dateList.add(srcField.integerFixed5List); 		result += &quot;|INFO:dstField.dateList.add(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.dateList.add(srcField.text20List); 				result += &quot;|INFO:dstField.dateList.add(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.dateList.add(srcField.durationList); 			result += &quot;|INFO:dstField.dateList.add(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.dateList.add(srcField.idList); 					result += &quot;|INFO:dstField.dateList.add(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.dateList.add(srcField.uriList); 					result += &quot;|INFO:dstField.dateList.add(srcField.uriList);&quot;; } else&#xD;
												{ 											result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.dateList.addAll(srcField.bool); 				result += &quot;|INFO:dstField.dateList.addAll(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.dateList.addAll(srcField.date); 				result += &quot;|INFO:dstField.dateList.addAll(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.dateList.addAll(srcField.time); 				result += &quot;|INFO:dstField.dateList.addAll(srcField.time);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.dateList.addAll(srcField.datetime); 			result += &quot;|INFO:dstField.dateList.addAll(srcField.datetime);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.dateList.addAll(srcField.datetimetz); 			result += &quot;|INFO:dstField.dateList.addAll(srcField.datetimetz);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.dateList.addAll(srcField.decimalFloat); 		result += &quot;|INFO:dstField.dateList.addAll(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.dateList.addAll(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.dateList.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.dateList.addAll(srcField.integerSigned); 		result += &quot;|INFO:dstField.dateList.addAll(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.dateList.addAll(srcField.integerFixed5); 		result += &quot;|INFO:dstField.dateList.addAll(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.dateList.addAll(srcField.text20); 				result += &quot;|INFO:dstField.dateList.addAll(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.dateList.addAll(srcField.duration); 			result += &quot;|INFO:dstField.dateList.addAll(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.dateList.addAll(srcField.id); 					result += &quot;|INFO:dstField.dateList.addAll(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.dateList.addAll(srcField.uri); 					result += &quot;|INFO:dstField.dateList.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.dateList.addAll(srcField.boolList); 				result += &quot;|INFO:dstField.dateList.addAll(srcField.boolList);&quot;; } else&#xD;
		if (src == &quot;dateList&quot;) 			{ dstField.dateList.addAll(srcField.dateList); 				result += &quot;|INFO:dstField.dateList.addAll(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.dateList.addAll(srcField.timeList); 				result += &quot;|INFO:dstField.dateList.addAll(srcField.timeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.dateList.addAll(srcField.datetimeList); 			result += &quot;|INFO:dstField.dateList.addAll(srcField.datetimeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.dateList.addAll(srcField.datetimetzList); 			result += &quot;|INFO:dstField.dateList.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.dateList.addAll(srcField.decimalFloatList); 		result += &quot;|INFO:dstField.dateList.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.dateList.addAll(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.dateList.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.dateList.addAll(srcField.integerSignedList); 		result += &quot;|INFO:dstField.dateList.addAll(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.dateList.addAll(srcField.integerFixed5List); 		result += &quot;|INFO:dstField.dateList.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.dateList.addAll(srcField.text20List); 				result += &quot;|INFO:dstField.dateList.addAll(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.dateList.addAll(srcField.durationList); 			result += &quot;|INFO:dstField.dateList.addAll(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.dateList.addAll(srcField.idList); 					result += &quot;|INFO:dstField.dateList.addAll(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.dateList.addAll(srcField.uriList); 					result += &quot;|INFO:dstField.dateList.addAll(srcField.uriList);&quot;; } else&#xD;
												{ 											result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;timeList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
/*!*/	if (src == &quot;boolt&quot;)			{ dstField.timeList.add(true); 							result += &quot;|INFO:dstField.timeList.add(true);&quot;; } else&#xD;
/*!*/	if (src == &quot;boolf&quot;)			{ dstField.timeList.add(false);		 					result += &quot;|INFO:dstField.timeList.add(false);&quot;; } else&#xD;
/*!*/	if (src == &quot;string&quot;)		{ dstField.timeList.add(&quot;Hello World!&quot;); 				result += &quot;|INFO:dstField.timeList.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
/*!*/	if (src == &quot;number&quot;)		{ dstField.timeList.add(123);			 				result += &quot;|INFO:dstField.timeList.add(123);&quot;; } else&#xD;
/*!*/	if (src == &quot;bigint&quot;)		{ dstField.timeList.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.timeList.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.timeList.add(srcField.bool); 				result += &quot;|INFO:dstField.timeList.add(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.timeList.add(srcField.date); 				result += &quot;|INFO:dstField.timeList.add(srcField.date);&quot;; } else&#xD;
		if (src == &quot;time&quot;) 			{ dstField.timeList.add(srcField.time); 				result += &quot;|INFO:dstField.timeList.add(srcField.time);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.timeList.add(srcField.datetime); 			result += &quot;|INFO:dstField.timeList.add(srcField.datetime);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.timeList.add(srcField.datetimetz); 			result += &quot;|INFO:dstField.timeList.add(srcField.datetimetz);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.timeList.add(srcField.decimalFloat); 		result += &quot;|INFO:dstField.timeList.add(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.timeList.add(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.timeList.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;)	 	{ dstField.timeList.add(srcField.integerSigned); 		result += &quot;|INFO:dstField.timeList.add(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.timeList.add(srcField.integerFixed5); 		result += &quot;|INFO:dstField.timeList.add(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.timeList.add(srcField.text20); 				result += &quot;|INFO:dstField.timeList.add(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.timeList.add(srcField.duration); 			result += &quot;|INFO:dstField.timeList.add(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.timeList.add(srcField.id); 					result += &quot;|INFO:dstField.timeList.add(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.timeList.add(srcField.uri); 					result += &quot;|INFO:dstField.timeList.add(srcField.uri);&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.timeList.add(srcField.boolList); 				result += &quot;|INFO:dstField.timeList.add(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.timeList.add(srcField.dateList); 				result += &quot;|INFO:dstField.timeList.add(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.timeList.add(srcField.timeList); 				result += &quot;|INFO:dstField.timeList.add(srcField.timeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.timeList.add(srcField.datetimeList); 			result += &quot;|INFO:dstField.timeList.add(srcField.datetimeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.timeList.add(srcField.datetimetzList); 			result += &quot;|INFO:dstField.timeList.add(srcField.datetimetzList);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.timeList.add(srcField.decimalFloatList); 		result += &quot;|INFO:dstField.timeList.add(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.timeList.add(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.timeList.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;)	 	{ dstField.timeList.add(srcField.integerSignedList); 		result += &quot;|INFO:dstField.timeList.add(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.timeList.add(srcField.integerFixed5List); 		result += &quot;|INFO:dstField.timeList.add(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.timeList.add(srcField.text20List); 				result += &quot;|INFO:dstField.timeList.add(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.timeList.add(srcField.durationList); 			result += &quot;|INFO:dstField.timeList.add(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.timeList.add(srcField.idList); 					result += &quot;|INFO:dstField.timeList.add(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.timeList.add(srcField.uriList); 					result += &quot;|INFO:dstField.timeList.add(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.timeList.addAll(srcField.bool); 				result += &quot;|INFO:dstField.timeList.addAll(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.timeList.addAll(srcField.date); 				result += &quot;|INFO:dstField.timeList.addAll(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.timeList.addAll(srcField.time); 				result += &quot;|INFO:dstField.timeList.addAll(srcField.time);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.timeList.addAll(srcField.datetime); 			result += &quot;|INFO:dstField.timeList.addAll(srcField.datetime);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.timeList.addAll(srcField.datetimetz); 			result += &quot;|INFO:dstField.timeList.addAll(srcField.datetimetz);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.timeList.addAll(srcField.decimalFloat); 		result += &quot;|INFO:dstField.timeList.addAll(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.timeList.addAll(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.timeList.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;)	 	{ dstField.timeList.addAll(srcField.integerSigned); 		result += &quot;|INFO:dstField.timeList.addAll(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.timeList.addAll(srcField.integerFixed5); 		result += &quot;|INFO:dstField.timeList.addAll(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.timeList.addAll(srcField.text20); 				result += &quot;|INFO:dstField.timeList.addAll(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.timeList.addAll(srcField.duration); 			result += &quot;|INFO:dstField.timeList.addAll(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.timeList.addAll(srcField.id); 					result += &quot;|INFO:dstField.timeList.addAll(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.timeList.addAll(srcField.uri); 					result += &quot;|INFO:dstField.timeList.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.timeList.addAll(srcField.boolList); 				result += &quot;|INFO:dstField.timeList.addAll(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.timeList.addAll(srcField.dateList); 				result += &quot;|INFO:dstField.timeList.addAll(srcField.dateList);&quot;; } else&#xD;
		if (src == &quot;timeList&quot;) 			{ dstField.timeList.addAll(srcField.timeList); 				result += &quot;|INFO:dstField.timeList.addAll(srcField.timeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.timeList.addAll(srcField.datetimeList); 			result += &quot;|INFO:dstField.timeList.addAll(srcField.datetimeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.timeList.addAll(srcField.datetimetzList); 			result += &quot;|INFO:dstField.timeList.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.timeList.addAll(srcField.decimalFloatList); 		result += &quot;|INFO:dstField.timeList.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.timeList.addAll(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.timeList.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;)	 	{ dstField.timeList.addAll(srcField.integerSignedList); 		result += &quot;|INFO:dstField.timeList.addAll(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.timeList.addAll(srcField.integerFixed5List); 		result += &quot;|INFO:dstField.timeList.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.timeList.addAll(srcField.text20List); 				result += &quot;|INFO:dstField.timeList.addAll(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.timeList.addAll(srcField.durationList); 			result += &quot;|INFO:dstField.timeList.addAll(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.timeList.addAll(srcField.idList); 					result += &quot;|INFO:dstField.timeList.addAll(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.timeList.addAll(srcField.uriList); 					result += &quot;|INFO:dstField.timeList.addAll(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;datetimeList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
/*!*/	if (src == &quot;boolt&quot;)			{ dstField.datetimeList.add(true); 						result += &quot;|INFO:dstField.datetimeList.add(true);&quot;; } else&#xD;
/*!*/	if (src == &quot;boolf&quot;)			{ dstField.datetimeList.add(false);		 				result += &quot;|INFO:dstField.datetimeList.add(false);&quot;; } else&#xD;
/*!*/	if (src == &quot;string&quot;)		{ dstField.datetimeList.add(&quot;Hello World!&quot;); 			result += &quot;|INFO:dstField.datetimeList.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
/*!*/	if (src == &quot;number&quot;)		{ dstField.datetimeList.add(123);			 			result += &quot;|INFO:dstField.datetimeList.add(123);&quot;; } else&#xD;
/*!*/	if (src == &quot;bigint&quot;)		{ dstField.datetimeList.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.datetimeList.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.datetimeList.add(srcField.bool); 			result += &quot;|INFO:dstField.datetimeList.add(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.datetimeList.add(srcField.date); 			result += &quot;|INFO:dstField.datetimeList.add(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.datetimeList.add(srcField.time); 			result += &quot;|INFO:dstField.datetimeList.add(srcField.time);&quot;; } else&#xD;
		if (src == &quot;datetime&quot;) 		{ dstField.datetimeList.add(srcField.datetime); 		result += &quot;|INFO:dstField.datetimeList.add(srcField.datetime);&quot;; } else&#xD;
		if (src == &quot;datetimetz&quot;) 	{ dstField.datetimeList.add(srcField.datetimetz); 		result += &quot;|INFO:dstField.datetimeList.add(srcField.datetimetz);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.datetimeList.add(srcField.decimalFloat); 	result += &quot;|INFO:dstField.datetimeList.add(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.datetimeList.add(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.datetimeList.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.datetimeList.add(srcField.integerSigned); 	result += &quot;|INFO:dstField.datetimeList.add(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.datetimeList.add(srcField.integerFixed5); 	result += &quot;|INFO:dstField.datetimeList.add(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.datetimeList.add(srcField.text20); 			result += &quot;|INFO:dstField.datetimeList.add(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.datetimeList.add(srcField.duration); 		result += &quot;|INFO:dstField.datetimeList.add(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.datetimeList.add(srcField.id); 				result += &quot;|INFO:dstField.datetimeList.add(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.datetimeList.add(srcField.uri); 				result += &quot;|INFO:dstField.datetimeList.add(srcField.uri);&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.datetimeList.add(srcField.boolList); 			result += &quot;|INFO:dstField.datetimeList.add(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.datetimeList.add(srcField.dateList); 			result += &quot;|INFO:dstField.datetimeList.add(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.datetimeList.add(srcField.timeList); 			result += &quot;|INFO:dstField.datetimeList.add(srcField.timeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.datetimeList.add(srcField.datetimeList); 		result += &quot;|INFO:dstField.datetimeList.add(srcField.datetimeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.datetimeList.add(srcField.datetimetzList); 		result += &quot;|INFO:dstField.datetimeList.add(srcField.datetimetzList);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.datetimeList.add(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.datetimeList.add(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.datetimeList.add(srcField.decimalFixed8Dot4List);	result += &quot;|INFO:dstField.datetimeList.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.datetimeList.add(srcField.integerSignedList); 	result += &quot;|INFO:dstField.datetimeList.add(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.datetimeList.add(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.datetimeList.add(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.datetimeList.add(srcField.text20List); 			result += &quot;|INFO:dstField.datetimeList.add(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.datetimeList.add(srcField.durationList); 		result += &quot;|INFO:dstField.datetimeList.add(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.datetimeList.add(srcField.idList); 				result += &quot;|INFO:dstField.datetimeList.add(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.datetimeList.add(srcField.uriList); 				result += &quot;|INFO:dstField.datetimeList.add(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.datetimeList.addAll(srcField.bool); 			result += &quot;|INFO:dstField.datetimeList.addAll(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.datetimeList.addAll(srcField.date); 			result += &quot;|INFO:dstField.datetimeList.addAll(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.datetimeList.addAll(srcField.time); 			result += &quot;|INFO:dstField.datetimeList.addAll(srcField.time);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.datetimeList.addAll(srcField.datetime); 		result += &quot;|INFO:dstField.datetimeList.addAll(srcField.datetime);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.datetimeList.addAll(srcField.datetimetz); 		result += &quot;|INFO:dstField.datetimeList.addAll(srcField.datetimetz);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.datetimeList.addAll(srcField.decimalFloat); 	result += &quot;|INFO:dstField.datetimeList.addAll(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.datetimeList.addAll(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.datetimeList.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.datetimeList.addAll(srcField.integerSigned); 	result += &quot;|INFO:dstField.datetimeList.addAll(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.datetimeList.addAll(srcField.integerFixed5); 	result += &quot;|INFO:dstField.datetimeList.addAll(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.datetimeList.addAll(srcField.text20); 			result += &quot;|INFO:dstField.datetimeList.addAll(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.datetimeList.addAll(srcField.duration); 		result += &quot;|INFO:dstField.datetimeList.addAll(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.datetimeList.addAll(srcField.id); 				result += &quot;|INFO:dstField.datetimeList.addAll(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.datetimeList.addAll(srcField.uri); 				result += &quot;|INFO:dstField.datetimeList.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.datetimeList.addAll(srcField.boolList); 			result += &quot;|INFO:dstField.datetimeList.addAll(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.datetimeList.addAll(srcField.dateList); 			result += &quot;|INFO:dstField.datetimeList.addAll(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.datetimeList.addAll(srcField.timeList); 			result += &quot;|INFO:dstField.datetimeList.addAll(srcField.timeList);&quot;; } else&#xD;
		if (src == &quot;datetimeList&quot;) 		{ dstField.datetimeList.addAll(srcField.datetimeList); 		result += &quot;|INFO:dstField.datetimeList.addAll(srcField.datetimeList);&quot;; } else&#xD;
		if (src == &quot;datetimetzList&quot;) 	{ dstField.datetimeList.addAll(srcField.datetimetzList); 		result += &quot;|INFO:dstField.datetimeList.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.datetimeList.addAll(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.datetimeList.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.datetimeList.addAll(srcField.decimalFixed8Dot4List);	result += &quot;|INFO:dstField.datetimeList.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.datetimeList.addAll(srcField.integerSignedList); 	result += &quot;|INFO:dstField.datetimeList.addAll(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.datetimeList.addAll(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.datetimeList.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.datetimeList.addAll(srcField.text20List); 			result += &quot;|INFO:dstField.datetimeList.addAll(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.datetimeList.addAll(srcField.durationList); 		result += &quot;|INFO:dstField.datetimeList.addAll(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.datetimeList.addAll(srcField.idList); 				result += &quot;|INFO:dstField.datetimeList.addAll(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.datetimeList.addAll(srcField.uriList); 				result += &quot;|INFO:dstField.datetimeList.addAll(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;datetimetzList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
/*!*/	if (src == &quot;boolt&quot;)			{ dstField.datetimetzList.add(true); 					result += &quot;|INFO:dstField.datetimetzList.add(true);&quot;; } else&#xD;
/*!*/	if (src == &quot;boolf&quot;)			{ dstField.datetimetzList.add(false);		 			result += &quot;|INFO:dstField.datetimetzList.add(false);&quot;; } else&#xD;
/*!*/	if (src == &quot;string&quot;)		{ dstField.datetimetzList.add(&quot;Hello World!&quot;); 			result += &quot;|INFO:dstField.datetimetzList.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
/*!*/	if (src == &quot;number&quot;)		{ dstField.datetimetzList.add(123);			 			result += &quot;|INFO:dstField.datetimetzList.add(123);&quot;; } else&#xD;
/*!*/	if (src == &quot;bigint&quot;)		{ dstField.datetimetzList.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.datetimetzList.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.datetimetzList.add(srcField.bool); 			result += &quot;|INFO:dstField.datetimetzList.add(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.datetimetzList.add(srcField.date); 			result += &quot;|INFO:dstField.datetimetzList.add(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.datetimetzList.add(srcField.time); 			result += &quot;|INFO:dstField.datetimetzList.add(srcField.time);&quot;; } else&#xD;
		if (src == &quot;datetime&quot;) 		{ dstField.datetimetzList.add(srcField.datetime); 		result += &quot;|INFO:dstField.datetimetzList.add(srcField.datetime);&quot;; } else&#xD;
		if (src == &quot;datetimetz&quot;) 	{ dstField.datetimetzList.add(srcField.datetimetz); 	result += &quot;|INFO:dstField.datetimetzList.add(srcField.datetimetz);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.datetimetzList.add(srcField.decimalFloat); 	result += &quot;|INFO:dstField.datetimetzList.add(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.datetimetzList.add(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.datetimetzList.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.datetimetzList.add(srcField.integerSigned); 	result += &quot;|INFO:dstField.datetimetzList.add(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.datetimetzList.add(srcField.integerFixed5); 	result += &quot;|INFO:dstField.datetimetzList.add(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.datetimetzList.add(srcField.text20); 		result += &quot;|INFO:dstField.datetimetzList.add(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.datetimetzList.add(srcField.duration); 		result += &quot;|INFO:dstField.datetimetzList.add(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.datetimetzList.add(srcField.id); 			result += &quot;|INFO:dstField.datetimetzList.add(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.datetimetzList.add(srcField.uri); 			result += &quot;|INFO:dstField.datetimetzList.add(srcField.uri);&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.datetimetzList.add(srcField.boolList); 			result += &quot;|INFO:dstField.datetimetzList.add(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.datetimetzList.add(srcField.dateList); 			result += &quot;|INFO:dstField.datetimetzList.add(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.datetimetzList.add(srcField.timeList); 			result += &quot;|INFO:dstField.datetimetzList.add(srcField.timeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.datetimetzList.add(srcField.datetimeList); 		result += &quot;|INFO:dstField.datetimetzList.add(srcField.datetimeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.datetimetzList.add(srcField.datetimetzList); 	result += &quot;|INFO:dstField.datetimetzList.add(srcField.datetimetzList);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.datetimetzList.add(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.datetimetzList.add(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.datetimetzList.add(srcField.decimalFixed8Dot4List);	result += &quot;|INFO:dstField.datetimetzList.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.datetimetzList.add(srcField.integerSignedList); 	result += &quot;|INFO:dstField.datetimetzList.add(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.datetimetzList.add(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.datetimetzList.add(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.datetimetzList.add(srcField.text20List); 		result += &quot;|INFO:dstField.datetimetzList.add(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.datetimetzList.add(srcField.durationList); 		result += &quot;|INFO:dstField.datetimetzList.add(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.datetimetzList.add(srcField.idList); 			result += &quot;|INFO:dstField.datetimetzList.add(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.datetimetzList.add(srcField.uriList); 			result += &quot;|INFO:dstField.datetimetzList.add(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.datetimetzList.addAll(srcField.bool); 			result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.datetimetzList.addAll(srcField.date); 			result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.datetimetzList.addAll(srcField.time); 			result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.time);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.datetimetzList.addAll(srcField.datetime); 		result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.datetime);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.datetimetzList.addAll(srcField.datetimetz); 	result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.datetimetz);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.datetimetzList.addAll(srcField.decimalFloat); 	result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.datetimetzList.addAll(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.datetimetzList.addAll(srcField.integerSigned); 	result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.datetimetzList.addAll(srcField.integerFixed5); 	result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.datetimetzList.addAll(srcField.text20); 		result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.datetimetzList.addAll(srcField.duration); 		result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.datetimetzList.addAll(srcField.id); 			result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.datetimetzList.addAll(srcField.uri); 			result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.datetimetzList.addAll(srcField.boolList); 			result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.datetimetzList.addAll(srcField.dateList); 			result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.datetimetzList.addAll(srcField.timeList); 			result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.timeList);&quot;; } else&#xD;
		if (src == &quot;datetimeList&quot;) 		{ dstField.datetimetzList.addAll(srcField.datetimeList); 		result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.datetimeList);&quot;; } else&#xD;
		if (src == &quot;datetimetzList&quot;) 	{ dstField.datetimetzList.addAll(srcField.datetimetzList); 	result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.datetimetzList.addAll(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.datetimetzList.addAll(srcField.decimalFixed8Dot4List);	result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.datetimetzList.addAll(srcField.integerSignedList); 	result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.datetimetzList.addAll(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.datetimetzList.addAll(srcField.text20List); 		result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.datetimetzList.addAll(srcField.durationList); 		result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.datetimetzList.addAll(srcField.idList); 			result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.datetimetzList.addAll(srcField.uriList); 			result += &quot;|INFO:dstField.datetimetzList.addAll(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;decimalFloatList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
/*!*/	if (src == &quot;boolt&quot;)			{ dstField.decimalFloatList.add(true); 					result += &quot;|INFO:dstField.decimalFloatList.add(true);&quot;; } else&#xD;
/*!*/	if (src == &quot;boolf&quot;)			{ dstField.decimalFloatList.add(false);		 			result += &quot;|INFO:dstField.decimalFloatList.add(false);&quot;; } else&#xD;
/*!*/	if (src == &quot;string&quot;)		{ dstField.decimalFloatList.add(&quot;Hello World!&quot;); 		result += &quot;|INFO:dstField.decimalFloatList.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
		if (src == &quot;number&quot;)		{ dstField.decimalFloatList.add(123);			 		result += &quot;|INFO:dstField.decimalFloatList.add(123);&quot;; } else&#xD;
/*!*/	if (src == &quot;bigint&quot;)		{ dstField.decimalFloatList.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.decimalFloatList.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.decimalFloatList.add(srcField.bool); 		result += &quot;|INFO:dstField.decimalFloatList.add(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.decimalFloatList.add(srcField.date); 		result += &quot;|INFO:dstField.decimalFloatList.add(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.decimalFloatList.add(srcField.time); 		result += &quot;|INFO:dstField.decimalFloatList.add(srcField.time);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.decimalFloatList.add(srcField.datetime); 	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.datetime);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.decimalFloatList.add(srcField.datetimetz); 	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.datetimetz);&quot;; } else	&#xD;
		if (src == &quot;decimalFloat&quot;) 	{ dstField.decimalFloatList.add(srcField.decimalFloat);	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.decimalFloatList.add(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
		if (src == &quot;intSigned&quot;) 	{ dstField.decimalFloatList.add(srcField.integerSigned);	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.decimalFloatList.add(srcField.integerFixed5);	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.decimalFloatList.add(srcField.text20); 			result += &quot;|INFO:dstField.decimalFloatList.add(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.decimalFloatList.add(srcField.duration); 	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.decimalFloatList.add(srcField.id); 			result += &quot;|INFO:dstField.decimalFloatList.add(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.decimalFloatList.add(srcField.uri); 			result += &quot;|INFO:dstField.decimalFloatList.add(srcField.uri);&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.decimalFloatList.add(srcField.boolList); 		result += &quot;|INFO:dstField.decimalFloatList.add(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.decimalFloatList.add(srcField.dateList); 		result += &quot;|INFO:dstField.decimalFloatList.add(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.decimalFloatList.add(srcField.timeList); 		result += &quot;|INFO:dstField.decimalFloatList.add(srcField.timeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.decimalFloatList.add(srcField.datetimeList); 	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.datetimeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.decimalFloatList.add(srcField.datetimetzList); 	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.datetimetzList);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.decimalFloatList.add(srcField.decimalFloatList);	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.decimalFloatList.add(srcField.decimalFixed8Dot4List);	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.decimalFloatList.add(srcField.integerSignedList);	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.decimalFloatList.add(srcField.integerFixed5List);	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.decimalFloatList.add(srcField.text20List); 			result += &quot;|INFO:dstField.decimalFloatList.add(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.decimalFloatList.add(srcField.durationList); 	result += &quot;|INFO:dstField.decimalFloatList.add(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.decimalFloatList.add(srcField.idList); 			result += &quot;|INFO:dstField.decimalFloatList.add(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.decimalFloatList.add(srcField.uriList); 			result += &quot;|INFO:dstField.decimalFloatList.add(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.decimalFloatList.addAll(srcField.bool); 		result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.decimalFloatList.addAll(srcField.date); 		result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.decimalFloatList.addAll(srcField.time); 		result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.time);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.decimalFloatList.addAll(srcField.datetime); 	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.datetime);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.decimalFloatList.addAll(srcField.datetimetz); 	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.datetimetz);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.decimalFloatList.addAll(srcField.decimalFloat);	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.decimalFloatList.addAll(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.decimalFloatList.addAll(srcField.integerSigned);	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.decimalFloatList.addAll(srcField.integerFixed5);	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.decimalFloatList.addAll(srcField.text20); 			result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.decimalFloatList.addAll(srcField.duration); 	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.decimalFloatList.addAll(srcField.id); 			result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.decimalFloatList.addAll(srcField.uri); 			result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.decimalFloatList.addAll(srcField.boolList); 		result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.decimalFloatList.addAll(srcField.dateList); 		result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.decimalFloatList.addAll(srcField.timeList); 		result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.timeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.decimalFloatList.addAll(srcField.datetimeList); 	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.datetimeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.decimalFloatList.addAll(srcField.datetimetzList); 	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
		if (src == &quot;decimalFloatList&quot;) 	{ dstField.decimalFloatList.addAll(srcField.decimalFloatList);	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.decimalFloatList.addAll(srcField.decimalFixed8Dot4List);	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
		if (src == &quot;intSignedList&quot;) 	{ dstField.decimalFloatList.addAll(srcField.integerSignedList);	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.decimalFloatList.addAll(srcField.integerFixed5List);	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.decimalFloatList.addAll(srcField.text20List); 			result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.decimalFloatList.addAll(srcField.durationList); 	result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.decimalFloatList.addAll(srcField.idList); 			result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.decimalFloatList.addAll(srcField.uriList); 			result += &quot;|INFO:dstField.decimalFloatList.addAll(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;decimalFixedList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
/*!*/	if (src == &quot;boolt&quot;)			{ dstField.decimalFixed8Dot4List.add(true); 			result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(true);&quot;; } else&#xD;
/*!*/	if (src == &quot;boolf&quot;)			{ dstField.decimalFixed8Dot4List.add(false);		 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(false);&quot;; } else&#xD;
/*!*/	if (src == &quot;string&quot;)		{ dstField.decimalFixed8Dot4List.add(&quot;Hello World!&quot;); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
/*!*/	if (src == &quot;number&quot;)		{ dstField.decimalFixed8Dot4List.add(123);			 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(123);&quot;; } else&#xD;
/*!*/	if (src == &quot;bigint&quot;)		{ dstField.decimalFixed8Dot4List.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.bool); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.date); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.time); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.time);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.decimalFixed8Dot4List.add(srcField.datetime); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.datetime);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.decimalFixed8Dot4List.add(srcField.datetimetz); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.datetimetz);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.decimalFixed8Dot4List.add(srcField.decimalFloat); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.decimalFloat);&quot;; } else&#xD;
		if (src == &quot;decimalFixed&quot;) 	{ dstField.decimalFixed8Dot4List.add(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.decimalFixed8Dot4List.add(srcField.integerSigned); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.decimalFixed8Dot4List.add(srcField.integerFixed5); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.text20); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.decimalFixed8Dot4List.add(srcField.duration); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.id); 		result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.uri); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.uri);&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.boolList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.dateList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.timeList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.timeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.decimalFixed8Dot4List.add(srcField.datetimeList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.datetimeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.decimalFixed8Dot4List.add(srcField.datetimetzList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.datetimetzList);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.decimalFixed8Dot4List.add(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.decimalFixed8Dot4List.add(srcField.decimalFixed8Dot4List);	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.decimalFixed8Dot4List.add(srcField.integerSignedList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.decimalFixed8Dot4List.add(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.text20List); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.decimalFixed8Dot4List.add(srcField.durationList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.idList); 		result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.decimalFixed8Dot4List.add(srcField.uriList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.add(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.bool); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.date); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.time); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.time);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.decimalFixed8Dot4List.addAll(srcField.datetime); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.datetime);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.decimalFixed8Dot4List.addAll(srcField.datetimetz); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.datetimetz);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.decimalFixed8Dot4List.addAll(srcField.decimalFloat); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.decimalFixed8Dot4List.addAll(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.decimalFixed8Dot4List.addAll(srcField.integerSigned); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.decimalFixed8Dot4List.addAll(srcField.integerFixed5); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.text20); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.decimalFixed8Dot4List.addAll(srcField.duration); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.id); 		result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.uri); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.boolList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.dateList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.timeList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.timeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.decimalFixed8Dot4List.addAll(srcField.datetimeList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.datetimeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.decimalFixed8Dot4List.addAll(srcField.datetimetzList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.decimalFixed8Dot4List.addAll(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
		if (src == &quot;decimalFixedList&quot;) 	{ dstField.decimalFixed8Dot4List.addAll(srcField.decimalFixed8Dot4List);	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.decimalFixed8Dot4List.addAll(srcField.integerSignedList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.decimalFixed8Dot4List.addAll(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.text20List); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.decimalFixed8Dot4List.addAll(srcField.durationList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.idList); 		result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.decimalFixed8Dot4List.addAll(srcField.uriList); 	result += &quot;|INFO:dstField.decimalFixed8Dot4List.addAll(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;intSignedList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
/*!*/	if (src == &quot;boolt&quot;)			{ dstField.integerSignedList.add(true); 				result += &quot;|INFO:dstField.integerSignedList.add(true);&quot;; } else&#xD;
/*!*/	if (src == &quot;boolf&quot;)			{ dstField.integerSignedList.add(false);		 		result += &quot;|INFO:dstField.integerSignedList.add(false);&quot;; } else&#xD;
/*!*/	if (src == &quot;string&quot;)		{ dstField.integerSignedList.add(&quot;Hello World!&quot;); 		result += &quot;|INFO:dstField.integerSignedList.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
		if (src == &quot;number&quot;)		{ dstField.integerSignedList.add(123);			 		result += &quot;|INFO:dstField.integerSignedList.add(123);&quot;; } else&#xD;
/*!*/	if (src == &quot;bigint&quot;)		{ dstField.integerSignedList.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.integerSignedList.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.integerSignedList.add(srcField.bool); 		result += &quot;|INFO:dstField.integerSignedList.add(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.integerSignedList.add(srcField.date); 		result += &quot;|INFO:dstField.integerSignedList.add(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.integerSignedList.add(srcField.time); 		result += &quot;|INFO:dstField.integerSignedList.add(srcField.time);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.integerSignedList.add(srcField.datetime); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.datetime);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.integerSignedList.add(srcField.datetimetz); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.datetimetz);&quot;; } else	&#xD;
		if (src == &quot;decimalFloat&quot;) 	{ dstField.integerSignedList.add(srcField.decimalFloat); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.integerSignedList.add(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
		if (src == &quot;intSigned&quot;) 	{ dstField.integerSignedList.add(srcField.integerSigned); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.integerSignedList.add(srcField.integerFixed5); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.integerSignedList.add(srcField.text20); 		result += &quot;|INFO:dstField.integerSignedList.add(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.integerSignedList.add(srcField.duration); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.integerSignedList.add(srcField.id); 			result += &quot;|INFO:dstField.integerSignedList.add(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.integerSignedList.add(srcField.uri); 		result += &quot;|INFO:dstField.integerSignedList.add(srcField.uri);&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.integerSignedList.add(srcField.boolList); 		result += &quot;|INFO:dstField.integerSignedList.add(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.integerSignedList.add(srcField.dateList); 		result += &quot;|INFO:dstField.integerSignedList.add(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.integerSignedList.add(srcField.timeList); 		result += &quot;|INFO:dstField.integerSignedList.add(srcField.timeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.integerSignedList.add(srcField.datetimeList); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.datetimeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.integerSignedList.add(srcField.datetimetzList); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.datetimetzList);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.integerSignedList.add(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.integerSignedList.add(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.integerSignedList.add(srcField.integerSignedList); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.integerSignedList.add(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.integerSignedList.add(srcField.text20List); 		result += &quot;|INFO:dstField.integerSignedList.add(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.integerSignedList.add(srcField.durationList); 	result += &quot;|INFO:dstField.integerSignedList.add(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.integerSignedList.add(srcField.idList); 			result += &quot;|INFO:dstField.integerSignedList.add(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.integerSignedList.add(srcField.uriList); 		result += &quot;|INFO:dstField.integerSignedList.add(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.integerSignedList.addAll(srcField.bool); 		result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.integerSignedList.addAll(srcField.date); 		result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.integerSignedList.addAll(srcField.time); 		result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.time);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.integerSignedList.addAll(srcField.datetime); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.datetime);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.integerSignedList.addAll(srcField.datetimetz); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.datetimetz);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.integerSignedList.addAll(srcField.decimalFloat); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.integerSignedList.addAll(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.integerSignedList.addAll(srcField.integerSigned); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.integerSignedList.addAll(srcField.integerFixed5); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.integerSignedList.addAll(srcField.text20); 		result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.integerSignedList.addAll(srcField.duration); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.integerSignedList.addAll(srcField.id); 			result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.integerSignedList.addAll(srcField.uri); 		result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.integerSignedList.addAll(srcField.boolList); 		result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.integerSignedList.addAll(srcField.dateList); 		result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.integerSignedList.addAll(srcField.timeList); 		result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.timeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.integerSignedList.addAll(srcField.datetimeList); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.datetimeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.integerSignedList.addAll(srcField.datetimetzList); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
		if (src == &quot;decimalFloatList&quot;) 	{ dstField.integerSignedList.addAll(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.integerSignedList.addAll(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
		if (src == &quot;intSignedList&quot;) 	{ dstField.integerSignedList.addAll(srcField.integerSignedList); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.integerSignedList.addAll(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.integerSignedList.addAll(srcField.text20List); 		result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.integerSignedList.addAll(srcField.durationList); 	result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.integerSignedList.addAll(srcField.idList); 			result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.integerSignedList.addAll(srcField.uriList); 		result += &quot;|INFO:dstField.integerSignedList.addAll(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;intFixedList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
/*!*/	if (src == &quot;boolt&quot;)			{ dstField.integerFixed5List.add(true); 				result += &quot;|INFO:dstField.integerFixed5List.add(true);&quot;; } else&#xD;
/*!*/	if (src == &quot;boolf&quot;)			{ dstField.integerFixed5List.add(false);		 		result += &quot;|INFO:dstField.integerFixed5List.add(false);&quot;; } else&#xD;
/*!*/	if (src == &quot;string&quot;)		{ dstField.integerFixed5List.add(&quot;Hello World!&quot;); 		result += &quot;|INFO:dstField.integerFixed5List.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
/*!*/	if (src == &quot;number&quot;)		{ dstField.integerFixed5List.add(123);			 		result += &quot;|INFO:dstField.integerFixed5List.add(123);&quot;; } else&#xD;
		if (src == &quot;bigint&quot;)		{ dstField.integerFixed5List.add(ScriptUtil.createBigInteger(123));result += &quot;|INFO:dstField.integerFixed5List.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.integerFixed5List.add(srcField.bool); 		result += &quot;|INFO:dstField.integerFixed5List.add(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.integerFixed5List.add(srcField.date); 		result += &quot;|INFO:dstField.integerFixed5List.add(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.integerFixed5List.add(srcField.time); 		result += &quot;|INFO:dstField.integerFixed5List.add(srcField.time);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.integerFixed5List.add(srcField.datetime); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.datetime);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.integerFixed5List.add(srcField.datetimetz); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.datetimetz);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.integerFixed5List.add(srcField.decimalFloat); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.integerFixed5List.add(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.integerFixed5List.add(srcField.integerSigned); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.integerSigned);&quot;; } else&#xD;
		if (src == &quot;intFixed&quot;) 		{ dstField.integerFixed5List.add(srcField.integerFixed5); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.integerFixed5List.add(srcField.text20); 		result += &quot;|INFO:dstField.integerFixed5List.add(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.integerFixed5List.add(srcField.duration); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.integerFixed5List.add(srcField.id); 			result += &quot;|INFO:dstField.integerFixed5List.add(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.integerFixed5List.add(srcField.uri); 		result += &quot;|INFO:dstField.integerFixed5List.add(srcField.uri);&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.integerFixed5List.add(srcField.boolList); 		result += &quot;|INFO:dstField.integerFixed5List.add(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.integerFixed5List.add(srcField.dateList); 		result += &quot;|INFO:dstField.integerFixed5List.add(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.integerFixed5List.add(srcField.timeList); 		result += &quot;|INFO:dstField.integerFixed5List.add(srcField.timeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.integerFixed5List.add(srcField.datetimeList); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.datetimeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.integerFixed5List.add(srcField.datetimetzList); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.datetimetzList);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.integerFixed5List.add(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.integerFixed5List.add(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.integerFixed5List.add(srcField.integerSignedList); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.integerFixed5List.add(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.integerFixed5List.add(srcField.text20List); 		result += &quot;|INFO:dstField.integerFixed5List.add(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.integerFixed5List.add(srcField.durationList); 	result += &quot;|INFO:dstField.integerFixed5List.add(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.integerFixed5List.add(srcField.idList); 			result += &quot;|INFO:dstField.integerFixed5List.add(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.integerFixed5List.add(srcField.uriList); 		result += &quot;|INFO:dstField.integerFixed5List.add(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.integerFixed5List.addAll(srcField.bool); 		result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.integerFixed5List.addAll(srcField.date); 		result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.integerFixed5List.addAll(srcField.time); 		result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.time);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.integerFixed5List.addAll(srcField.datetime); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.datetime);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.integerFixed5List.addAll(srcField.datetimetz); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.datetimetz);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.integerFixed5List.addAll(srcField.decimalFloat); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.integerFixed5List.addAll(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.integerFixed5List.addAll(srcField.integerSigned); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.integerFixed5List.addAll(srcField.integerFixed5); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.integerFixed5List.addAll(srcField.text20); 		result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.integerFixed5List.addAll(srcField.duration); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.integerFixed5List.addAll(srcField.id); 			result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.integerFixed5List.addAll(srcField.uri); 		result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.integerFixed5List.addAll(srcField.boolList); 		result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.integerFixed5List.addAll(srcField.dateList); 		result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.integerFixed5List.addAll(srcField.timeList); 		result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.timeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.integerFixed5List.addAll(srcField.datetimeList); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.datetimeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.integerFixed5List.addAll(srcField.datetimetzList); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.integerFixed5List.addAll(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.integerFixed5List.addAll(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.integerFixed5List.addAll(srcField.integerSignedList); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.integerSignedList);&quot;; } else&#xD;
		if (src == &quot;intFixedList&quot;) 		{ dstField.integerFixed5List.addAll(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.integerFixed5List.addAll(srcField.text20List); 		result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.integerFixed5List.addAll(srcField.durationList); 	result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.integerFixed5List.addAll(srcField.idList); 			result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.integerFixed5List.addAll(srcField.uriList); 		result += &quot;|INFO:dstField.integerFixed5List.addAll(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;textList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
		if (src == &quot;boolt&quot;)			{ dstField.text20List.add(true); 						result += &quot;|INFO:dstField.text20List.add(true);&quot;; } else&#xD;
		if (src == &quot;boolf&quot;)			{ dstField.text20List.add(false);		 				result += &quot;|INFO:dstField.text20List.add(false);&quot;; } else&#xD;
		if (src == &quot;string&quot;)		{ dstField.text20List.add(&quot;Hello World!&quot;); 				result += &quot;|INFO:dstField.text20List.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
		if (src == &quot;number&quot;)		{ dstField.text20List.add(123);			 				result += &quot;|INFO:dstField.text20List.add(123);&quot;; } else&#xD;
		if (src == &quot;bigint&quot;)		{ dstField.text20List.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.text20List.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
		if (src == &quot;bool&quot;) 			{ dstField.text20List.add(srcField.bool); 				result += &quot;|INFO:dstField.text20List.add(srcField.bool);&quot;; } else&#xD;
		if (src == &quot;date&quot;) 			{ dstField.text20List.add(srcField.date); 				result += &quot;|INFO:dstField.text20List.add(srcField.date);&quot;; } else&#xD;
		if (src == &quot;time&quot;) 			{ dstField.text20List.add(srcField.time); 				result += &quot;|INFO:dstField.text20List.add(srcField.time);&quot;; } else&#xD;
		if (src == &quot;datetime&quot;) 		{ dstField.text20List.add(srcField.datetime); 			result += &quot;|INFO:dstField.text20List.add(srcField.datetime);&quot;; } else&#xD;
		if (src == &quot;datetimetz&quot;) 	{ dstField.text20List.add(srcField.datetimetz); 		result += &quot;|INFO:dstField.text20List.add(srcField.datetimetz);&quot;; } else	&#xD;
		if (src == &quot;decimalFloat&quot;) 	{ dstField.text20List.add(srcField.decimalFloat); 		result += &quot;|INFO:dstField.text20List.add(srcField.decimalFloat);&quot;; } else&#xD;
		if (src == &quot;decimalFixed&quot;) 	{ dstField.text20List.add(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.text20List.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
		if (src == &quot;intSigned&quot;) 	{ dstField.text20List.add(srcField.integerSigned); 		result += &quot;|INFO:dstField.text20List.add(srcField.integerSigned);&quot;; } else&#xD;
		if (src == &quot;intFixed&quot;) 		{ dstField.text20List.add(srcField.integerFixed5); 		result += &quot;|INFO:dstField.text20List.add(srcField.integerFixed5);&quot;; } else&#xD;
		if (src == &quot;text&quot;) 			{ dstField.text20List.add(srcField.text20); 			result += &quot;|INFO:dstField.text20List.add(srcField.text20);&quot;; } else&#xD;
		if (src == &quot;duration&quot;) 		{ dstField.text20List.add(srcField.duration); 			result += &quot;|INFO:dstField.text20List.add(srcField.duration);&quot;; } else&#xD;
		if (src == &quot;id&quot;) 			{ dstField.text20List.add(srcField.id); 				result += &quot;|INFO:dstField.text20List.add(srcField.id);&quot;; } else&#xD;
		if (src == &quot;uri&quot;) 			{ dstField.text20List.add(srcField.uri); 				result += &quot;|INFO:dstField.text20List.add(srcField.uri);&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.text20List.add(srcField.boolList); 				result += &quot;|INFO:dstField.text20List.add(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.text20List.add(srcField.dateList); 				result += &quot;|INFO:dstField.text20List.add(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.text20List.add(srcField.timeList); 				result += &quot;|INFO:dstField.text20List.add(srcField.timeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.text20List.add(srcField.datetimeList); 			result += &quot;|INFO:dstField.text20List.add(srcField.datetimeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.text20List.add(srcField.datetimetzList); 		result += &quot;|INFO:dstField.text20List.add(srcField.datetimetzList);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.text20List.add(srcField.decimalFloatList); 		result += &quot;|INFO:dstField.text20List.add(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.text20List.add(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.text20List.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.text20List.add(srcField.integerSignedList); 		result += &quot;|INFO:dstField.text20List.add(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.text20List.add(srcField.integerFixed5List); 		result += &quot;|INFO:dstField.text20List.add(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.text20List.add(srcField.text20List); 			result += &quot;|INFO:dstField.text20List.add(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.text20List.add(srcField.durationList); 			result += &quot;|INFO:dstField.text20List.add(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.text20List.add(srcField.idList); 				result += &quot;|INFO:dstField.text20List.add(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.text20List.add(srcField.uriList); 				result += &quot;|INFO:dstField.text20List.add(srcField.uriList);&quot;; } else&#xD;
									{ 																result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.text20List.addAll(srcField.bool); 				result += &quot;|INFO:dstField.text20List.addAll(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.text20List.addAll(srcField.date); 				result += &quot;|INFO:dstField.text20List.addAll(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.text20List.addAll(srcField.time); 				result += &quot;|INFO:dstField.text20List.addAll(srcField.time);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.text20List.addAll(srcField.datetime); 			result += &quot;|INFO:dstField.text20List.addAll(srcField.datetime);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.text20List.addAll(srcField.datetimetz); 			result += &quot;|INFO:dstField.text20List.addAll(srcField.datetimetz);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.text20List.addAll(srcField.decimalFloat); 		result += &quot;|INFO:dstField.text20List.addAll(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.text20List.addAll(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.text20List.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.text20List.addAll(srcField.integerSigned); 		result += &quot;|INFO:dstField.text20List.addAll(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.text20List.addAll(srcField.integerFixed5); 		result += &quot;|INFO:dstField.text20List.addAll(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.text20List.addAll(srcField.text20); 				result += &quot;|INFO:dstField.text20List.addAll(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.text20List.addAll(srcField.duration); 			result += &quot;|INFO:dstField.text20List.addAll(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.text20List.addAll(srcField.id); 					result += &quot;|INFO:dstField.text20List.addAll(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.text20List.addAll(srcField.uri); 				result += &quot;|INFO:dstField.text20List.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
		if (src == &quot;boolList&quot;) 			{ dstField.text20List.addAll(srcField.boolList); 				result += &quot;|INFO:dstField.text20List.addAll(srcField.boolList);&quot;; } else&#xD;
		if (src == &quot;dateList&quot;) 			{ dstField.text20List.addAll(srcField.dateList); 				result += &quot;|INFO:dstField.text20List.addAll(srcField.dateList);&quot;; } else&#xD;
		if (src == &quot;timeList&quot;) 			{ dstField.text20List.addAll(srcField.timeList); 				result += &quot;|INFO:dstField.text20List.addAll(srcField.timeList);&quot;; } else&#xD;
		if (src == &quot;datetimeList&quot;) 		{ dstField.text20List.addAll(srcField.datetimeList); 			result += &quot;|INFO:dstField.text20List.addAll(srcField.datetimeList);&quot;; } else&#xD;
		if (src == &quot;datetimetzList&quot;) 	{ dstField.text20List.addAll(srcField.datetimetzList); 		result += &quot;|INFO:dstField.text20List.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
		if (src == &quot;decimalFloatList&quot;) 	{ dstField.text20List.addAll(srcField.decimalFloatList); 		result += &quot;|INFO:dstField.text20List.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
		if (src == &quot;decimalFixedList&quot;) 	{ dstField.text20List.addAll(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.text20List.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
		if (src == &quot;intSignedList&quot;) 	{ dstField.text20List.addAll(srcField.integerSignedList); 		result += &quot;|INFO:dstField.text20List.addAll(srcField.integerSignedList);&quot;; } else&#xD;
		if (src == &quot;intFixedList&quot;) 		{ dstField.text20List.addAll(srcField.integerFixed5List); 		result += &quot;|INFO:dstField.text20List.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
		if (src == &quot;textList&quot;) 			{ dstField.text20List.addAll(srcField.text20List); 			result += &quot;|INFO:dstField.text20List.addAll(srcField.text20List);&quot;; } else&#xD;
		if (src == &quot;durationList&quot;) 		{ dstField.text20List.addAll(srcField.durationList); 			result += &quot;|INFO:dstField.text20List.addAll(srcField.durationList);&quot;; } else&#xD;
		if (src == &quot;idList&quot;) 			{ dstField.text20List.addAll(srcField.idList); 				result += &quot;|INFO:dstField.text20List.addAll(srcField.idList);&quot;; } else&#xD;
		if (src == &quot;uriList&quot;) 			{ dstField.text20List.addAll(srcField.uriList); 				result += &quot;|INFO:dstField.text20List.addAll(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;durationList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
/*!*/	if (src == &quot;boolt&quot;)			{ dstField.durationList.add(true); 						result += &quot;|INFO:dstField.durationList.add(true);&quot;; } else&#xD;
/*!*/	if (src == &quot;boolf&quot;)			{ dstField.durationList.add(false);		 				result += &quot;|INFO:dstField.durationList.add(false);&quot;; } else&#xD;
/*!*/	if (src == &quot;string&quot;)		{ dstField.durationList.add(&quot;Hello World!&quot;); 			result += &quot;|INFO:dstField.durationList.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
/*!*/	if (src == &quot;number&quot;)		{ dstField.durationList.add(123);			 			result += &quot;|INFO:dstField.durationList.add(123);&quot;; } else&#xD;
/*!*/	if (src == &quot;bigint&quot;)		{ dstField.durationList.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.durationList.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.durationList.add(srcField.bool); 			result += &quot;|INFO:dstField.durationList.add(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.durationList.add(srcField.date); 			result += &quot;|INFO:dstField.durationList.add(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.durationList.add(srcField.time); 			result += &quot;|INFO:dstField.durationList.add(srcField.time);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.durationList.add(srcField.datetime); 		result += &quot;|INFO:dstField.durationList.add(srcField.datetime);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.durationList.add(srcField.datetimetz); 		result += &quot;|INFO:dstField.durationList.add(srcField.datetimetz);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.durationList.add(srcField.decimalFloat); 	result += &quot;|INFO:dstField.durationList.add(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.durationList.add(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.durationList.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.durationList.add(srcField.integerSigned); 	result += &quot;|INFO:dstField.durationList.add(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.durationList.add(srcField.integerFixed5); 	result += &quot;|INFO:dstField.durationList.add(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.durationList.add(srcField.text20); 			result += &quot;|INFO:dstField.durationList.add(srcField.text20);&quot;; } else&#xD;
		if (src == &quot;duration&quot;) 		{ dstField.durationList.add(srcField.duration); 		result += &quot;|INFO:dstField.durationList.add(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.durationList.add(srcField.id); 				result += &quot;|INFO:dstField.durationList.add(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.durationList.add(srcField.uri); 				result += &quot;|INFO:dstField.durationList.add(srcField.uri);&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.durationList.add(srcField.boolList); 			result += &quot;|INFO:dstField.durationList.add(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.durationList.add(srcField.dateList); 			result += &quot;|INFO:dstField.durationList.add(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.durationList.add(srcField.timeList); 			result += &quot;|INFO:dstField.durationList.add(srcField.timeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.durationList.add(srcField.datetimeList); 		result += &quot;|INFO:dstField.durationList.add(srcField.datetimeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.durationList.add(srcField.datetimetzList); 		result += &quot;|INFO:dstField.durationList.add(srcField.datetimetzList);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.durationList.add(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.durationList.add(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.durationList.add(srcField.decimalFixed8Dot4List);	result += &quot;|INFO:dstField.durationList.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.durationList.add(srcField.integerSignedList); 	result += &quot;|INFO:dstField.durationList.add(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.durationList.add(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.durationList.add(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.durationList.add(srcField.text20List); 			result += &quot;|INFO:dstField.durationList.add(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.durationList.add(srcField.durationList); 		result += &quot;|INFO:dstField.durationList.add(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.durationList.add(srcField.idList); 				result += &quot;|INFO:dstField.durationList.add(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.durationList.add(srcField.uriList); 				result += &quot;|INFO:dstField.durationList.add(srcField.uriList);&quot;; } else&#xD;
								{ 															result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.durationList.addAll(srcField.bool); 			result += &quot;|INFO:dstField.durationList.addAll(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.durationList.addAll(srcField.date); 			result += &quot;|INFO:dstField.durationList.addAll(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.durationList.addAll(srcField.time); 			result += &quot;|INFO:dstField.durationList.addAll(srcField.time);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.durationList.addAll(srcField.datetime); 		result += &quot;|INFO:dstField.durationList.addAll(srcField.datetime);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.durationList.addAll(srcField.datetimetz); 		result += &quot;|INFO:dstField.durationList.addAll(srcField.datetimetz);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.durationList.addAll(srcField.decimalFloat); 	result += &quot;|INFO:dstField.durationList.addAll(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.durationList.addAll(srcField.decimalFixed8Dot4);	result += &quot;|INFO:dstField.durationList.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.durationList.addAll(srcField.integerSigned); 	result += &quot;|INFO:dstField.durationList.addAll(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.durationList.addAll(srcField.integerFixed5); 	result += &quot;|INFO:dstField.durationList.addAll(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.durationList.addAll(srcField.text20); 			result += &quot;|INFO:dstField.durationList.addAll(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.durationList.addAll(srcField.duration); 		result += &quot;|INFO:dstField.durationList.addAll(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.durationList.addAll(srcField.id); 				result += &quot;|INFO:dstField.durationList.addAll(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.durationList.addAll(srcField.uri); 				result += &quot;|INFO:dstField.durationList.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.durationList.addAll(srcField.boolList); 			result += &quot;|INFO:dstField.durationList.addAll(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.durationList.addAll(srcField.dateList); 			result += &quot;|INFO:dstField.durationList.addAll(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.durationList.addAll(srcField.timeList); 			result += &quot;|INFO:dstField.durationList.addAll(srcField.timeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.durationList.addAll(srcField.datetimeList); 		result += &quot;|INFO:dstField.durationList.addAll(srcField.datetimeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.durationList.addAll(srcField.datetimetzList); 		result += &quot;|INFO:dstField.durationList.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.durationList.addAll(srcField.decimalFloatList); 	result += &quot;|INFO:dstField.durationList.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.durationList.addAll(srcField.decimalFixed8Dot4List);	result += &quot;|INFO:dstField.durationList.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.durationList.addAll(srcField.integerSignedList); 	result += &quot;|INFO:dstField.durationList.addAll(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.durationList.addAll(srcField.integerFixed5List); 	result += &quot;|INFO:dstField.durationList.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.durationList.addAll(srcField.text20List); 			result += &quot;|INFO:dstField.durationList.addAll(srcField.text20List);&quot;; } else&#xD;
		if (src == &quot;durationList&quot;) 		{ dstField.durationList.addAll(srcField.durationList); 		result += &quot;|INFO:dstField.durationList.addAll(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.durationList.addAll(srcField.idList); 				result += &quot;|INFO:dstField.durationList.addAll(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.durationList.addAll(srcField.uriList); 				result += &quot;|INFO:dstField.durationList.addAll(srcField.uriList);&quot;; } else&#xD;
								{ 															result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;idList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
/*!*/	if (src == &quot;boolt&quot;)			{ dstField.idList.add(true); 							result += &quot;|INFO:dstField.idList.add(true);&quot;; } else&#xD;
/*!*/	if (src == &quot;boolf&quot;)			{ dstField.idList.add(false);		 					result += &quot;|INFO:dstField.idList.add(false);&quot;; } else&#xD;
/*!*/	if (src == &quot;string&quot;)		{ dstField.idList.add(&quot;Hello World!&quot;); 					result += &quot;|INFO:dstField.idList.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
/*!*/	if (src == &quot;number&quot;)		{ dstField.idList.add(123);			 					result += &quot;|INFO:dstField.idList.add(123);&quot;; } else&#xD;
/*!*/	if (src == &quot;bigint&quot;)		{ dstField.idList.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.idList.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.idList.add(srcField.bool); 					result += &quot;|INFO:dstField.idList.add(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.idList.add(srcField.date); 					result += &quot;|INFO:dstField.idList.add(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.idList.add(srcField.time); 					result += &quot;|INFO:dstField.idList.add(srcField.time);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.idList.add(srcField.datetime); 				result += &quot;|INFO:dstField.idList.add(srcField.datetime);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.idList.add(srcField.datetimetz); 			result += &quot;|INFO:dstField.idList.add(srcField.datetimetz);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.idList.add(srcField.decimalFloat); 			result += &quot;|INFO:dstField.idList.add(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.idList.add(srcField.decimalFixed8Dot4); 		result += &quot;|INFO:dstField.idList.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.idList.add(srcField.integerSigned); 			result += &quot;|INFO:dstField.idList.add(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.idList.add(srcField.integerFixed5); 			result += &quot;|INFO:dstField.idList.add(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.idList.add(srcField.text20); 				result += &quot;|INFO:dstField.idList.add(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.idList.add(srcField.duration); 				result += &quot;|INFO:dstField.idList.add(srcField.duration);&quot;; } else&#xD;
		if (src == &quot;id&quot;) 			{ dstField.idList.add(srcField.id); 					result += &quot;|INFO:dstField.idList.add(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.idList.add(srcField.uri); 					result += &quot;|INFO:dstField.idList.add(srcField.uri);&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.idList.add(srcField.boolList); 					result += &quot;|INFO:dstField.idList.add(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.idList.add(srcField.dateList); 					result += &quot;|INFO:dstField.idList.add(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.idList.add(srcField.timeList); 					result += &quot;|INFO:dstField.idList.add(srcField.timeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.idList.add(srcField.datetimeList); 				result += &quot;|INFO:dstField.idList.add(srcField.datetimeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.idList.add(srcField.datetimetzList); 			result += &quot;|INFO:dstField.idList.add(srcField.datetimetzList);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.idList.add(srcField.decimalFloatList); 			result += &quot;|INFO:dstField.idList.add(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.idList.add(srcField.decimalFixed8Dot4List); 		result += &quot;|INFO:dstField.idList.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.idList.add(srcField.integerSignedList); 			result += &quot;|INFO:dstField.idList.add(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.idList.add(srcField.integerFixed5List); 			result += &quot;|INFO:dstField.idList.add(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.idList.add(srcField.text20List); 				result += &quot;|INFO:dstField.idList.add(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.idList.add(srcField.durationList); 				result += &quot;|INFO:dstField.idList.add(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.idList.add(srcField.idList); 					result += &quot;|INFO:dstField.idList.add(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.idList.add(srcField.uriList); 					result += &quot;|INFO:dstField.idList.add(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.idList.addAll(srcField.bool); 					result += &quot;|INFO:dstField.idList.addAll(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.idList.addAll(srcField.date); 					result += &quot;|INFO:dstField.idList.addAll(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.idList.addAll(srcField.time); 					result += &quot;|INFO:dstField.idList.addAll(srcField.time);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.idList.addAll(srcField.datetime); 				result += &quot;|INFO:dstField.idList.addAll(srcField.datetime);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.idList.addAll(srcField.datetimetz); 			result += &quot;|INFO:dstField.idList.addAll(srcField.datetimetz);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.idList.addAll(srcField.decimalFloat); 			result += &quot;|INFO:dstField.idList.addAll(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.idList.addAll(srcField.decimalFixed8Dot4); 		result += &quot;|INFO:dstField.idList.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.idList.addAll(srcField.integerSigned); 			result += &quot;|INFO:dstField.idList.addAll(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.idList.addAll(srcField.integerFixed5); 			result += &quot;|INFO:dstField.idList.addAll(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.idList.addAll(srcField.text20); 				result += &quot;|INFO:dstField.idList.addAll(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.idList.addAll(srcField.duration); 				result += &quot;|INFO:dstField.idList.addAll(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.idList.addAll(srcField.id); 					result += &quot;|INFO:dstField.idList.addAll(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.idList.addAll(srcField.uri); 					result += &quot;|INFO:dstField.idList.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.idList.addAll(srcField.boolList); 					result += &quot;|INFO:dstField.idList.addAll(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.idList.addAll(srcField.dateList); 					result += &quot;|INFO:dstField.idList.addAll(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.idList.addAll(srcField.timeList); 					result += &quot;|INFO:dstField.idList.addAll(srcField.timeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.idList.addAll(srcField.datetimeList); 				result += &quot;|INFO:dstField.idList.addAll(srcField.datetimeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.idList.addAll(srcField.datetimetzList); 			result += &quot;|INFO:dstField.idList.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.idList.addAll(srcField.decimalFloatList); 			result += &quot;|INFO:dstField.idList.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.idList.addAll(srcField.decimalFixed8Dot4List); 		result += &quot;|INFO:dstField.idList.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.idList.addAll(srcField.integerSignedList); 			result += &quot;|INFO:dstField.idList.addAll(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.idList.addAll(srcField.integerFixed5List); 			result += &quot;|INFO:dstField.idList.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.idList.addAll(srcField.text20List); 				result += &quot;|INFO:dstField.idList.addAll(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.idList.addAll(srcField.durationList); 				result += &quot;|INFO:dstField.idList.addAll(srcField.durationList);&quot;; } else&#xD;
		if (src == &quot;idList&quot;) 			{ dstField.idList.addAll(srcField.idList); 					result += &quot;|INFO:dstField.idList.addAll(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.idList.addAll(srcField.uriList); 					result += &quot;|INFO:dstField.idList.addAll(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else if (dst == &quot;uriList&quot;) {&#xD;
	if (opCode == &quot;add&quot;) {&#xD;
		// Constant assignments&#xD;
/*!*/	if (src == &quot;boolt&quot;)			{ dstField.uriList.add(true); 							result += &quot;|INFO:dstField.uriList.add(true);&quot;; } else&#xD;
/*!*/	if (src == &quot;boolf&quot;)			{ dstField.uriList.add(false);		 					result += &quot;|INFO:dstField.bouriolList.add(false);&quot;; } else&#xD;
/*!*/	if (src == &quot;string&quot;)		{ dstField.uriList.add(&quot;Hello World!&quot;); 				result += &quot;|INFO:dstField.uriList.add(\&quot;Hello World!\&quot;);&quot;; } else&#xD;
/*!*/	if (src == &quot;number&quot;)		{ dstField.uriList.add(123);			 				result += &quot;|INFO:dstField.uriList.add(123);&quot;; } else&#xD;
/*!*/	if (src == &quot;bigint&quot;)		{ dstField.uriList.add(ScriptUtil.createBigInteger(123));	result += &quot;|INFO:dstField.uriList.add(ScriptUtil.createBigInteger(123));&quot;; } else&#xD;
&#xD;
		// BOM variable assignments&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.uriList.add(srcField.bool); 					result += &quot;|INFO:dstField.uriList.add(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.uriList.add(srcField.date); 					result += &quot;|INFO:dstField.uriList.add(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.uriList.add(srcField.time); 					result += &quot;|INFO:dstField.uriList.add(srcField.time);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.uriList.add(srcField.datetime); 				result += &quot;|INFO:dstField.uriList.add(srcField.datetime);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.uriList.add(srcField.datetimetz); 			result += &quot;|INFO:dstField.uriList.add(srcField.datetimetz);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.uriList.add(srcField.decimalFloat); 			result += &quot;|INFO:dstField.uriList.add(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.uriList.add(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.uriList.add(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.uriList.add(srcField.integerSigned); 		result += &quot;|INFO:dstField.uriList.add(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.uriList.add(srcField.integerFixed5); 		result += &quot;|INFO:dstField.uriList.add(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.uriList.add(srcField.text20); 				result += &quot;|INFO:dstField.uriList.add(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.uriList.add(srcField.duration); 				result += &quot;|INFO:dstField.uriList.add(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.uriList.add(srcField.id); 					result += &quot;|INFO:dstField.uriList.add(srcField.id);&quot;; } else&#xD;
		if (src == &quot;uri&quot;) 			{ dstField.uriList.add(srcField.uri); 					result += &quot;|INFO:dstField.uriList.add(srcField.uri);&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.uriList.add(srcField.boolList); 					result += &quot;|INFO:dstField.uriList.add(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.uriList.add(srcField.dateList); 					result += &quot;|INFO:dstField.uriList.add(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.uriList.add(srcField.timeList); 					result += &quot;|INFO:dstField.uriList.add(srcField.timeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.uriList.add(srcField.datetimeList); 				result += &quot;|INFO:dstField.uriList.add(srcField.datetimeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.uriList.add(srcField.datetimetzList); 			result += &quot;|INFO:dstField.uriList.add(srcField.datetimetzList);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.uriList.add(srcField.decimalFloatList); 			result += &quot;|INFO:dstField.uriList.add(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.uriList.add(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.uriList.add(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.uriList.add(srcField.integerSignedList); 		result += &quot;|INFO:dstField.uriList.add(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.uriList.add(srcField.integerFixed5List); 		result += &quot;|INFO:dstField.uriList.add(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.uriList.add(srcField.text20List); 				result += &quot;|INFO:dstField.uriList.add(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.uriList.add(srcField.durationList); 				result += &quot;|INFO:dstField.uriList.add(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.uriList.add(srcField.idList); 					result += &quot;|INFO:dstField.uriList.add(srcField.idList);&quot;; } else&#xD;
/*!*/	if (src == &quot;uriList&quot;) 			{ dstField.uriList.add(srcField.uriList); 					result += &quot;|INFO:dstField.uriList.add(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else if (opCode == &quot;addAll&quot;) {&#xD;
/*!*/	if (src == &quot;bool&quot;) 			{ dstField.uriList.addAll(srcField.bool); 					result += &quot;|INFO:dstField.uriList.addAll(srcField.bool);&quot;; } else&#xD;
/*!*/	if (src == &quot;date&quot;) 			{ dstField.uriList.addAll(srcField.date); 					result += &quot;|INFO:dstField.uriList.addAll(srcField.date);&quot;; } else&#xD;
/*!*/	if (src == &quot;time&quot;) 			{ dstField.uriList.addAll(srcField.time); 					result += &quot;|INFO:dstField.uriList.addAll(srcField.time);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetime&quot;) 		{ dstField.uriList.addAll(srcField.datetime); 				result += &quot;|INFO:dstField.uriList.addAll(srcField.datetime);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetz&quot;) 	{ dstField.uriList.addAll(srcField.datetimetz); 			result += &quot;|INFO:dstField.uriList.addAll(srcField.datetimetz);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloat&quot;) 	{ dstField.uriList.addAll(srcField.decimalFloat); 			result += &quot;|INFO:dstField.uriList.addAll(srcField.decimalFloat);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixed&quot;) 	{ dstField.uriList.addAll(srcField.decimalFixed8Dot4); 	result += &quot;|INFO:dstField.uriList.addAll(srcField.decimalFixed8Dot4);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSigned&quot;) 	{ dstField.uriList.addAll(srcField.integerSigned); 		result += &quot;|INFO:dstField.uriList.addAll(srcField.integerSigned);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixed&quot;) 		{ dstField.uriList.addAll(srcField.integerFixed5); 		result += &quot;|INFO:dstField.uriList.addAll(srcField.integerFixed5);&quot;; } else&#xD;
/*!*/	if (src == &quot;text&quot;) 			{ dstField.uriList.addAll(srcField.text20); 				result += &quot;|INFO:dstField.uriList.addAll(srcField.text20);&quot;; } else&#xD;
/*!*/	if (src == &quot;duration&quot;) 		{ dstField.uriList.addAll(srcField.duration); 				result += &quot;|INFO:dstField.uriList.addAll(srcField.duration);&quot;; } else&#xD;
/*!*/	if (src == &quot;id&quot;) 			{ dstField.uriList.addAll(srcField.id); 					result += &quot;|INFO:dstField.uriList.addAll(srcField.id);&quot;; } else&#xD;
/*!*/	if (src == &quot;uri&quot;) 			{ dstField.uriList.addAll(srcField.uri); 					result += &quot;|INFO:dstField.uriList.addAll(srcField.uri);&quot;; } else&#xD;
&#xD;
/*!*/	if (src == &quot;boolList&quot;) 			{ dstField.uriList.addAll(srcField.boolList); 					result += &quot;|INFO:dstField.uriList.addAll(srcField.boolList);&quot;; } else&#xD;
/*!*/	if (src == &quot;dateList&quot;) 			{ dstField.uriList.addAll(srcField.dateList); 					result += &quot;|INFO:dstField.uriList.addAll(srcField.dateList);&quot;; } else&#xD;
/*!*/	if (src == &quot;timeList&quot;) 			{ dstField.uriList.addAll(srcField.timeList); 					result += &quot;|INFO:dstField.uriList.addAll(srcField.timeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimeList&quot;) 		{ dstField.uriList.addAll(srcField.datetimeList); 				result += &quot;|INFO:dstField.uriList.addAll(srcField.datetimeList);&quot;; } else&#xD;
/*!*/	if (src == &quot;datetimetzList&quot;) 	{ dstField.uriList.addAll(srcField.datetimetzList); 			result += &quot;|INFO:dstField.uriList.addAll(srcField.datetimetzList);&quot;; } else	&#xD;
/*!*/	if (src == &quot;decimalFloatList&quot;) 	{ dstField.uriList.addAll(srcField.decimalFloatList); 			result += &quot;|INFO:dstField.uriList.addAll(srcField.decimalFloatList);&quot;; } else&#xD;
/*!*/	if (src == &quot;decimalFixedList&quot;) 	{ dstField.uriList.addAll(srcField.decimalFixed8Dot4List); 	result += &quot;|INFO:dstField.uriList.addAll(srcField.decimalFixed8Dot4List);&quot;; } else&#xD;
/*!*/	if (src == &quot;intSignedList&quot;) 	{ dstField.uriList.addAll(srcField.integerSignedList); 		result += &quot;|INFO:dstField.uriList.addAll(srcField.integerSignedList);&quot;; } else&#xD;
/*!*/	if (src == &quot;intFixedList&quot;) 		{ dstField.uriList.addAll(srcField.integerFixed5List); 		result += &quot;|INFO:dstField.uriList.addAll(srcField.integerFixed5List);&quot;; } else&#xD;
/*!*/	if (src == &quot;textList&quot;) 			{ dstField.uriList.addAll(srcField.text20List); 				result += &quot;|INFO:dstField.uriList.addAll(srcField.text20List);&quot;; } else&#xD;
/*!*/	if (src == &quot;durationList&quot;) 		{ dstField.uriList.addAll(srcField.durationList); 				result += &quot;|INFO:dstField.uriList.addAll(srcField.durationList);&quot;; } else&#xD;
/*!*/	if (src == &quot;idList&quot;) 			{ dstField.uriList.addAll(srcField.idList); 					result += &quot;|INFO:dstField.uriList.addAll(srcField.idList);&quot;; } else&#xD;
		if (src == &quot;uriList&quot;) 			{ dstField.uriList.addAll(srcField.uriList); 					result += &quot;|INFO:dstField.uriList.addAll(srcField.uriList);&quot;; } else&#xD;
									{ 														result += &quot;|ERROR:Cannot assign dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; }&#xD;
	} else {&#xD;
		result += &quot;|ERROR: Invalid opCode for assign:'&quot;+opCode+&quot;', dst:'&quot; + dst + &quot;' from src:'&quot; + src + &quot;'&quot;; &#xD;
	}	&#xD;
} else {&#xD;
	result += &quot;|ERROR:Invalid dst value: '&quot; + src + &quot;'&quot;;&#xD;
} &#xD;
&#xD;
 /////////////////////////////////////////////////////////////&#xD;
result += &quot;|INFO:Leave:Assign Script&quot;;&#xD;
&#xD;
&#xD;
</xpdl2:Script>
              </xpdl2:TaskScript>
            </xpdl2:Task>
          </xpdl2:Implementation>
          <xpdl2:ExtendedAttributes>
            <xpdl2:ExtendedAttribute Name="suppressScriptValidation2"/>
          </xpdl2:ExtendedAttributes>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="86.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="159.0">
              <xpdl2:Coordinates XCoordinate="454.0" YCoordinate="92.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
          <xpdl2:Extensions/>
          <xpdExt:ActivityResourcePatterns>
            <xpdExt:AllocationStrategy xpdExt:Strategy="SYSTEM_DETERMINED"/>
          </xpdExt:ActivityResourcePatterns>
        </xpdl2:Activity>
        <xpdl2:Activity Id="_fDf7sJ55EeC5wuChGREBNQ" iProcessExt:StepIndex="36">
          <xpdl2:Route GatewayType="Exclusive" MarkerVisible="true" ExclusiveType="Data"/>
          <xpdl2:NodeGraphicsInfos>
            <xpdl2:NodeGraphicsInfo BorderColor="0,0,128" FillColor="255,219,74" Height="43.0" LaneId="_POW4AWnAEeCp3sCuRmkvPQ" Width="41.0">
              <xpdl2:Coordinates XCoordinate="249.0" YCoordinate="91.0"/>
            </xpdl2:NodeGraphicsInfo>
          </xpdl2:NodeGraphicsInfos>
        </xpdl2:Activity>
      </xpdl2:Activities>
      <xpdl2:Transitions>
        <xpdl2:Transition Id="_F4zc4GnLEeCNEO-k721VLA" xpdExt:DisplayName="" Name="" From="_POW4AmnAEeCp3sCuRmkvPQ" To="_DpNY0GnLEeCNEO-k721VLA">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo"/>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhM2nNEeCvfK09LgLLfw" xpdExt:DisplayName="assign" Name="assign" From="_pMp6L2nNEeCvfK09LgLLfw" To="_pMp6JmnNEeCvfK09LgLLfw">
          <xpdl2:Condition Type="CONDITION">
<xpdl2:Expression ScriptGrammar="JavaScript">opScript.toString() == &quot;assign&quot;</xpdl2:Expression>
</xpdl2:Condition>
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="1.0" YCoordinate="-248.0"/>
              <xpdl2:Coordinates XCoordinate="-339.0" YCoordinate="17.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.StartAnchorPosition"/>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.743801652892564" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="-11.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhNGnNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMp6JmnNEeCvfK09LgLLfw" To="_pMp6KmnNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="88.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="-20.0" YCoordinate="-212.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhNWnNEeCvfK09LgLLfw" xpdExt:DisplayName="bigint" Name="bigint" From="_pMp6L2nNEeCvfK09LgLLfw" To="_pMqhMGnNEeCvfK09LgLLfw">
          <xpdl2:Condition Type="CONDITION">
<xpdl2:Expression ScriptGrammar="JavaScript">opScript.toString() == &quot;bigint&quot;</xpdl2:Expression>
</xpdl2:Condition>
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="1.0" YCoordinate="-130.0"/>
              <xpdl2:Coordinates XCoordinate="-381.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="45.74898785425101" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="-18.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.StartAnchorPosition">
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhNmnNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMqhMGnNEeCvfK09LgLLfw" To="_pMp6KmnNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="90.0" YCoordinate="-6.0"/>
              <xpdl2:Coordinates XCoordinate="-50.0" YCoordinate="-171.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhN2nNEeCvfK09LgLLfw" xpdExt:DisplayName="Invalid operation value" Name="Invalidoperationvalue" From="_pMp6L2nNEeCvfK09LgLLfw" To="_pMp6LWnNEeCvfK09LgLLfw">
          <xpdl2:Condition Type="OTHERWISE"/>
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="39.0" YCoordinate="-318.0"/>
              <xpdl2:Coordinates XCoordinate="-173.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="78.18181818181819" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="-13.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhOGnNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMp6LWnNEeCvfK09LgLLfw" To="_pMp6I2nNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="208.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="-46.0" YCoordinate="-326.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhOWnNEeCvfK09LgLLfw" xpdExt:DisplayName="int" Name="int" From="_pMp6L2nNEeCvfK09LgLLfw" To="_pMp6NGnNEeCvfK09LgLLfw">
          <xpdl2:Condition Type="CONDITION">
<xpdl2:Expression ScriptGrammar="JavaScript">opScript.toString() == &quot;int&quot;</xpdl2:Expression>
</xpdl2:Condition>
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="31.0" YCoordinate="-71.0"/>
              <xpdl2:Coordinates XCoordinate="-349.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="38.421052631578945" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="-9.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelSize">
              <xpdl2:Coordinates XCoordinate="28.0" YCoordinate="13.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhOmnNEeCvfK09LgLLfw" xpdExt:DisplayName="bigdec" Name="bigdec" From="_pMp6L2nNEeCvfK09LgLLfw" To="_pMp6KGnNEeCvfK09LgLLfw">
          <xpdl2:Condition Type="CONDITION">
<xpdl2:Expression ScriptGrammar="JavaScript">opScript.toString() == &quot;bigdec&quot;</xpdl2:Expression>
</xpdl2:Condition>
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="42.0" YCoordinate="1.0"/>
              <xpdl2:Coordinates XCoordinate="-269.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="133.0" YCoordinate="1.0"/>
              <xpdl2:Coordinates XCoordinate="-178.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="30.175438596491226" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="-9.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhO2nNEeCvfK09LgLLfw" xpdExt:DisplayName="dec" Name="dec" From="_pMp6L2nNEeCvfK09LgLLfw" To="_pMp6MGnNEeCvfK09LgLLfw">
          <xpdl2:Condition Type="CONDITION">
<xpdl2:Expression ScriptGrammar="JavaScript">opScript.toString() == &quot;dec&quot;</xpdl2:Expression>
</xpdl2:Condition>
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="61.0" YCoordinate="89.0"/>
              <xpdl2:Coordinates XCoordinate="-251.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="49.848024316109424" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="-9.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelSize">
              <xpdl2:Coordinates XCoordinate="30.0" YCoordinate="13.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhPGnNEeCvfK09LgLLfw" xpdExt:DisplayName="date" Name="date" From="_pMp6L2nNEeCvfK09LgLLfw" To="_pMp6IWnNEeCvfK09LgLLfw">
          <xpdl2:Condition Type="CONDITION">
<xpdl2:Expression ScriptGrammar="JavaScript">opScript.toString() == &quot;date&quot;</xpdl2:Expression>
</xpdl2:Condition>
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="61.0" YCoordinate="169.0"/>
              <xpdl2:Coordinates XCoordinate="-216.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="64.26666666666667" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="-12.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhPWnNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMp6NGnNEeCvfK09LgLLfw" To="_pMp6KmnNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="130.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="-43.0" YCoordinate="-85.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhPmnNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMp6KGnNEeCvfK09LgLLfw" To="_pMp6KmnNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="161.0" YCoordinate="6.0"/>
              <xpdl2:Coordinates XCoordinate="-46.0" YCoordinate="1.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhP2nNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMp6MGnNEeCvfK09LgLLfw" To="_pMp6KmnNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="190.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="-51.0" YCoordinate="75.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhQGnNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMp6IWnNEeCvfK09LgLLfw" To="_pMp6KmnNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="192.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="-84.0" YCoordinate="155.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhQWnNEeCvfK09LgLLfw" xpdExt:DisplayName="text" Name="text" From="_pMp6L2nNEeCvfK09LgLLfw" To="_pMp6MmnNEeCvfK09LgLLfw">
          <xpdl2:Condition Type="CONDITION">
<xpdl2:Expression ScriptGrammar="JavaScript">opScript.toString() == &quot;text&quot;</xpdl2:Expression>
</xpdl2:Condition>
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="74.0" YCoordinate="249.0"/>
              <xpdl2:Coordinates XCoordinate="-167.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="77.32696897374701" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="-12.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelSize">
              <xpdl2:Coordinates XCoordinate="28.0" YCoordinate="13.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhQmnNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMp6MmnNEeCvfK09LgLLfw" To="_pMp6KmnNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="218.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="-94.0" YCoordinate="235.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhQ2nNEeCvfK09LgLLfw" xpdExt:DisplayName="ipeScript / scriptUtl" Name="ipeScriptscriptUtl" From="_pMp6L2nNEeCvfK09LgLLfw" To="_pMp6ImnNEeCvfK09LgLLfw">
          <xpdl2:Condition Type="CONDITION">
<xpdl2:Expression ScriptGrammar="JavaScript">opScript.toString() == &quot;ipeScript&quot; || opScript.toString() == &quot;scriptUtl&quot;</xpdl2:Expression>
</xpdl2:Condition>
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="63.0" YCoordinate="329.0"/>
              <xpdl2:Coordinates XCoordinate="-141.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="82.68398268398268" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="-12.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhRGnNEeCvfK09LgLLfw" xpdExt:DisplayName="list" Name="list" From="_pMp6L2nNEeCvfK09LgLLfw" To="_pMp6NWnNEeCvfK09LgLLfw">
          <xpdl2:Condition Type="CONDITION">
<xpdl2:Expression ScriptGrammar="JavaScript">opScript.toString() == &quot;list&quot;</xpdl2:Expression>
</xpdl2:Condition>
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="47.0" YCoordinate="409.0"/>
              <xpdl2:Coordinates XCoordinate="-120.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="49.0" YCoordinate="409.0"/>
              <xpdl2:Coordinates XCoordinate="-118.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="91.0480349344978" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="-11.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelSize">
              <xpdl2:Coordinates XCoordinate="48.0" YCoordinate="15.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhRWnNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMp6NWnNEeCvfK09LgLLfw" To="_pMp6KmnNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="198.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="-188.0" YCoordinate="395.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhRmnNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMp6ImnNEeCvfK09LgLLfw" To="_pMp6KmnNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="221.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="-128.0" YCoordinate="315.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhR2nNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMqhMmnNEeCvfK09LgLLfw" To="_pMqhMWnNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="116.0" YCoordinate="588.0"/>
              <xpdl2:Coordinates XCoordinate="-135.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhSGnNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMp6LGnNEeCvfK09LgLLfw" To="_pMqhMWnNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="132.0" YCoordinate="508.0"/>
              <xpdl2:Coordinates XCoordinate="-157.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhSWnNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMp6LmnNEeCvfK09LgLLfw" To="_pMqhMWnNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="207.0" YCoordinate="188.0"/>
              <xpdl2:Coordinates XCoordinate="-230.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhSmnNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMp6MWnNEeCvfK09LgLLfw" To="_pMqhMWnNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="125.0" YCoordinate="348.0"/>
              <xpdl2:Coordinates XCoordinate="-235.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhS2nNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMp6JGnNEeCvfK09LgLLfw" To="_pMqhMWnNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="57.0" YCoordinate="428.0"/>
              <xpdl2:Coordinates XCoordinate="-268.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhTGnNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMp6KmnNEeCvfK09LgLLfw" To="_pMp6M2nNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo"/>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhTWnNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMqhMWnNEeCvfK09LgLLfw" To="_pMp6I2nNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="121.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="595.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.EndAnchorPosition">
              <xpdl2:Coordinates XCoordinate="48.781231420920214" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhTmnNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMp6M2nNEeCvfK09LgLLfw" To="_pMp6I2nNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo"/>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhT2nNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMp6JWnNEeCvfK09LgLLfw" To="_pMqhMWnNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="16.0" YCoordinate="828.0"/>
              <xpdl2:Coordinates XCoordinate="-135.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhUGnNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMp6NmnNEeCvfK09LgLLfw" To="_pMqhMWnNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="40.0" YCoordinate="748.0"/>
              <xpdl2:Coordinates XCoordinate="-144.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhUWnNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMp6KWnNEeCvfK09LgLLfw" To="_pMqhMWnNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="35.0" YCoordinate="668.0"/>
              <xpdl2:Coordinates XCoordinate="-183.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhUmnNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMp6IGnNEeCvfK09LgLLfw" To="_pMqhMWnNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="167.0" YCoordinate="268.0"/>
              <xpdl2:Coordinates XCoordinate="-230.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhU2nNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMp6J2nNEeCvfK09LgLLfw" To="_pMqhMWnNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="34.0" YCoordinate="108.0"/>
              <xpdl2:Coordinates XCoordinate="-436.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhVGnNEeCvfK09LgLLfw" xpdExt:DisplayName="process" Name="process" From="_pMp6L2nNEeCvfK09LgLLfw" To="_pMp6K2nNEeCvfK09LgLLfw">
          <xpdl2:Condition Type="CONDITION">
<xpdl2:Expression ScriptGrammar="JavaScript">opScript.toString() == &quot;process&quot;</xpdl2:Expression>
</xpdl2:Condition>
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="20.0" YCoordinate="489.0"/>
              <xpdl2:Coordinates XCoordinate="-111.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="95.17374517374517" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="-13.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_pMqhVWnNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMp6K2nNEeCvfK09LgLLfw" To="_pMp6KmnNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="415.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="-7.0" YCoordinate="475.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_u0zOYGnNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_DpNY0WnLEeCNEO-k721VLA" To="_pMqhMWnNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="190.0" YCoordinate="736.0"/>
              <xpdl2:Coordinates XCoordinate="-528.0" YCoordinate="6.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_wlOqMGnNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_DpNY0GnLEeCNEO-k721VLA" To="_pMp6L2nNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="68.0" YCoordinate="161.0"/>
              <xpdl2:Coordinates XCoordinate="-56.0" YCoordinate="1.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_1JFP4GnNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_pMp6I2nNEeCvfK09LgLLfw" To="_zzmqsWnNEeCvfK09LgLLfw">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo"/>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_4lu88GnNEeCvfK09LgLLfw" xpdExt:DisplayName="" Name="" From="_zzmqsWnNEeCvfK09LgLLfw" To="_POW4A2nAEeCp3sCuRmkvPQ">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo"/>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_iSwtAJ55EeC5wuChGREBNQ" xpdExt:DisplayName="Never Executed" Name="NeverExecuted" From="_pMp6L2nNEeCvfK09LgLLfw" To="_fDf7sJ55EeC5wuChGREBNQ">
          <xpdl2:Condition Type="CONDITION">
<xpdl2:Expression ScriptGrammar="JavaScript">false</xpdl2:Expression>
</xpdl2:Condition>
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo">
              <xpdl2:Coordinates XCoordinate="1.0" YCoordinate="-442.0"/>
              <xpdl2:Coordinates XCoordinate="-66.0" YCoordinate="1.0"/>
            </xpdl2:ConnectorGraphicsInfo>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.EndAnchorPosition"/>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="97.44136460554371" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="-32.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
        <xpdl2:Transition Id="_xfVk4J55EeC5wuChGREBNQ" xpdExt:DisplayName="" Name="" From="_fDf7sJ55EeC5wuChGREBNQ" To="_tVKcwJ50EeC5wuChGREBNQ">
          <xpdl2:ConnectorGraphicsInfos>
            <xpdl2:ConnectorGraphicsInfo BorderColor="0,0,128" ToolId="XPD.ConnectionInfo"/>
            <xpdl2:ConnectorGraphicsInfo ToolId="XPD.LabelAnchorPosition">
              <xpdl2:Coordinates XCoordinate="50.0" YCoordinate="0.0"/>
              <xpdl2:Coordinates XCoordinate="0.0" YCoordinate="0.0"/>
            </xpdl2:ConnectorGraphicsInfo>
          </xpdl2:ConnectorGraphicsInfos>
        </xpdl2:Transition>
      </xpdl2:Transitions>
      <xpdl2:ExtendedAttributes>
        <xpdl2:ExtendedAttribute Name="Destination" Value="CE"/>
        <xpdl2:ExtendedAttribute Name="WorkflowProcessSimulationData">
<simulation:WorkflowProcessSimulationData>
            <simulation:ParameterDistribution ParameterId="value"/>
            <simulation:ParameterDistribution ParameterId="expectedValue"/>
            <simulation:ParameterDistribution ParameterId="src"/>
            <simulation:ParameterDistribution ParameterId="dst"/>
            <simulation:ParameterDistribution ParameterId="result"/>
            <simulation:ParameterDistribution ParameterId="actualValue"/>
            <simulation:ParameterDistribution ParameterId="description"/>
            <simulation:ParameterDistribution ParameterId="src2"/>
            <simulation:ParameterDistribution ParameterId="value2"/>
            <simulation:ParameterDistribution ParameterId="operation"/>
            <simulation:ParameterDistribution ParameterId="flags"/>
          </simulation:WorkflowProcessSimulationData>
</xpdl2:ExtendedAttribute>
      </xpdl2:ExtendedAttributes>
    </xpdl2:WorkflowProcess>
  </xpdl2:WorkflowProcesses>
  <xpdl2:ExtendedAttributes>
    <xpdl2:ExtendedAttribute Name="CreatedBy" Value="TIBCO Business Studio"/>
    <xpdl2:ExtendedAttribute Name="FormatVersion" Value="10"/>
  </xpdl2:ExtendedAttributes>
</xpdl2:Package>