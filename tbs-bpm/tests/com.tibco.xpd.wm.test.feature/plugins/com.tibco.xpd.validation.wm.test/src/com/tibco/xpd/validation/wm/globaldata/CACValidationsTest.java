/**
 * Copyright (c) TIBCO Software Inc 2004-2009. All rights reserved.
 */
package com.tibco.xpd.validation.wm.globaldata;

import java.util.Collections;

import org.eclipse.core.resources.IProject;
import org.eclipse.core.resources.IProjectDescription;
import org.eclipse.core.resources.IWorkspaceRoot;
import org.eclipse.core.resources.ResourcesPlugin;
import org.eclipse.core.runtime.NullProgressMonitor;

import com.tibco.xpd.core.test.util.TestResourceInfo;
import com.tibco.xpd.core.test.validations.ValidationsTestProblemMarkerInfo;
import com.tibco.xpd.resources.ui.util.PostImportUtil;
import com.tibco.xpd.resources.util.ProjectImporter;
import com.tibco.xpd.resources.util.SubProgressMonitorEx;
import com.tibco.xpd.validation.wm.test.AbstractJavaScriptValidatorTest;
import com.tibco.xpd.validation.wm.test.WMValidationTestActivator;

/**
 * CACValidationsTest
 * <p>
 * CACValidationsTest - Test selected validations are correctly raised.
 * </p>
 * <p>
 * Generated by: createBaseTest.javajet
 * </p>
 * 
 * 
 * 
 * @author
 * @since
 */
public class CACValidationsTest extends AbstractJavaScriptValidatorTest {

    public CACValidationsTest() {
        super(true);
    }

    /**
     * @see com.tibco.xpd.core.test.util.AbstractBuildingBaseResourceTest#setUp()
     * 
     * @throws Exception
     */
    @Override
    protected void setUp() throws Exception {

        /*
         * Import business data project before running test
         */
        ProjectImporter importBizDataProj =
                ProjectImporter
                        .createPluginProjectImporter(WMValidationTestActivator.PLUGIN_ID,
                                Collections
                                        .singletonList("resources/CACValidations/BDProj.zip")); //$NON-NLS-1$
        importBizDataProj.performImport();

        IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();

        IProject createdBizDataProject = root.getProject("BDProj"); //$NON-NLS-1$

        /*
         * Perform post import task so that if the bom project or resource is
         * older version it can be migrated
         */
        PostImportUtil
                .getInstance()
                .performPostImportTasks(Collections.singletonList(createdBizDataProject),
                        SubProgressMonitorEx
                                .createMainProgressMonitor(new NullProgressMonitor(),
                                        1));
        /* call super.setUp so that the test project is created */
        super.setUp();

        IProject testProject = getTestProject("CACValidations");//$NON-NLS-1$

        /* add project references on test project to biz data project */
        if (testProject != null && testProject.exists()
                && createdBizDataProject != null) {

            IProjectDescription description = testProject.getDescription();
            if (description != null) {

                IProject[] referencedProjects =
                        description.getReferencedProjects();
                for (IProject ref : referencedProjects) {

                    if (ref.equals(createdBizDataProject)) {
                        return;
                    }
                }
                IProject[] newList =
                        new IProject[referencedProjects.length + 1];
                System.arraycopy(referencedProjects,
                        0,
                        newList,
                        0,
                        referencedProjects.length);
                newList[referencedProjects.length] = createdBizDataProject;
                description.setReferencedProjects(newList);
                testProject.setDescription(description,
                        new NullProgressMonitor());
                testProject.touch(new NullProgressMonitor());
                buildAndWait();
            }
        }

        return;
    }

    /**
     * CACValidationsTest
     * 
     * @throws Exception
     */
    public void testCACValidationsTest() throws Exception {
        doTestValidations();
        return;
    }

    @Override
    protected ValidationsTestProblemMarkerInfo[] getValidationProblemMarkerInfos() {
        ValidationsTestProblemMarkerInfo[] markerInfos =
                new ValidationsTestProblemMarkerInfo[] {

                        new ValidationsTestProblemMarkerInfo(
                                "/CACValidations/Process Packages/CACValidations.xpdl", //$NON-NLS-1$ 
                                "bx.warning.validateScriptTask", //$NON-NLS-1$ 
                                "_eWwBoJi5EeOiZ41mVqvtaA", //$NON-NLS-1$ 
                                "Process Manager 2.x : At Line:13 column:91, DQL Query Warning:Conditions based on an attribute (quantity) that is neither a case identifier nor searchable may harm performance (CACValidationsProcess:ScriptTask)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/CACValidations/Process Packages/CACValidations.xpdl", //$NON-NLS-1$ 
                                "bx.warning.validateScriptTask", //$NON-NLS-1$ 
                                "_eWwBoJi5EeOiZ41mVqvtaA", //$NON-NLS-1$ 
                                "Process Manager 2.x : At Line:14 column:96, DQL Query Warning:Conditions based on an attribute (quantity) that is neither a case identifier nor searchable may harm performance (CACValidationsProcess:ScriptTask)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/CACValidations/Process Packages/CACValidations.xpdl", //$NON-NLS-1$ 
                                "bx.warning.validateScriptTask", //$NON-NLS-1$ 
                                "_eWwBoJi5EeOiZ41mVqvtaA", //$NON-NLS-1$ 
                                "Process Manager 2.x : At Line:19 column:89, DQL Query Warning:Conditions based on an attribute (quantity) that is neither a case identifier nor searchable may harm performance (CACValidationsProcess:ScriptTask)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/CACValidations/Process Packages/CACValidations.xpdl", //$NON-NLS-1$ 
                                "bx.warning.validateScriptTask", //$NON-NLS-1$ 
                                "_eWwBoJi5EeOiZ41mVqvtaA", //$NON-NLS-1$ 
                                "Process Manager 2.x : At Line:22 column:99, DQL Query Warning:Conditions based on an attribute (quantity) that is neither a case identifier nor searchable may harm performance (CACValidationsProcess:ScriptTask)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/CACValidations/Process Packages/CACValidations.xpdl", //$NON-NLS-1$ 
                                "bx.specificNumberFormatNotEnforced", //$NON-NLS-1$ 
                                "_hd8RoKXWEeO9qLgzWbUrYQ", //$NON-NLS-1$ 
                                "Process Manager 2.x : Specific numeric format restrictions (length and decimal places) are not enforced by the process manager (in script calculations etc) (CACValidationsProcess:IntArray)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/CACValidations/Process Packages/CACValidations.xpdl", //$NON-NLS-1$ 
                                "bx.warning.validateScriptTask", //$NON-NLS-1$ 
                                "_mn7gMJ-1EeODUsrh1bBnKA", //$NON-NLS-1$ 
                                "Process Manager 2.x : At Line:10 column:59, Only DQL specified in a literal string can be validated at design time. Where possible use literal string queries to ensure validation can be performed. (CACValidationsInvalidScript:ScriptTask)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/CACValidations/Process Packages/CACValidations.xpdl", //$NON-NLS-1$ 
                                "bx.warning.validateScriptTask", //$NON-NLS-1$ 
                                "_mn7gMJ-1EeODUsrh1bBnKA", //$NON-NLS-1$ 
                                "Process Manager 2.x : At Line:3 column:67, Only DQL specified in a literal string can be validated at design time. Where possible use literal string queries to ensure validation can be performed. (CACValidationsInvalidScript:ScriptTask)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/CACValidations/Process Packages/CACValidations.xpdl", //$NON-NLS-1$ 
                                "bx.warning.validateScriptTask", //$NON-NLS-1$ 
                                "_mn7gMJ-1EeODUsrh1bBnKA", //$NON-NLS-1$ 
                                "Process Manager 2.x : At Line:4 column:75, Only DQL specified in a literal string can be validated at design time. Where possible use literal string queries to ensure validation can be performed. (CACValidationsInvalidScript:ScriptTask)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/CACValidations/Process Packages/CACValidations.xpdl", //$NON-NLS-1$ 
                                "bx.warning.validateScriptTask", //$NON-NLS-1$ 
                                "_mn7gMJ-1EeODUsrh1bBnKA", //$NON-NLS-1$ 
                                "Process Manager 2.x : At Line:8 column:60, Only DQL specified in a literal string can be validated at design time. Where possible use literal string queries to ensure validation can be performed. (CACValidationsInvalidScript:ScriptTask)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/CACValidations/Process Packages/CACValidations.xpdl", //$NON-NLS-1$ 
                                "bx.warning.validateScriptTask", //$NON-NLS-1$ 
                                "_mn7gMJ-1EeODUsrh1bBnKA", //$NON-NLS-1$ 
                                "Process Manager 2.x : At Line:9 column:67, Only DQL specified in a literal string can be validated at design time. Where possible use literal string queries to ensure validation can be performed. (CACValidationsInvalidScript:ScriptTask)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/CACValidations/Process Packages/CACValidations.xpdl", //$NON-NLS-1$ 
                                "bx.warning.validateScriptTask", //$NON-NLS-1$ 
                                "_mn7gMJ-1EeODUsrh1bBnKA", //$NON-NLS-1$ 
                                "Process Manager 2.x : At Line:1 column:89, DQL Query Warning:Conditions based on an attribute (quantity) that is neither a case identifier nor searchable may harm performance (CACValidationsInvalidScript:ScriptTask)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                        new ValidationsTestProblemMarkerInfo(
                                "/CACValidations/Process Packages/CACValidations.xpdl", //$NON-NLS-1$ 
                                "bx.warning.validateScriptTask", //$NON-NLS-1$ 
                                "_oDllYKXVEeO9qLgzWbUrYQ", //$NON-NLS-1$ 
                                "Process Manager 2.x : At Line:5 column:82, DQL Query Warning:Conditions based on an attribute (address) that is neither a case identifier nor searchable may harm performance (CACValidationsProcess:XPD5920)", //$NON-NLS-1$ 
                                ""), //$NON-NLS-1$ 

                };
        return markerInfos;
    }

    @Override
    protected String getTestName() {
        return "CACValidationsTest"; //$NON-NLS-1$
    }

    @Override
    protected String getTestPlugInId() {
        return "com.tibco.xpd.validation.wm.test"; //$NON-NLS-1$
    }

    @Override
    protected TestResourceInfo[] getTestResources() {
        TestResourceInfo[] testResources =
                new TestResourceInfo[] { new TestResourceInfo(
                        "resources/CACValidations", "CACValidations/Process Packages{processes}/CACValidations.xpdl"), //$NON-NLS-1$ //$NON-NLS-2$
                };

        return testResources;
    }

}
