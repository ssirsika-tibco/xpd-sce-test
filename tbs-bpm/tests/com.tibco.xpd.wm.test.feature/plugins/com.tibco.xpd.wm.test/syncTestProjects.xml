<?xml version="1.0" encoding="UTF-8"?>
<project name="syncTestProjects" default="run" basedir=".">
<!--
This tool is used to automatically reexport set of projects from SVN repository, 
zip them and move into the plug-ins's resources folder (ready to use by: 
com.tibco.xpd.core.test.util.ProjectImporter). 

To use it you should: 
- copy it into your test plug-in folder root.
- add your specific projects to reexport (modify 'run' target adding ant calls with your 
project svn's URL and desired name).
- set ${localProjectsFolder} for your plugin (default is 'resources') ('init' target)
- optionally set ${temp} for your plugin (default is 'temp__')

REMARK: You need SVN command client installed and running to be able to run this succesfully.

@autor Jan Arciuchiewicz
-->
	<target name="run" depends="init, clean">
		<!-- Example: Copy it below and modify according to your needs.
		<antcall target="exportProject">
			<param name="svnProjectURL" value="https://emea-swi-svn/svn/technical/xpd/trunk/extra-stuff/AcceptanceTest/AMX M4 Test Cases/Work Manager use cases/UC2FWorkItemScripts"/>
			<param name="exportedProjectName" value="UC2FWorkItemScripts"/>
		</antcall>
		-->
		<antcall target="exportProject">
			<param name="svnProjectURL" value="https://emea-swi-svn/svn/technical/xpd/trunk/extra-stuff/AcceptanceTest/AMX M4 Test Cases/Work Manager use cases/UC2FWorkItemScripts"/>
			<param name="exportedProjectName" value="UC2FWorkItemScripts"/>
		</antcall>
		<antcall target="exportProject">
			<param name="svnProjectURL" value="https://emea-swi-svn/svn/technical/xpd/trunk/extra-stuff/AcceptanceTest/AMX M4 Test Cases/Work Manager use cases/UC2ANoneStartEventWithUserTasks"/>
			<param name="exportedProjectName" value="UC2ANoneStartEventWithUserTasks"/>
		</antcall>
			
		<!-- ... Add more projects to export here. -->
		
		<antcall target="clean"></antcall>
	</target>
	

	<!-- This target holds all initialization code. -->
	<target name="init">
		<property name="localProjectsFolder" value="${basedir}/resources"/>		
		<property name="temp" value="${basedir}/temp__"/>
		<property environment="env" />
		<tstamp/>
	</target>	
	
	<!-- This target holds code to cleanup the environment. -->
	<target name="clean" depends="init">
		<delete dir="${temp}" />
	</target>

	<!-- Exports one project from SVN to temp folder. -->
	<target name="svnExport" if="svnProjectURL" description="Exports specific project from SVN to temporary location." depends="init">
		<exec executable="svn.exe">
			<arg value="export"/>
			<arg value="${svnProjectURL}"/>
			<arg value="${temp}/${exportedProjectName}"/>
		</exec>
	</target>
	
	<!-- Zips and moves one project from ${temp} folder to ${localProjectsFolder}. -->
	<target name="zipProject" if="exportedProjectName" description="Zips and moves exported project." depends="init">
		<zip destfile="${temp}/${exportedProjectName}.zip" basedir="${temp}/${exportedProjectName}" />
		<move file="${temp}/${exportedProjectName}.zip" todir="${localProjectsFolder}" overwrite="true" />
	</target>
	
	<target name="exportProject" if="exportedProjectName" depends="svnExport, zipProject"/> 
	
</project>