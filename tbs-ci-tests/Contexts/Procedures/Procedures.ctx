--- RCPTT testcase ---
Format-Version: 1.0
Context-Type: org.eclipse.rcptt.ctx.ecl
Element-Name: Procedures
Element-Type: context
Element-Version: 2.0
Id: _sokeoOnpEeSK-v-ghnuP9g
Runtime-Version: 2.3.0.201806262310
Save-Time: 6/19/19 5:30 PM

------=_.ecl.context-718f04b4-ed39-33e3-af62-0995e4561998
Content-Type: text/ecl
Entry-Name: .ecl.context

//RASC Generation Procedures
proc "ButtonEnable" [val buttonName] [val status]{
with [get-button $buttonName] {
        get-property enablement | equals $status | verify-true
        get-property caption | equals $buttonName | verify-true
    }
    }

proc "LabelDisplayed" [val labelName] [val visible]{
with [get-label $labelName] {
        get-property "getText()" | equals $labelName | verify-true
        get-property "isVisible()" | equals $visible | verify-true
    }
    }
    
proc "projectChecked" [val project] [val checked]{
        get-item -path $project | get-property caption | equals $project | verify-true
        get-item -path $project | get-property checked | equals $checked | verify-true
    }
  
proc "projectExportStatus" [val project] [val status]{    
       get-label $project | get-property caption | equals $project | verify-true
       get-label $status -after [get-label $project] 
    }

//Create Project
proc "createProject" [val projectType] [val projectName] {
	get-view "Project Explorer" | get-tree | get-menu -path [concat "New/" $projectType] | click
	with [get-window [concat "New " $projectType]] {
    get-editbox -after [get-label "Project name:"] | set-text $projectName
    get-button Finish | click
}
    }
    
//Save Package
proc "savePackage" {
	get-window "Save Package" | get-button OK | click
}

//Verify Version Text
 proc "verifyTextOnLifeCycleWindow"{
 with [get-window "Properties for MjrMinrVersion"] {
    with [get-label "After incrementing the major version, and deploying this project, existing projects that depend on it will not use the new version until they are re-exported and deployed."] {
        get-property caption 
            | equals "After incrementing the major version, and deploying this project, existing projects that depend on it will not use the new version until they are re-exported and deployed." 
            | verify-true
        get-property "isVisible()" | equals true | verify-true
    }
    with [get-label "Increment the major version only if you need to make changes to this project that are not backward-compatible."] {
        get-property "getText()" 
            | equals "Increment the major version only if you need to make changes to this project that are not backward-compatible." 
            | verify-true
        get-property "isVisible()" | equals true | verify-true
    }
}
 }
 
 
//Import a zipped Project
proc "importArchiveFile" [val archiveName] [val projectLocation]{
     get-view "Project Explorer" | get-tree | get-menu -path "Import/Existing Studio Projects into Workspace" | click
     with [get-window "Import Projects"] {
    	get-editbox -index 1 | set-focus
    	get-button "Select archive file:" | click
    	with [get-editbox -index 1] {
           set-text $projectLocation
    	}
     }
     set-dialog-result File $projectLocation
	 with [get-window "Import Projects" | get-editbox -index 1] {
    	click-text 1
    	set-focus
	 }
	 with [get-window "Import Projects" | get-tree] {
    	get-item -path [concat $archiveName" \\(" $archiveName"\\)"]| get-property checked | equals true 
        | verify-true
    	get-item -path [concat $archiveName" \\(" $archiveName"\\)"] | get-property "getText()" 
        | equals [concat $archiveName" (" $archiveName")"] | verify-true
	 }
	 with [get-window "Import Projects"] {
    	get-editbox -index 1 | set-focus
     	get-button Finish | click
     }
 }
 
 //Delete Project
proc "deleteProject" [val projectName]{
    with [get-view "Project Explorer" | get-tree] {
    //select "ACE-443_DestEnv_BPM" | key-type "M2+ARROW_DOWN"
    select $projectName
    get-menu -path Delete | click
	}
	with [get-window "Delete Resources"] {
    get-button "Delete project contents on disk (cannot be undone)" | check
    get-button OK | click
	}

 }
 

//Verify a Property if present in Window >>Preference
proc verifyPropertyWinPreferenceNotPresent [val property]{

    get-preferences-menu | click
	with [get-window Preferences] {
    with [get-editbox] {
        set-text ""
        set-text Des
    }
    get-tree | select "Form Designer"
    get-editbox | set-text $property
	}
	with [get-window Preferences | get-tree] {
    get-property "getItemCount()" | equals 0 | verify-true
    get-property "toString()" | equals "Tree {}" | verify-true
	}
	get-window Preferences | get-button Cancel | click
}

//Export the RASC.
proc "exportRASCProjectLocation" [val projectName]{
with [get-view "Project Explorer" | get-tree] {
    select $projectName 
    | get-menu 
    -path "Export/Export Deployment Artifacts" | click
}

with [get-window "Export Deployment Artifacts"] {
    get-label "Export Deployment Artifacts" | get-property caption | equals "Export Deployment Artifacts" | verify-true
    with [get-group Destination] {
        get-label "(Location: Exports/Deployment Artifacts)" | get-property caption 
            | equals "(Location: Exports/Deployment Artifacts)" | verify-true
        with [get-button Project] {
            get-property caption | equals Project | verify-true
            get-property selected | equals true | verify-true
        }
    }
}
exec-with-options {
    get-window "Export Deployment Artifacts" | get-button Export | click
    
} -allowStatusDialog
with [get-window "Export Deployment Artifacts" | get-control Any 
    -after [get-label "Deployment artifacts successfully created. You can launch the administrator to deploy these."]] {
    get-property className | equals "org.eclipse.swt.widgets.ProgressBar" | verify-true
    get-property enablement | equals true | verify-true
}
get-window "Export Deployment Artifacts" | get-button Close | click

}
------=_.ecl.context-718f04b4-ed39-33e3-af62-0995e4561998--
