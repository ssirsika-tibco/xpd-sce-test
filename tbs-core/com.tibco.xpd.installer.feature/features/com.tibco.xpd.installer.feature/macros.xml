<?xml version="1.0" encoding="UTF-8"?>
<!-- ======================================================================
     Sep 21, 2008 8:59:15 PM

     eclipse.tests
     Execute Eclipse tests

     wzurek
     ====================================================================== -->
<project name="eclipse.tests" default="default">
    <description>
            Execute Eclipse tests
    </description>

	<import file="${user.home}/tibco-build/user-overrides.xml"/>
	<!--property name="do.emma.coverage" value="true"/-->
	<property environment="env" />
	<property name="coverage.dir" value="${env.WORKSPACE}/coverage-data"/>
	<property name="zipFileLocation" value="${env.WORKSPACE}"/>
	<property name="zipFilePrefix" value="bpm-studio-"/>

    <!-- =================================
          target: default
    <target name="default" depends="-copy-eclipse, -prepare-download" description="Execute Eclipse tests">
         ================================= -->
    <target name="default" depends="-copy-eclipse, -copy-extra-features, -check-launcher, -init-eclipse, -configure-tp, -prepare-download, -emma.addinstrumentation" description="Execute Eclipse tests">
		<echo>installer.feature/macros.xml/default:  studio.junit.jre='${studio.junit.jre}'</echo>
        <ant antfile="all.tests.xml">
        	<property name="jvm" value="${studio.junit.jre}"/>
			<property name="coverage.dir" value="${coverage.dir}"/>
			<property name="vmargs" value='-Demma.coverage.out.file="${coverage.dir}\coverage.emma" -Demma.coverage.out.merge=true'/>
        	<!--property name="extraVMargs" value=' -Dorg.osgi.framework.bootdelegation=javax.xml.*,org.apache.xml.*,org.apache.xmlbeans.* -Xms256m -Xmx512m -XX:PermSize=128M -XX:MaxPermSize=512m -XX:+UnlockDiagnosticVMOptions -XX:+UnsyncloadClass'/-->
			<property name="extraVMargs" value=' -Xms256m -Xmx512m -XX:PermSize=128M -XX:MaxPermSize=512m -XX:+UnlockDiagnosticVMOptions -XX:+UnsyncloadClass'/>
			<property name="emma.dir" value="${emma.dir}" />
		</ant>
		<antcall target="-emma.report"/>
    </target>


    <!-- - - - - - - - - - - - - - - - - -
          target: -emma.report
         - - - - - - - - - - - - - - - - - -->
    <target name="-emma.report" if="do.emma.coverage">
		<emma enabled="${do.emma.coverage}" >
			<report sort="-class,+name,-block,-method,">
				<fileset dir="${coverage.dir}" >
					<include name="*.emma" />
				</fileset>
				<txt outfile="${coverage.dir}/coverage.txt" />
				<xml outfile="${coverage.dir}/coverage.xml" />
				<html outfile="${coverage.dir}/coverage.html" />
			</report>
		</emma>
	</target>

    <!-- - - - - - - - - - - - - - - - - -
          target: -emma.addinstrumentation
         - - - - - - - - - - - - - - - - - -->
    <target name="-emma.addinstrumentation" if="do.emma.coverage">
		<delete dir="${coverage.dir}"/>

		<echo>Installing EMMA</echo>
		<property name="emma.dir" value="${basedir}/lib" />

		<path id="emma.lib" >
			<pathelement location="${emma.dir}/emma.jar" />
			<pathelement location="${emma.dir}/emma_ant.jar" />
		</path>

		<path id="emma.instrumentation" >
			<fileset dir="${installation.root}/components/eclipse/plugins">
				<include name="com.tibco.*.jar"/>
				<exclude name="com.tibco.xpd*.jar"/>
				<exclude name="com.tibco.luna*.jar"/>
				<exclude name="com.tibco.neo*.jar"/>
				<exclude name="com.tibco.security*.jar"/>
				<exclude name="com.tibco.tpcl*.jar"/>
			</fileset>
		</path>

		<taskdef resource="emma_ant.properties" classpathref="emma.lib" />

		<emma enabled="${do.emma.coverage}" >
			<instr instrpathref="emma.instrumentation"
				mode="overwrite"
				metadatafile="${coverage.dir}/metadata.emma"
				merge="true"/>
		</emma>

    </target>

    <!-- Copy Eclipse SDK over the gathered set of features (TP). -->
	<!-- TODO do the smarter TP unsing p2 -->
    <target name="-copy-eclipse" if="tp.base.eclipse.platform.location" unless="skip.copy-eclipse">
    	<echo>Coping Eclipse SDK to TP from: ${tp.base.eclipse.platform.location}</echo>
    	<copy todir="${installation.root}/components/eclipse">
    		<fileset dir="${tp.base.eclipse.platform.location}">
    		</fileset>
    	</copy>
    </target>

    <!-- Copy extra features like sources, etc. over the gathered TP. -->
    <target name="-copy-extra-features" if="tp.extra.features.dir" unless="skip.copy-extra-features">
    	<echo>Coping extra features to TP from: ${tp.extra.features.dir}</echo>
    	<copy todir="${installation.root}/components/eclipse">
    		<fileset dir="${tp.extra.features.dir}">
    		</fileset>
    	</copy>
    </target>

    <!-- Prepare download of the TP. -->
    <target name="-prepare-download" if="installation.zip.dir">
    	<property environment="env" />
    	<property name="zip.filename" value="${zipFilePrefix}${env.BUILD_NUMBER}.zip"/>
		<echo>Create a zip from: ${installation.root}/components/eclipse</echo>
		<echo>to: ${zipFileLocation}/${zip.filename}</echo>
		<delete dir="${zipFileLocation}" includes="${zipFilePrefix}*.zip"></delete>
    	<zip destfile="${zipFileLocation}/${zip.filename}">
    		<fileset dir="${installation.root}/components/eclipse"/>
    	</zip>

		<delete dir="${env.WORKSPACE}/lastBuild" includes="${lastBuildStudio}"></delete>
		<mkdir dir="${env.WORKSPACE}/lastBuild"/>
		<echo>Copying file from: ${zipFileLocation}/${zip.filename} to:${env.WORKSPACE}/lastBuild/${lastBuildStudio}</echo>
    	<copy file="${zipFileLocation}/${zip.filename}" tofile="${env.WORKSPACE}/lastBuild/${lastBuildStudio}" verbose="true"/>
    </target>

    <!--
    	Make sure the launcher exists in the TP so it can be initialized.
    	The p2 initialization will run in one of the following targets,
    	so the created target platform will be ready to use.
    -->
	<target name="-check-launcher" description="Checks for launcher jar and sets 'launcher.available', 'bs.launcher.file' and 'bs.launcher.version'">
		<!-- TP launcher properties. -->
		<property name="bs.tp.dir" location="${installation.root}/components/eclipse" />

		<first id="first.launcher.file">
		    <fileset dir="${bs.tp.dir}/plugins" includes="org.eclipse.equinox.launcher_*.jar" />
		</first>
		<property name="bs.launcher.file" value="${toString:first.launcher.file}" />
		<script language="javascript">
			<![CDATA[
			//Sets "bs.product.destination.dir" it is different for the mac.
			var launcherVersion = project.getProperty("bs.launcher.version");
			var launcherFile = project.getProperty("bs.launcher.file");
			if (!launcherVersion && launcherFile) {
				var re = /.*org\.eclipse\.equinox\.launcher_(.*?)\.jar$/ig;
				var result = re.exec(launcherFile);
				var launcherVersion = result[1];
				project.setProperty("bs.launcher.version", launcherVersion);
			}
			]]>
		</script>

		<available property="launcher.available" classname="org.eclipse.equinox.launcher.Main">
		  <classpath>
		    <pathelement location="${bs.tp.dir}/plugins/org.eclipse.equinox.launcher_${bs.launcher.version}.jar" />
		  </classpath>
		</available>
	</target>

	<!--
		Initialise the p2 meta-data. Used for both TIBCO-provided Eclipse and
		customer one and employs Java launch not binary launcher to better
		support Solaris x86. In both cases basedir will be correct (though
		different).
	-->
	<target name="-init-eclipse" if="launcher.available">
		<echo>basedir=${basedir}</echo>
		<echo>jvm    =${bpm.build.jre.11}</echo>
		<echo>jar    =${bs.tp.dir}/plugins/org.eclipse.equinox.launcher_${bs.launcher.version}.jar</echo>
        <java
	            dir="${basedir}"
				jvm="${bpm.build.jre.11}"
	            jar="${bs.tp.dir}/plugins/org.eclipse.equinox.launcher_${bs.launcher.version}.jar"
	            fork="true"
	            failonerror="true">
	        <arg line="-initialize -nosplash -clean"/>
	        <jvmarg value="-Xms256m"/>
	        <jvmarg value="-Xmx1024m"/>
	        <jvmarg value="-XX:MaxPermSize=256m"/>
        </java>
	</target>

	
	<target name="-configure-tp">
		<echo>Configuring target platfom in: ${bs.tp.dir}</echo>
		<ant antfile="configure-tp-build.xml">
			<property name="bs.product.dir" value="${bs.tp.dir}"/>
		</ant>
	</target>
</project>
