<%
GenAuditContainer rootContainer = genDiagram.getEditorGen().getAudits();
if (genDiagram.getEditorGen().hasAudits()) {
	java.util.List containers = rootContainer.getAllAuditContainers();
%>
<extension point="org.eclipse.emf.validation.constraintProviders">
<%
	java.util.HashMap idMap = new java.util.HashMap();
	for(int i = 0; i < containers.size(); i++) {
		GenAuditContainer container = (GenAuditContainer)containers.get(i);
		idMap.put(container, container.getId() != null ? container.getId() : "category" + Integer.toString(i + 1));
	}
	java.util.HashMap pathMap = new java.util.HashMap();
	for(int i = 0; i < containers.size(); i++) {
		GenAuditContainer category = (GenAuditContainer)containers.get(i);
		java.util.List path = category.getPath();
		StringBuffer id = new StringBuffer();
		for(int pathPos = 0; pathPos < path.size(); pathPos++) {
			if(pathPos > 0) id.append('/');
			id.append(idMap.get(path.get(pathPos)));
		}
		pathMap.put(category, id.toString());
%>
	<category
		id="<%=org.eclipse.gmf.internal.common.codegen.Conversions.escapeXML(id.toString())%>"
		mandatory="false"
		name="<%=org.eclipse.gmf.internal.common.codegen.Conversions.escapeXML(category.getName() != null ? category.getName() : id.toString())%>">
	<![CDATA[<%=category.getDescription() != null ? category.getDescription():""%>]]>
	</category>		
<%
	} // end of categories loop
%>
	<constraintProvider cache="true">
<%
	for(java.util.Iterator packageIt = rootContainer.getAllTargetedModelPackages().iterator(); packageIt.hasNext();) {
		GenPackage genPackage = (GenPackage)packageIt.next();
%>
		<package namespaceUri="<%=genPackage.getNSURI()%>"/>
<%
	} // end of used model packages iteration
	int rulePos = 0;
	for(java.util.Iterator catIt = containers.iterator(); catIt.hasNext();) {
		GenAuditContainer category = (GenAuditContainer)catIt.next();
%>
		<constraints categories="<%=org.eclipse.gmf.internal.common.codegen.Conversions.escapeXML(pathMap.get(category).toString())%>">		
<%
		for(java.util.Iterator it = category.getAudits().iterator(); it.hasNext(); rulePos++) {
			GenAuditRule audit = (GenAuditRule)it.next();
			if(audit.getTarget() == null || (audit.getTarget().getTargetClass() == null)) continue;
			String targetClassName = audit.getTarget().getTargetClassModelQualifiedName();
			String modeAttr = audit.isUseInLiveMode() ? "Live" : "Batch";
			String name = audit.getName() != null ? audit.getName() : audit.getId();
			String message = audit.getMessage() != null ? audit.getMessage() : name + " audit violated";
%>
			<constraint id="<%=org.eclipse.gmf.internal.common.codegen.Conversions.escapeXML(audit.getId())%>"
<%			if(audit.requiresConstraintAdapter()) {%>
				lang="Java" class="<%=audit.getConstraintAdapterQualifiedClassName()%>"
<%			} else { %>
				lang="OCL"
<%			} %>
				name="<%=org.eclipse.gmf.internal.common.codegen.Conversions.escapeXML(name)%>" mode="<%=modeAttr%>"
				severity="<%=audit.getSeverity().getName()%>" statusCode="<%=Integer.toString(200 + rulePos)%>">
<%			if(!audit.requiresConstraintAdapter()) {%>
				<![CDATA[<%=audit.getRule() != null ? audit.getRule().getBody() : ""%>]]>
<%			} %>			
	            <description><![CDATA[<%=audit.getDescription() != null ? audit.getDescription():""%>]]></description>
	            <message><![CDATA[<%=message%>]]></message>
				<target class="<%=targetClassName%>"/>
			</constraint>
<%
		} // end of audits in category
%>
		</constraints>
<%		
	} // end of category loop
%>
	</constraintProvider>
</extension>

<extension point="org.eclipse.emf.validation.constraintBindings">
<%
	String pluginID = genDiagram.getEditorGen().getPlugin().getID();
	for(java.util.Iterator it = rootContainer.getAllRulesToTargetContextMap().entrySet().iterator(); it.hasNext();) {
		java.util.Map.Entry ctx2Rules = (java.util.Map.Entry)it.next();
		java.util.List rules = (java.util.List)ctx2Rules.getValue();
		if(rules.isEmpty()) continue;
		String ctxID = (String)ctx2Rules.getKey();
		GenAuditRule ruleTarget = (GenAuditRule)rules.get(0);
%>
	<clientContext default="false" id="<%=pluginID%>.<%=ctxID%>">
		<selector class="<%=ruleTarget.getContextSelectorQualifiedClassName()%>"/>
	</clientContext>
	<binding context="<%=pluginID%>.<%=ctxID%>">
<%
		for(java.util.Iterator ruleIt = rules.iterator(); ruleIt.hasNext();) {
			GenAuditRule nextRule = (GenAuditRule)ruleIt.next();
%>	
		<constraint ref="<%=pluginID%>.<%=org.eclipse.gmf.internal.common.codegen.Conversions.escapeXML(nextRule.getId())%>"/>
<%
		} // end of rules in context
%>
	</binding>
<%
	} // end of contexts iteration
%>		
</extension>
<%
}
%>