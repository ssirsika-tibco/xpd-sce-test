<?xml version="1.0" encoding="UTF-8"?>
<!-- ********************************************************************** -->
<!-- Create the artefacts necessary to stage a controlled build             -->
<!-- Should try to get incorporated into Builder at some stage              -->
<!-- ********************************************************************** -->
<project name="com.tibco.xpd.script.feature post build script" default="main">

    <target name="main"
            depends="set-build-props"
            description="The default entry point for the script"/>

    <target name="feature-version">
                <tempfile property="currentVersion.property.temp.file" />
                <xslt in="features/${feature}/feature.xml"
                      out="${currentVersion.property.temp.file}"
                      style="${autobuild.dir.scripts}/private/featureVersion.xsl">
                    <param name="propname" expression="feature-version" />
                </xslt>
                <property file="${currentVersion.property.temp.file}" />
                <echo message="${feature-version}"/>
                <!--delete file="${currentVersion.property.temp.file}" /-->
    </target>

    <target name="feature-qualifier">
        <loadfile property="feature-qualifier" 
                srcfile="featureVersions.properties">
            <filterchain>
                <tokenfilter>
                    <containsstring contains="${feature}"/>
		    <!--replacestring from=".jar" to=""/i-->
                    <replaceregex pattern="^.*=" replace=""/>
                    <!--containsregex pattern="\d" /-->
<scriptfilter language="javascript">
        <![CDATA[self.setToken(self.getToken().substring(0,3));]]>
    </scriptfilter>
                </tokenfilter>
            </filterchain>
        </loadfile>
        <echo message="${feature-qualifier}**"/>
    </target>

    <target name="set-build-props" >

        <exec executable="ls" output="${autobuild.dir.output.candidates}/feature-list">
            <arg value="${autobuild.dir.output.candidates}/jar/release/features"/>
        </exec>
        <loadfile property="feature-list" 
                srcfile="${autobuild.dir.output.candidates}/feature-list"/>
        <loadfile property="feature-qualified-name" 
                srcfile="${autobuild.dir.output.candidates}/feature-list">
            <filterchain>
                <tokenfilter>
                    <containsstring contains="${feature}"/>
		    <replacestring from=".jar" to=""/>
                    <!--replaceregex pattern="'\n'" to=""/-->
                </tokenfilter>
            </filterchain>
        </loadfile>
        <delete file="feature-list"/>

        <exec executable="ls" output="${autobuild.dir.output.candidates}/plugin-list">
            <arg value="${autobuild.dir.output.candidates}/jar/release/plugins"/>
        </exec>
        <loadfile property="plugin-list" 
                srcfile="${autobuild.dir.output.candidates}/plugin-list"/>
        <delete file="plugin-list"/>

        <exec executable="svn" output="svn-info">
            <arg value="info"/>
        </exec>
        <loadfile srcfile="svn-info" property="svn.revision">
            <filterchain>
                <tokenfilter>
                    <containsregex pattern="Revision"/>
                </tokenfilter>
            </filterchain>
        </loadfile>
        <delete file="svn-info"/>

        <echoproperties destfile="last-build.properties" />
    </target>

</project>

