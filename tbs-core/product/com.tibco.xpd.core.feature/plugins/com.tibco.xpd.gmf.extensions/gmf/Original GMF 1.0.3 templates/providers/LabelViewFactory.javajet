<%@ jet package="org.eclipse.gmf.codegen.templates.providers" class="LabelViewFactoryGenerator"
	imports="org.eclipse.gmf.codegen.gmfgen.* org.eclipse.gmf.common.codegen.*"%>
<%
final GenLabel genLabel = (GenLabel) ((Object[]) argument)[0];
final ImportAssistant importManager = (ImportAssistant) ((Object[]) argument)[1];
GenDiagram genDiagram = genLabel.getDiagram();
%>
<%@ include file="../copyright4java.jetinc"%>
<%importManager.emitPackageStatement(stringBuffer);%>

import java.util.ArrayList;
import java.util.List;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.gmf.runtime.diagram.core.preferences.PreferencesHint;
import org.eclipse.gmf.runtime.diagram.ui.view.factories.AbstractLabelViewFactory;
import org.eclipse.gmf.runtime.notation.Node;
import org.eclipse.gmf.runtime.notation.View;
<%importManager.markImportLocation(stringBuffer);%>

/**
 * @generated
 */
public class <%=genLabel.getNotationViewFactoryClassName()%> extends AbstractLabelViewFactory {

	/**
	 * @generated
	 */
	public View createView(IAdaptable semanticAdapter, View containerView, String semanticHint, int index, boolean persisted, PreferencesHint preferencesHint) {
		Node view = (Node) super.createView(semanticAdapter, containerView, semanticHint, index, persisted, preferencesHint);
<%
int x = 0;
int y = 0;
LabelOffsetAttributes labelOffset = (LabelOffsetAttributes) genLabel.getViewmap().find(LabelOffsetAttributes.class);
if (labelOffset != null) {
	x = labelOffset.getX();
	y = labelOffset.getY();
} else if (genLabel instanceof GenExternalNodeLabel) {
	y = 5;
}
if ((x != 0 || y != 0) && (genLabel instanceof GenLinkLabel || genLabel instanceof GenExternalNodeLabel)) {
%>
		<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.Location")%> location = (<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.Location")%>) view.getLayoutConstraint();
		<%=importManager.getImportedName("org.eclipse.gmf.runtime.draw2d.ui.mapmode.IMapMode")%> mapMode = <%=importManager.getImportedName("org.eclipse.gmf.runtime.diagram.ui.util.MeasurementUnitHelper")%>.getMapMode(containerView.getDiagram().getMeasurementUnit());
		location.setX(mapMode.DPtoLP(<%=x%>));
		location.setY(mapMode.DPtoLP(<%=y%>));
<%}%>
		return view;
	}

	/**
	 * @generated
	 */
	protected List createStyles(View view) {
		List styles = new ArrayList();
<%if (genLabel.getModelFacet() instanceof DesignLabelModelFacet) {%>
		styles.add(<%=importManager.getImportedName("org.eclipse.gmf.runtime.notation.NotationFactory")%>.eINSTANCE.createDescriptionStyle());
<%}%>
		return styles;
	}
}
<%importManager.emitSortedImports();%>
