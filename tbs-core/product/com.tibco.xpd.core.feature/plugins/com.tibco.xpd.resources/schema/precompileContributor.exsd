<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="Copyright (c) TIBCO Software Inc 2004, 2007. All rights reserved." xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="Copyright (c) TIBCO Software Inc 2004, 2007. All rights reserved." id="precompileContributor" name="precompileContributor"/>
      </appinfo>
      <documentation>
         This extension point allows you to enable or disable precompile option on a project.
&lt;p&gt;
This extension point requires to provide a contributor for each source resource that can be configured for pre-compile on a Studio project. If there are no source resources that can provide any artifacts to pre-compile a project then that project cannot be marked for pre-compile.
&lt;/p&gt;
      </documentation>
   </annotation>

   <include schemaLocation="expressionLanguage.exsd"/>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="contributor"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="contributor">
      <annotation>
         <documentation>
            Contributor that precompiles the given project and generates/copies the derived artefacts under .precompiled folder.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="sourceArtifactFilter"/>
         </sequence>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  &lt;p&gt;
This class provides the following life cycle methods:
&lt;li&gt;precompile&lt;/li&gt; -  anything that the project needs to get prepared before the precompile starts
&lt;li&gt;preservePrecompiledArtifacts&lt;/li&gt; - copy the generated artifacts from source location to the target precompiled location
&lt;li&gt;postPrecompile&lt;/li&gt; - anything that needs to be done after precompile
&lt;li&gt;getSourceResource&lt;/li&gt; - source resource that needs to be copied under .precompiled location
&lt;li&gt;getPrecompileTarget&lt;/li&gt; - target precompiled path
&lt;li&gt;aboutToDisablePrecompile&lt;/li&gt; - anything that needs to do be done before precompile is disabled
&lt;li&gt;postPrecompileDisabled&lt;/li&gt; - anything that needs to be done after the precompile is disabled
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="com.tibco.xpd.resources.precompile.AbstractPreCompileContributor:"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="contributorId" type="string" use="required">
            <annotation>
               <documentation>
                  Id of the contribution
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="sourceArtifactFilter">
      <annotation>
         <documentation>
            Filter expressions that should return TRUE if the passed IResource is a source artefact that can affect the derived artifacts that this pre-compilaiton contribution deals with.
&lt;p&gt;
If so then this cause standard WorkingCopy&apos;s to treat the working copy for the source resource as ReadOnly and also prevent saves.
&lt;/p&gt;
&lt;p&gt;
Each enablement child element can be used to include a specific source artifact file/type.
&lt;/p&gt;
&lt;p&gt;
For the project to be set as precompiled there should be at least one resource in this project that matches at least one of every contributor&apos;s sourceArtifactFilters.
&lt;/p&gt;
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="enablement"/>
         </sequence>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         4.0.0
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         &lt;pre&gt;
&lt;extension
          point=&quot;com.tibco.xpd.resources.precompileContributor&quot;&gt;
       &lt;contributor
             class=&quot;com.tibco.xpd.bom.xsdtransform.precompile.Bom2XsdPreCompileContributor&quot;
             contributorId=&quot;bom2xsdPrecompileContributor&quot;&gt;
          &lt;sourceArtifactFilter&gt;
             &lt;enablement&gt;
                &lt;or&gt;
                   &lt;and&gt;
                      &lt;instanceof
                            value=&quot;org.eclipse.core.resources.IFile&quot;&gt;
                      &lt;/instanceof&gt;
                      &lt;test
                            property=&quot;org.eclipse.core.resources.extension&quot;
                            value=&quot;bom&quot;&gt;
                      &lt;/test&gt;
                      &lt;test
                            property=&quot;com.tibco.xpd.resources.specialfolder.inSpecialFolder&quot;
                            value=&quot;bom&quot;&gt;
                      &lt;/test&gt;
                   &lt;/and&gt;
                   &lt;and&gt;
                      &lt;instanceof
                            value=&quot;org.eclipse.core.resources.IFile&quot;&gt;
                      &lt;/instanceof&gt;
                      &lt;test
                            property=&quot;org.eclipse.core.resources.extension&quot;
                            value=&quot;wsdl&quot;&gt;
                      &lt;/test&gt;
                      &lt;test
                            property=&quot;com.tibco.xpd.resources.specialfolder.inSpecialFolder&quot;
                            value=&quot;wsdl&quot;&gt;
                      &lt;/test&gt;
                   &lt;/and&gt;
                   &lt;and&gt;
                      &lt;instanceof
                            value=&quot;org.eclipse.core.resources.IFile&quot;&gt;
                      &lt;/instanceof&gt;
                      &lt;test
                            property=&quot;org.eclipse.core.resources.extension&quot;
                            value=&quot;xsd&quot;&gt;
                      &lt;/test&gt;
                      &lt;test
                            property=&quot;com.tibco.xpd.resources.specialfolder.inSpecialFolder&quot;
                            value=&quot;wsdl&quot;&gt;
                      &lt;/test&gt;
                   &lt;/and&gt;
                &lt;/or&gt;
             &lt;/enablement&gt;
          &lt;/sourceArtifactFilter&gt;
       &lt;/contributor&gt;
&lt;/extension&gt;
&lt;/pre&gt;
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         &lt;p&gt;
Source artifacts in the project will be enabled for pre-compile as shown in the example.
&lt;/p&gt;
&lt;p&gt;
When pre-compile is disabled clean build is run on the project(s).
&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         &lt;p&gt;
AbstractPrecompileContributor class provides the required basic implementation that most of the contributors can make use of.
&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="copyright"/>
      </appinfo>
      <documentation>
         Copyright (c) TIBCO Software Inc 2004, 2007. All rights reserved.
      </documentation>
   </annotation>

</schema>
