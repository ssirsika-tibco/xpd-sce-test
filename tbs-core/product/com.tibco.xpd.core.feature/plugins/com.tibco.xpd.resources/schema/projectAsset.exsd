<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="com.tibco.xpd.resources.ui" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="com.tibco.xpd.resources.ui" id="newProjectAsset" name="New XPD Project Asset"/>
      </appInfo>
      <documentation>
         This extension point allows addition of new asset types to XPD projects.  The users will be able to select the asset type during the creation of an XPD project.  A number of wizard pages can be defined for each asset type.
&lt;p&gt;
&lt;strong&gt;Since 3.5&lt;/strong&gt; versioning has been introduced to the asset type extension.  This is used in determining whether migration is required for projects created in the previous releases of the product.  See the &lt;code&gt;com.tibco.xpd.resources.projectAssetMigration&lt;/code&gt; extension point for more details.
&lt;/p&gt;
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="asset" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="category" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="asset">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="name" icon="icon"/>
         </appInfo>
         <documentation>
            Project asset to include in the new XPD project wizard.  This will allow new projects to be configured for this asset type if selected.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="wizardpage" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="description" minOccurs="0" maxOccurs="1"/>
            <element ref="dependsOn" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="bindings" minOccurs="0" maxOccurs="1"/>
            <element ref="assetMigration" minOccurs="0" maxOccurs="1"/>
            <choice minOccurs="0" maxOccurs="1">
               <element ref="staticVersion"/>
               <element ref="dynamicVersion"/>
            </choice>
            <element ref="customParam" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  unique ID of this asset configurator
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  human-readable name that will appear in the asset selection in the new XPD project wizard
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="configurator" type="string" use="required">
            <annotation>
               <documentation>
                  the configurator will configure this asset type for the given new project. The configurator can implement two different interfaces:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;com.tibco.xpd.resources.projectconfig.projectassets.IAssetConfigurator&lt;/code&gt; - if no access to configuration objects of other asset types is reqiured,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;com.tibco.xpd.resources.projectconfig.projectassets.IAssetConfigurator2&lt;/code&gt; - if access to configuration objects of other asset types is required.
&lt;/ul&gt;
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="com.tibco.xpd.resources.projectconfig.projectassets.IAssetConfigurator"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="configuration" type="string">
            <annotation>
               <documentation>
                  object that will be used to collect data from the wizard pages and passed to the configurator to configure this asset type for a project
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="java.lang.Object"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="visible" type="boolean" use="default" value="true">
            <annotation>
               <documentation>
                  determines whether this asset type is shown in the new project wizard (default value is true). If set to false then the asset type will not appear in the new project wizard selection but will still be allowed to configure wizard pages and a configurator.  The wizard pages will be asked to update the configuration (although the wizard page will not be visible) and the configurator will be allowed to configure the project at the end.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="extends" type="string">
            <annotation>
               <documentation>
                  set the id of the asset type to extend. This allows expanding an existing project asset.  The project wizard will only show the parent asset but will allow the extension asset to contribute pages and configure the project when this parent asset is selected.
               </documentation>
               <appInfo>
                  <meta.attribute kind="identifier" basedOn="com.tibco.xpd.resources.projectAsset/asset/@id"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="category" type="string">
            <annotation>
               <documentation>
                  category this asset belongs to
               </documentation>
            </annotation>
         </attribute>
         <attribute name="icon" type="string">
            <annotation>
               <documentation>
                  icon assigned to the asset
               </documentation>
               <appInfo>
                  <meta.attribute kind="resource"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="showConfigPageWhenInvisible" type="boolean" use="default" value="false">
            <annotation>
               <documentation>
                  determines whether this asset configuration page is shown in the new project wizard (default value is false). If set to false then the asset configuration page will not appear in the new project wizard .If set to true the wizard page will  be visible even when the asset visibility is set to false.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="wizardpage">
      <annotation>
         <documentation>
            Wizard page to include in the new XPD project for this asset type.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="page" type="string" use="required">
            <annotation>
               <documentation>
                  wizard page to show in the new XPD project wizard to allow configuration of this asset type
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="com.tibco.xpd.resources.projectconfig.projectassets.IAssetWizardPage"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="description" type="string">
      <annotation>
         <appInfo>
            <meta.element translatable="true"/>
         </appInfo>
         <documentation>
            Description of the asset type that will appear in the new project wizard asset selection page.  This text will be added to a &lt;code&gt;org.eclipse.ui.forms.widgets.FormText&lt;/code&gt; control - see the class for more details on what text formatting is allowed.
         </documentation>
      </annotation>
   </element>

   <element name="dependsOn">
      <annotation>
         <documentation>
            Add assets that this asset type depends on.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="assetId" type="string" use="required">
            <annotation>
               <documentation>
                  id of the asset this asset depends on
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="category">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="name" icon="icon"/>
         </appInfo>
         <documentation>
            Category is a purely graphical element for grouping the related assets.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="description" minOccurs="0" maxOccurs="1"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  unique name that will be used to identify this category.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  translatable name that will be used in the UI for this category.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="parentCategory" type="string">
            <annotation>
               <documentation>
                  optional parent category id. This categories to create hierarchical categories. The referenced category must exist.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="icon" type="string">
            <annotation>
               <documentation>
                  icon assigned to the category
               </documentation>
               <appInfo>
                  <meta.attribute kind="resource"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="bindings">
      <annotation>
         <documentation>
            (Since 3.5) &lt;strong&gt;Only applies to extending asset types that add nature(s) to a project.&lt;/strong&gt;  This allows the binding of this asset type to a global destination(s) and project nature(s).  This will typically be used during the import of projects, created in previous versions of Studio, to identify if this asset type is configured for the project (it may be that the asset type was introduced in a later version of Studio). If the project has any of the bound global destinations enabled then a validation issue will be raised if one or more  of the bound natures is missing from the project.  A quick-fix will then add the missing nature(s) to the project.  If no global destinations are bound then this will mean that the nature(s) needs to be present irrespective of the global destination selected.
&lt;i&gt;Note: The natures added here should reflect the natures the Configurator is setting.&lt;/i&gt;
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="nature" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="globalDestination" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
      </complexType>
   </element>

   <element name="nature">
      <annotation>
         <documentation>
            The nature to bind to this asset.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  id of the nature.
               </documentation>
               <appInfo>
                  <meta.attribute kind="identifier" basedOn="org.eclipse.core.resources.natures/@id"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="globalDestination">
      <annotation>
         <documentation>
            The global destination to bind to this asset.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  id of the global destination.
               </documentation>
               <appInfo>
                  <meta.attribute kind="identifier" basedOn="com.tibco.xpd.destinations.globalDestinationEnvironment/globalDestination/@id"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="assetMigration">
      <annotation>
         <documentation>
            (Since 3.5) Provides the migration of the asset.  This will be used during the import of projects from the previous version of the product to migrate the project to the latest revision.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="migrateAfter" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  implements &lt;code&gt;IProjectAssetMigration&lt;/code&gt; that provides the migration for this asset.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":com.tibco.xpd.resources.projectconfig.projectassets.IProjectAssetMigration"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="migrateAfter">
      <annotation>
         <documentation>
            Provide an asset migration dependency.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="assetId" type="string" use="required">
            <annotation>
               <documentation>
                  id of the asset this asset should migrate after.
               </documentation>
               <appInfo>
                  <meta.attribute kind="identifier" basedOn="com.tibco.xpd.resources.projectAsset/asset/@id"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="staticVersion">
      <annotation>
         <documentation>
            Use a static version for this asset.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="version" type="string" use="required">
            <annotation>
               <documentation>
                  current version of this asset.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="dynamicVersion">
      <annotation>
         <documentation>
            Calculate the version of this asset dynamically
         </documentation>
      </annotation>
      <complexType>
         <attribute name="versionProvider" type="string" use="required">
            <annotation>
               <documentation>
                  class that will calculate the current version of this asset.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":com.tibco.xpd.resources.projectconfig.projectassets.IProjectAssetVersionProvider"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="customParam">
      <annotation>
         <documentation>
            Custom parameters that allows additional configuration of this asset (see API Information below for details).
         </documentation>
      </annotation>
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  name of the costum parameter
               </documentation>
            </annotation>
         </attribute>
         <attribute name="value" type="string" use="required">
            <annotation>
               <documentation>
                  value of the custom parameter
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>


   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         &lt;pre&gt;
&lt;extension point=&quot;com.tibco.xpd.resources.projectAsset&quot;&gt;
 &lt;asset 
  configuration=&quot;com.tibco.xpd.ProcessAssetConfig&quot;
  configurator=&quot;com.tibco.xpd.ProcessAssetConfigurator&quot;
        id=&quot;com.tibco.xpd.asset.process&quot;
        name=&quot;Process Asset&quot;&gt;
         &lt;description&gt;
               This will configure the process asset.
            &lt;/description&gt;
            &lt;wizardpage page=&quot;com.tibco.xpd.processAssetWizardPage&quot;/&gt;
 &lt;/asset&gt;
&lt;/extension&gt;
&lt;/pre&gt;
&lt;br&gt;
(Since 3.2) The following shows the use of the provided classes that can be used for asset types that want to contribute a special folder only:
&lt;pre&gt;
&lt;extension point=&quot;com.tibco.xpd.resources.projectAsset&quot;&gt;
  &lt;asset 
    configuration= &quot;com.tibco.xpd.resources.projectconfig.projectassets.SpecialFolderAssetConfiguration&quot;
    name=&quot;%projectAsset.services.name&quot;&gt;
 &lt;configurator class=&quot;com.tibco.xpd.resources.projectconfig.projectassets.SpecialFolderAssetConfigurator&quot;&gt;
  &lt;parameter name=&quot;kind&quot; value=&quot;wsdl&quot;/&gt;
  &lt;parameter name=&quot;defaultFolder&quot; value=&quot;%projectAsset.services.defaultFolder&quot; /&gt;
 &lt;/configurator&gt;
 &lt;description&gt;
  %projectAsset.services.description
 &lt;/description&gt;
   &lt;/asset&gt;
&lt;/extension&gt;
&lt;/pre&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiinfo"/>
      </appInfo>
      <documentation>
         &lt;h3&gt;CustomParam&lt;/h3&gt;
&lt;code&gt;CustomParam&lt;/code&gt; allows additional configuration of the asset.  Currently there is one supported parameter:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;notAppliedByDefault&lt;/strong&gt; - applies when the visibility of this asset is set to false.  By default hidden assets are always applied to all project types.  Setting this parameter to true will only apply this hidden asset to bound project types.&lt;/li&gt;
&lt;/ul&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         &lt;p&gt;
An asset type that will only add a special folder to a project can use the following classes &lt;i&gt;See Examples for the use of these classes&lt;/i&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;com.tibco.xpd.resources.projectconfig.projectassets.SpecialFolderAssetConfigurator&lt;/code&gt; - for the configurator.  See class for details on initialisation data.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;com.tibco.xpd.resources.projectconfig.projectassets.SpecialFolderAssetConfiguration&lt;/code&gt; - for the configuration.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;strong&gt;NOTE:&lt;/strong&gt;Since 3.2 it is recommended that if an asset type is only contributing a special folder then it should not contribute any wizard pages.  This will ensure that all assets of this kind will have their special folders set via a single page in the new project wizard.  This is to avoid having a number of pages in the wizard with only a single control.  If the asset type does need to add wizard(s) then it becomes its responsibility to handle the special folder control.  See the example above of how to implement this new feature.)&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;
The following abstract classes are also provided, for convenience, if the base functionality of the asset is to add a special folder:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;com.tibco.xpd.resources.projectconfig.projectassets.AbstractSpecialFolderAssetConfigurator&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;com.tibco.xpd.resources.projectconfig.projectassets.AbstractSpecialFolderAssetWizardPage&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) TIBCO Software Inc 2004, 2011. All rights reserved.
      </documentation>
   </annotation>

</schema>
