<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="com.tibco.xpd.validation" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="com.tibco.xpd.validation" id="provider" name="ValidationProvider"/>
      </appInfo>
      <documentation>
         The validation provider extension point should be used to define validation providers, rules, issues and preference groups.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="provider" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="issue" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="preferenceGroup" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="provider">
      <annotation>
         <documentation>
            validation provider.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="rule" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  provider id
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  provider name
               </documentation>
            </annotation>
         </attribute>
         <attribute name="scopeProvider" type="string">
            <annotation>
               <documentation>
                  implement IScopeProvider to provide the scope for the validation
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="com.tibco.xpd.validation.provider.IScopeProvider"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="markerType" type="string">
            <annotation>
               <documentation>
                  optional marker type. If not specified the default XPD marker type will be used.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="rule">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="class"/>
         </appInfo>
         <documentation>
            Validation rule.  A rule can create one or more issues (which can be defined either in this extension or other extensions of this extension point).
         </documentation>
      </annotation>
      <complexType>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  implement IValidationRule to create a validation rule.  This implementation can create one or more issues.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="com.tibco.xpd.validation.rules.IValidationRule"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="validateOnSaveOnly" type="boolean">
            <annotation>
               <documentation>
                  Set this to &apos;true&apos; if the rule shoud only be run during save validation run. By default, the rule will be validated both on live and on save.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="issue">
      <annotation>
         <documentation>
            Validation issue is a problem message that will appear in the problems view.  Issue can be created by one or more rules, from any validation provider extension. There is no link beween the issue and the contributer. This means that issues are contributed system wide.
&lt;p&gt;
Since v3.3.0: You may now add one or more &lt;code&gt;resolution&lt;/code&gt; children. Each is a reference to the Id of a resolution contributed via &lt;code&gt;com.tibco.xpd.validation.reusableResolutions&lt;/code&gt; extension point.
&lt;/p&gt;
&lt;p&gt; 
These resolutions will appear in the quick fix list for the validation problem issue. The resolution may be provided by another feature/plug-in.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="resolution" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  id of the issue.  This id has to be unique across all extensions.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="message" type="string" use="required">
            <annotation>
               <documentation>
                  message (String.format style) to add to problems view for this issue.  Since 3.1 this also supports MessageFormat style strings.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="severity" use="required">
            <annotation>
               <documentation>
                  default severity level
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="ERROR">
                  </enumeration>
                  <enumeration value="WARNING">
                  </enumeration>
                  <enumeration value="INFO">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="preferenceDescription" type="string">
            <annotation>
               <documentation>
                  preference description to add to the preference UI (eg, preference page) for this issue.  If the preference description is not provided then the message will be used.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="preferenceGroupId" type="string">
            <annotation>
               <documentation>
                  id of the preference group this issue should be assigned to.  This preference group can either be defined in this extension or other extension of this extension point.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="preferenceGroup">
      <annotation>
         <documentation>
            Preference group.  This will be used to group issues together on an UI (e.g. preference page) in an expandable control.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  id of the group.  This id has to be unique across all extensions.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  short description of this group.  This group&apos;s expandable control will have the text set to this description.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="preferenceId" type="string">
            <annotation>
               <documentation>
                  preference id.  All groups (from all extensions) with the same preference id will be grouped together in the UI (e.g., on the same preference page).
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="resolution">
      <annotation>
         <documentation>
            Since v3.3.0: You may now add one or more &lt;code&gt;resolution&lt;/code&gt; children. Each is a reference to the Id of a resolution contributed via &lt;code&gt;com.tibco.xpd.validation.reusableResolutions&lt;/code&gt; extension point.
&lt;/p&gt;
&lt;p&gt; 
These resolutions will appear in the quick fix list for the validation problem issue. The resolution may be provided by another feature/plug-in.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  Reference to the Id attribute of a &lt;code&gt;reusableResolutions/resolution&lt;/code&gt; contribution.
&lt;p&gt;
Use browse/content assist to find contributed resolutions.
&lt;/p&gt;
               </documentation>
               <appInfo>
                  <meta.attribute kind="identifier" basedOn="com.tibco.xpd.validation.reusableResolutions/resolution/@id"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="canApplyToMultiple" type="boolean" use="default" value="false">
            <annotation>
               <documentation>
                  Set to true if this resolution can be applied to multiple (similar) validation problems (default is true).  
&lt;p&gt;
This causes all problems with the same issue id to be found and selected by default in the quick fix dialog.
&lt;/p&gt;
&lt;p&gt;
The resolution is called once per problem.
&lt;/p&gt;
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         &lt;p&gt;
&lt;b&gt;preferenceGroup&lt;/b&gt; allows the grouping of issues under a heading for use in an UI (e.g. preference page).  To take advantage of this feature &lt;code&gt;com.tibco.xpd.validation.preferences.control.PreferenceGroupsControl&lt;/code&gt; can be used to create the expandable group to contain issues assigned to the group (same style as used in the Java compiler Error/Warning preference page).  This class also handle updating of the preference store with the changed severity value for an issue, and restoring back to default.
&lt;/p&gt;
&lt;p&gt;
For convenience, an abstract preference page &lt;code&gt;com.tibco.xpd.validation.preferences.page.AbstractValidationPreferencePage&lt;/code&gt; is provided that will contain all preference groups that have the provided preferenceId set.
&lt;/p&gt;
      </documentation>
   </annotation>


   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         &lt;pre&gt;
&lt;extension
         point=&quot;com.tibco.xpd.validation.provider&quot;&gt;
      &lt;provider
            id=&quot;com.tibco.xpd.cm.validator.id&quot;
            name=&quot;Concepts&quot;
            scopeProvider=&quot;com.tibco.xpd.cm.validator.CMScopeProvider&quot;&gt;
         &lt;rule class=&quot;com.tibco.xpd.cm.validator.ClassNameRule&quot;/&gt;
         &lt;rule class=&quot;com.tibco.xpd.cm.validator.ClassDuplicateNameRule&quot;/&gt;
      &lt;/provider&gt;
      &lt;issue
            id=&quot;conceptNameInvalidName.issue&quot;
            message=&quot;%conceptNameInvalidName.issue.message&quot;
            preferenceGroupId=&quot;com.tibco.xpd.cm.prefgroup.name&quot;
            severity=&quot;ERROR&quot;/&gt;
      &lt;issue
            id=&quot;conceptNameStartWithCapital.issue&quot;
            message=&quot;%conceptNameStartWithCapital.issue.message&quot;
            preferenceGroupId=&quot;com.tibco.xpd.cm.prefgroup.name&quot;
            severity=&quot;WARNING&quot;/&gt;
      &lt;issue
            id=&quot;conceptDuplicateName.issue&quot;
            message=&quot;%conceptDuplicateName.issue.message&quot;
            preferenceGroupId=&quot;com.tibco.xpd.cm.prefgroup.name&quot;
            severity=&quot;ERROR&quot;/&gt;
      &lt;issue
            id=&quot;conceptSingleInheritance.issue&quot;
            message=&quot;%conceptSingleInheritance.issue.message&quot;
            preferenceGroupId=&quot;com.tibco.xpd.cm.prefgroup.inheritance&quot;
            severity=&quot;ERROR&quot;/&gt;
      &lt;preferenceGroup
            id=&quot;com.tibco.xpd.cm.prefgroup.name&quot;
            name=&quot;Name Con&amp;amp;flicts&quot;
            preferenceId=&quot;com.tibco.xpd.cm.pref&quot;/&gt;
      &lt;preferenceGroup
            id=&quot;com.tibco.xpd.cm.prefgroup.inheritance&quot;
            name=&quot;In&amp;amp;heritance conflicts&quot;
            preferenceId=&quot;com.tibco.xpd.cm.pref&quot;/&gt;
   &lt;/extension&gt;
&lt;/pre&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         &lt;p&gt;
If a custom marker type (that extends the core &lt;code&gt;com.tibco.xpd.validation.ValidationMarker&lt;/code&gt; marker type) is bound to this validation then a marker resolution will also have to be defined for this marker if quick fixes are required.  Extend extension &lt;code&gt;org.eclipse.ui.ide.markerResolution&lt;/code&gt; and use &lt;code&gt;com.tibco.xpd.validation.resolutions.GenericResolutionGenerator&lt;/code&gt;
as the generator class; this class uses the extension &lt;code&gt;com.tibco.xpd.validation.resolution&lt;/code&gt;
to build the quick fixes for validation issues.
&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) TIBCO Software Inc 2004, 2008. All rights reserved.
      </documentation>
   </annotation>

</schema>
