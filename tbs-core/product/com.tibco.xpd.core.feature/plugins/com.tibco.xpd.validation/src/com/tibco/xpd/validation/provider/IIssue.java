/*
 * Copyright (c) TIBCO Software Inc 2004, 2007. All rights reserved.
 */
package com.tibco.xpd.validation.provider;

import java.util.Collection;

import org.eclipse.core.resources.IMarker;

/**
 * The IIssue interface provides access to issue information generated by the
 * validation engine.
 * 
 * @author nwilson
 */
public interface IIssue {
    /** ID marker. */
    String ID = "issueId"; //$NON-NLS-1$

    /** Destination ID marker. */
    public String DESTINATION_ID = "destinationId"; //$NON-NLS-1$

    /** Affected URI marker. */
    String AFFECTED_URI = "affectedUri"; //$NON-NLS-1$

    /** Validate on save only marker. */
    public String VALIDATE_ON_SAVE_ONLY = "validateOnSaveOnly"; //$NON-NLS-1$

    /** validation provider id. */
    String PROVIDER_ID = "providerId"; //$NON-NLS-1$

    /** validation rule id. */
    String RULE_ID = "ruleId"; //$NON-NLS-1$

    /**
     * @return The issue id.
     */
    String getId();

    /**
     * @return The descriptive location of this issue.
     */
    String getLocation();

    /**
     * @return The destination environment that generated this issue.
     */
    String getDestination();

    /**
     * @return The destination environment ID that generated this issue.
     */
    String getDestinationId();

    /**
     * @return The internal location of the issue.
     */
    String getUri();

    /**
     * @return The URI of the object that was validated.
     */
    String getAffectedUri();

    /**
     * @return The marker type.
     */
    String getMarkerType();

    /**
     * @return Messages to use for formatting error text.
     */
    Collection<String> getMessages();

    /**
     * Returns any additional info which needs to be stored on the marker.
     * 
     * @return The additional information string.
     */
    String getAdditionalInfoString();

    /**
     * @param message
     *            The message to create.
     */
    void createMessage(String message);

    /**
     * @return The issue message.
     */
    String getMessage();

    /**
     * Get the severity of this issue. The value will correspond to the
     * <code>{@link IMarker}</code> severity value, or -1 for ignore.
     * 
     * @return <code>{@link IMarker}</code> severity value, or -1 for ignore.
     */
    Integer getSeverity();

    /**
     * @return the validateOnSaveOnly flag for the issue
     */
    public boolean isValidateOnSaveOnly();

    /**
     * @return the validation provider ID contributing the rule
     */
    public String getProviderId();

    /**
     * @return the validation rule ID raising the issue
     */
    public String getRuleId();
}
