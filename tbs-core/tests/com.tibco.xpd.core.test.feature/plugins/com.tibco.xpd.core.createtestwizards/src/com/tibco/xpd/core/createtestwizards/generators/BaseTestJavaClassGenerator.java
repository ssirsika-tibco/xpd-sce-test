package com.tibco.xpd.core.createtestwizards.generators;

import com.tibco.xpd.core.createtestwizards.generatordata.*;

public class BaseTestJavaClassGenerator
{
  protected static String nl;
  public static synchronized BaseTestJavaClassGenerator create(String lineSeparator)
  {
    nl = lineSeparator;
    BaseTestJavaClassGenerator result = new BaseTestJavaClassGenerator();
    nl = null;
    return result;
  }

  public final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "/**" + NL + " * Copyright (c) TIBCO Software Inc 2004-2009. All rights reserved." + NL + " */";
  protected final String TEXT_2 = NL + "package ";
  protected final String TEXT_3 = ";" + NL + "" + NL + "import ";
  protected final String TEXT_4 = ".";
  protected final String TEXT_5 = ";" + NL + "import com.tibco.xpd.core.test.util.TestResourceInfo;" + NL + "" + NL + "/**" + NL + " * ";
  protected final String TEXT_6 = NL + " * <p>" + NL + " * ";
  protected final String TEXT_7 = " - Base test with Business Studio resources class." + NL + " * </p>" + NL + " * <p>" + NL + " * Generated by: createBaseTest.javajet" + NL + " * </p>" + NL + " *" + NL + " * @author" + NL + " * @since" + NL + " */" + NL + "public class ";
  protected final String TEXT_8 = " extends ";
  protected final String TEXT_9 = " {" + NL + "" + NL + "\t/**" + NL + "     * ";
  protected final String TEXT_10 = NL + "     * " + NL + "     * @throws Exception" + NL + "     */" + NL + "    public void test";
  protected final String TEXT_11 = "() throws Exception {" + NL + "    \t// Check all files created correctly." + NL + "    \tcheckTestFilesCreated();" + NL + "    " + NL + "        // TODO Insert you test code here." + NL + "        fail(\"No test code implemented yet.\");" + NL + "        " + NL + "        return;" + NL + "\t}" + NL + "" + NL + "    @Override" + NL + "    protected String getTestName() {" + NL + "        return \"";
  protected final String TEXT_12 = "\"; //$NON-NLS-1$" + NL + "    }" + NL + "" + NL + "    @Override" + NL + "    protected String getTestPlugInId() {" + NL + "        return \"";
  protected final String TEXT_13 = "\"; //$NON-NLS-1$" + NL + "    }" + NL + "" + NL + "    @Override" + NL + "    protected TestResourceInfo[] getTestResources() {" + NL + "        TestResourceInfo[] testResources = new TestResourceInfo[] {";
  protected final String TEXT_14 = NL + "            new TestResourceInfo(\"";
  protected final String TEXT_15 = "\", \"";
  protected final String TEXT_16 = "\"), //$NON-NLS-1$ //$NON-NLS-2$";
  protected final String TEXT_17 = NL + "        };" + NL + "    " + NL + "        return testResources;" + NL + "    }" + NL + "" + NL + "}";
  protected final String TEXT_18 = NL;

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
    stringBuffer.append(TEXT_1);
     BaseTestJavaClassGeneratorData data = (BaseTestJavaClassGeneratorData)argument; 
    stringBuffer.append(TEXT_2);
    stringBuffer.append(data.testPackageId);
    stringBuffer.append(TEXT_3);
    stringBuffer.append(data.testSuperClassPackage);
    stringBuffer.append(TEXT_4);
    stringBuffer.append(data.testSuperClassName);
    stringBuffer.append(TEXT_5);
    stringBuffer.append(data.testClassName);
    stringBuffer.append(TEXT_6);
    stringBuffer.append(data.testName);
    stringBuffer.append(TEXT_7);
    stringBuffer.append(data.testClassName);
    stringBuffer.append(TEXT_8);
    stringBuffer.append(data.testSuperClassName);
    stringBuffer.append(TEXT_9);
    stringBuffer.append(data.testName);
    stringBuffer.append(TEXT_10);
    stringBuffer.append(data.testMethodName);
    stringBuffer.append(TEXT_11);
    stringBuffer.append(data.testName);
    stringBuffer.append(TEXT_12);
    stringBuffer.append(data.testPluginId);
    stringBuffer.append(TEXT_13);
     for (String testResourcePath : data.testResourcePaths) { 
    stringBuffer.append(TEXT_14);
    stringBuffer.append(data.baseResourcePath);
    stringBuffer.append(TEXT_15);
    stringBuffer.append(testResourcePath);
    stringBuffer.append(TEXT_16);
     } 
    stringBuffer.append(TEXT_17);
    stringBuffer.append(TEXT_18);
    return stringBuffer.toString();
  }
}
