<%@ jet 
     package="com.tibco.xpd.core.createtestwizards.generators" 
     class="ValidationTestJavaClassGenerator"
     imports="com.tibco.xpd.core.createtestwizards.generatordata.*  com.tibco.xpd.core.test.validations.ValidationsTestProblemMarkerInfo" 
%>
/**
 * Copyright (c) TIBCO Software Inc 2004-2009. All rights reserved.
 */
<% ValidationTestJavaClassGeneratorData data = (ValidationTestJavaClassGeneratorData)argument; %>
package <%=data.testPackageId%>;

import <%=data.testSuperClassPackage%>.<%=data.testSuperClassName%>;
import com.tibco.xpd.core.test.util.TestResourceInfo;
import com.tibco.xpd.core.test.validations.ValidationsTestProblemMarkerInfo;

/**
 * <%=data.testClassName%>
 * <p>
 * <%=data.testName%> - Test selected validations are correctly raised.
 * </p>
 * <p>
 * Generated by: createBaseTest.javajet
 * </p>
 *
 * <%=data.testDescription%>
 *
 * @author
 * @since
 */
public class <%=data.testClassName%> extends <%=data.testSuperClassName%> {

	public <%=data.testClassName%>() {
		super(<%=data.isCheckProblemsExists%>);
	}

	/**
     * <%=data.testName%>
     * 
     * @throws Exception
     */
    public void test<%=data.testMethodName%>() throws Exception {
		doTestValidations();        
        return;
	}

	@Override
    protected ValidationsTestProblemMarkerInfo[] getValidationProblemMarkerInfos() {
        ValidationsTestProblemMarkerInfo[] markerInfos = new ValidationsTestProblemMarkerInfo[] { 
			<% for (ValidationsTestProblemMarkerInfo markerInfo : data.markerInfos) { %>
			    new ValidationsTestProblemMarkerInfo(
			    		"<%=markerInfo.getResourceURI()%>", //$NON-NLS-1$ 
			    		"<%=markerInfo.getProblemId()%>", //$NON-NLS-1$ 
			    		"<%=markerInfo.getLocationURI()%>", //$NON-NLS-1$ 
			    		"<%=markerInfo.getProblemText()%>", //$NON-NLS-1$ 
			    		"<%=markerInfo.getQuickFixLabel()%>"), //$NON-NLS-1$ 
			    		
			<% } %>                
        };
        return markerInfos;
    }

    @Override
    protected String getTestName() {
        return "<%=data.testName%>"; //$NON-NLS-1$
    }

    @Override
    protected String getTestPlugInId() {
        return "<%=data.testPluginId%>"; //$NON-NLS-1$
    }

    @Override
    protected TestResourceInfo[] getTestResources() {
        TestResourceInfo[] testResources = new TestResourceInfo[] {
        <% for (String testResourcePath : data.testResourcePaths) { %>
            new TestResourceInfo("<%=data.baseResourcePath%>", "<%=testResourcePath%>"), //$NON-NLS-1$ //$NON-NLS-2$
        <% } %>
        };
    
        return testResources;
    }

}
